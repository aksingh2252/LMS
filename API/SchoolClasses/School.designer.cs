#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="school")]
	public partial class SchoolDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertVehicleType(VehicleType instance);
    partial void UpdateVehicleType(VehicleType instance);
    partial void DeleteVehicleType(VehicleType instance);
    partial void InsertBookClass(BookClass instance);
    partial void UpdateBookClass(BookClass instance);
    partial void DeleteBookClass(BookClass instance);
    partial void InsertBookDetail(BookDetail instance);
    partial void UpdateBookDetail(BookDetail instance);
    partial void DeleteBookDetail(BookDetail instance);
    partial void InsertBookFine(BookFine instance);
    partial void UpdateBookFine(BookFine instance);
    partial void DeleteBookFine(BookFine instance);
    partial void InsertBookIssue(BookIssue instance);
    partial void UpdateBookIssue(BookIssue instance);
    partial void DeleteBookIssue(BookIssue instance);
    partial void InsertBookRack(BookRack instance);
    partial void UpdateBookRack(BookRack instance);
    partial void DeleteBookRack(BookRack instance);
    partial void InsertBookSubject(BookSubject instance);
    partial void UpdateBookSubject(BookSubject instance);
    partial void DeleteBookSubject(BookSubject instance);
    partial void InsertBookType(BookType instance);
    partial void UpdateBookType(BookType instance);
    partial void DeleteBookType(BookType instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertClassAttendance(ClassAttendance instance);
    partial void UpdateClassAttendance(ClassAttendance instance);
    partial void DeleteClassAttendance(ClassAttendance instance);
    partial void InsertClassExam(ClassExam instance);
    partial void UpdateClassExam(ClassExam instance);
    partial void DeleteClassExam(ClassExam instance);
    partial void InsertClassFullMark(ClassFullMark instance);
    partial void UpdateClassFullMark(ClassFullMark instance);
    partial void DeleteClassFullMark(ClassFullMark instance);
    partial void InsertClassSubject(ClassSubject instance);
    partial void UpdateClassSubject(ClassSubject instance);
    partial void DeleteClassSubject(ClassSubject instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDesignation(Designation instance);
    partial void UpdateDesignation(Designation instance);
    partial void DeleteDesignation(Designation instance);
    partial void InsertExam(Exam instance);
    partial void UpdateExam(Exam instance);
    partial void DeleteExam(Exam instance);
    partial void InsertExamFullMark(ExamFullMark instance);
    partial void UpdateExamFullMark(ExamFullMark instance);
    partial void DeleteExamFullMark(ExamFullMark instance);
    partial void InsertExamType(ExamType instance);
    partial void UpdateExamType(ExamType instance);
    partial void DeleteExamType(ExamType instance);
    partial void InsertFeeAdmission(FeeAdmission instance);
    partial void UpdateFeeAdmission(FeeAdmission instance);
    partial void DeleteFeeAdmission(FeeAdmission instance);
    partial void InsertFeeAdmissionHead(FeeAdmissionHead instance);
    partial void UpdateFeeAdmissionHead(FeeAdmissionHead instance);
    partial void DeleteFeeAdmissionHead(FeeAdmissionHead instance);
    partial void InsertFeeClass(FeeClass instance);
    partial void UpdateFeeClass(FeeClass instance);
    partial void DeleteFeeClass(FeeClass instance);
    partial void InsertFeeClassHead(FeeClassHead instance);
    partial void UpdateFeeClassHead(FeeClassHead instance);
    partial void DeleteFeeClassHead(FeeClassHead instance);
    partial void InsertFeePayment(FeePayment instance);
    partial void UpdateFeePayment(FeePayment instance);
    partial void DeleteFeePayment(FeePayment instance);
    partial void InsertFeePaymentDetail(FeePaymentDetail instance);
    partial void UpdateFeePaymentDetail(FeePaymentDetail instance);
    partial void DeleteFeePaymentDetail(FeePaymentDetail instance);
    partial void InsertFeePaymentMonth(FeePaymentMonth instance);
    partial void UpdateFeePaymentMonth(FeePaymentMonth instance);
    partial void DeleteFeePaymentMonth(FeePaymentMonth instance);
    partial void InsertFeeRegistration(FeeRegistration instance);
    partial void UpdateFeeRegistration(FeeRegistration instance);
    partial void DeleteFeeRegistration(FeeRegistration instance);
    partial void InsertFeeRegistrationHead(FeeRegistrationHead instance);
    partial void UpdateFeeRegistrationHead(FeeRegistrationHead instance);
    partial void DeleteFeeRegistrationHead(FeeRegistrationHead instance);
    partial void InsertFeeRemark(FeeRemark instance);
    partial void UpdateFeeRemark(FeeRemark instance);
    partial void DeleteFeeRemark(FeeRemark instance);
    partial void InsertFeeSubjectOption(FeeSubjectOption instance);
    partial void UpdateFeeSubjectOption(FeeSubjectOption instance);
    partial void DeleteFeeSubjectOption(FeeSubjectOption instance);
    partial void InsertFeeSubjectOptionHead(FeeSubjectOptionHead instance);
    partial void UpdateFeeSubjectOptionHead(FeeSubjectOptionHead instance);
    partial void DeleteFeeSubjectOptionHead(FeeSubjectOptionHead instance);
    partial void InsertFeeTransport(FeeTransport instance);
    partial void UpdateFeeTransport(FeeTransport instance);
    partial void DeleteFeeTransport(FeeTransport instance);
    partial void InsertFeeTransportHead(FeeTransportHead instance);
    partial void UpdateFeeTransportHead(FeeTransportHead instance);
    partial void DeleteFeeTransportHead(FeeTransportHead instance);
    partial void InsertGrade(Grade instance);
    partial void UpdateGrade(Grade instance);
    partial void DeleteGrade(Grade instance);
    partial void InsertGradeGroup(GradeGroup instance);
    partial void UpdateGradeGroup(GradeGroup instance);
    partial void DeleteGradeGroup(GradeGroup instance);
    partial void InsertGradingScale(GradingScale instance);
    partial void UpdateGradingScale(GradingScale instance);
    partial void DeleteGradingScale(GradingScale instance);
    partial void InsertGradingSystem(GradingSystem instance);
    partial void UpdateGradingSystem(GradingSystem instance);
    partial void DeleteGradingSystem(GradingSystem instance);
    partial void InsertHead(Head instance);
    partial void UpdateHead(Head instance);
    partial void DeleteHead(Head instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertLoginLog(LoginLog instance);
    partial void UpdateLoginLog(LoginLog instance);
    partial void DeleteLoginLog(LoginLog instance);
    partial void InsertMagazine(Magazine instance);
    partial void UpdateMagazine(Magazine instance);
    partial void DeleteMagazine(Magazine instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMonth(Month instance);
    partial void UpdateMonth(Month instance);
    partial void DeleteMonth(Month instance);
    partial void InsertNewsPaper(NewsPaper instance);
    partial void UpdateNewsPaper(NewsPaper instance);
    partial void DeleteNewsPaper(NewsPaper instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPageGroup(PageGroup instance);
    partial void UpdatePageGroup(PageGroup instance);
    partial void DeletePageGroup(PageGroup instance);
    partial void InsertPupil(Pupil instance);
    partial void UpdatePupil(Pupil instance);
    partial void DeletePupil(Pupil instance);
    partial void InsertPupilAdmission(PupilAdmission instance);
    partial void UpdatePupilAdmission(PupilAdmission instance);
    partial void DeletePupilAdmission(PupilAdmission instance);
    partial void InsertPupilAttendance(PupilAttendance instance);
    partial void UpdatePupilAttendance(PupilAttendance instance);
    partial void DeletePupilAttendance(PupilAttendance instance);
    partial void InsertPupilCharge(PupilCharge instance);
    partial void UpdatePupilCharge(PupilCharge instance);
    partial void DeletePupilCharge(PupilCharge instance);
    partial void InsertPupilGrade(PupilGrade instance);
    partial void UpdatePupilGrade(PupilGrade instance);
    partial void DeletePupilGrade(PupilGrade instance);
    partial void InsertPupilMark(PupilMark instance);
    partial void UpdatePupilMark(PupilMark instance);
    partial void DeletePupilMark(PupilMark instance);
    partial void InsertPupilSubject(PupilSubject instance);
    partial void UpdatePupilSubject(PupilSubject instance);
    partial void DeletePupilSubject(PupilSubject instance);
    partial void InsertPupilType(PupilType instance);
    partial void UpdatePupilType(PupilType instance);
    partial void DeletePupilType(PupilType instance);
    partial void InsertPupilWaiveOff(PupilWaiveOff instance);
    partial void UpdatePupilWaiveOff(PupilWaiveOff instance);
    partial void DeletePupilWaiveOff(PupilWaiveOff instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertPurchaseBook(PurchaseBook instance);
    partial void UpdatePurchaseBook(PurchaseBook instance);
    partial void DeletePurchaseBook(PurchaseBook instance);
    partial void InsertPurchaseMagazine(PurchaseMagazine instance);
    partial void UpdatePurchaseMagazine(PurchaseMagazine instance);
    partial void DeletePurchaseMagazine(PurchaseMagazine instance);
    partial void InsertPurchaseNewsPaper(PurchaseNewsPaper instance);
    partial void UpdatePurchaseNewsPaper(PurchaseNewsPaper instance);
    partial void DeletePurchaseNewsPaper(PurchaseNewsPaper instance);
    partial void InsertRack(Rack instance);
    partial void UpdateRack(Rack instance);
    partial void DeleteRack(Rack instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void InsertRegistrationForm(RegistrationForm instance);
    partial void UpdateRegistrationForm(RegistrationForm instance);
    partial void DeleteRegistrationForm(RegistrationForm instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleMenu(RoleMenu instance);
    partial void UpdateRoleMenu(RoleMenu instance);
    partial void DeleteRoleMenu(RoleMenu instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStaffClass(StaffClass instance);
    partial void UpdateStaffClass(StaffClass instance);
    partial void DeleteStaffClass(StaffClass instance);
    partial void InsertStaffLogin(StaffLogin instance);
    partial void UpdateStaffLogin(StaffLogin instance);
    partial void DeleteStaffLogin(StaffLogin instance);
    partial void InsertStaffLoginRole(StaffLoginRole instance);
    partial void UpdateStaffLoginRole(StaffLoginRole instance);
    partial void DeleteStaffLoginRole(StaffLoginRole instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertSubjectFullMark(SubjectFullMark instance);
    partial void UpdateSubjectFullMark(SubjectFullMark instance);
    partial void DeleteSubjectFullMark(SubjectFullMark instance);
    partial void InsertSubjectGradingScale(SubjectGradingScale instance);
    partial void UpdateSubjectGradingScale(SubjectGradingScale instance);
    partial void DeleteSubjectGradingScale(SubjectGradingScale instance);
    partial void InsertSubjectId(SubjectId instance);
    partial void UpdateSubjectId(SubjectId instance);
    partial void DeleteSubjectId(SubjectId instance);
    partial void InsertSubjectOption(SubjectOption instance);
    partial void UpdateSubjectOption(SubjectOption instance);
    partial void DeleteSubjectOption(SubjectOption instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTransportBatch(TransportBatch instance);
    partial void UpdateTransportBatch(TransportBatch instance);
    partial void DeleteTransportBatch(TransportBatch instance);
    partial void InsertTransportDuration(TransportDuration instance);
    partial void UpdateTransportDuration(TransportDuration instance);
    partial void DeleteTransportDuration(TransportDuration instance);
    partial void InsertTransportPupil(TransportPupil instance);
    partial void UpdateTransportPupil(TransportPupil instance);
    partial void DeleteTransportPupil(TransportPupil instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    #endregion
		
		public SchoolDataContext() : 
				base(global::SchoolClasses.Properties.Settings.Default.schoolConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public SchoolDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchoolDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchoolDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchoolDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<VehicleType> VehicleTypes
		{
			get
			{
				return this.GetTable<VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<BookClass> BookClasses
		{
			get
			{
				return this.GetTable<BookClass>();
			}
		}
		
		public System.Data.Linq.Table<BookDetail> BookDetails
		{
			get
			{
				return this.GetTable<BookDetail>();
			}
		}
		
		public System.Data.Linq.Table<BookFine> BookFines
		{
			get
			{
				return this.GetTable<BookFine>();
			}
		}
		
		public System.Data.Linq.Table<BookIssue> BookIssues
		{
			get
			{
				return this.GetTable<BookIssue>();
			}
		}
		
		public System.Data.Linq.Table<BookRack> BookRacks
		{
			get
			{
				return this.GetTable<BookRack>();
			}
		}
		
		public System.Data.Linq.Table<BookSubject> BookSubjects
		{
			get
			{
				return this.GetTable<BookSubject>();
			}
		}
		
		public System.Data.Linq.Table<BookType> BookTypes
		{
			get
			{
				return this.GetTable<BookType>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<ClassAttendance> ClassAttendances
		{
			get
			{
				return this.GetTable<ClassAttendance>();
			}
		}
		
		public System.Data.Linq.Table<ClassExam> ClassExams
		{
			get
			{
				return this.GetTable<ClassExam>();
			}
		}
		
		public System.Data.Linq.Table<ClassFullMark> ClassFullMarks
		{
			get
			{
				return this.GetTable<ClassFullMark>();
			}
		}
		
		public System.Data.Linq.Table<ClassSubject> ClassSubjects
		{
			get
			{
				return this.GetTable<ClassSubject>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Designation> Designations
		{
			get
			{
				return this.GetTable<Designation>();
			}
		}
		
		public System.Data.Linq.Table<Exam> Exams
		{
			get
			{
				return this.GetTable<Exam>();
			}
		}
		
		public System.Data.Linq.Table<ExamFullMark> ExamFullMarks
		{
			get
			{
				return this.GetTable<ExamFullMark>();
			}
		}
		
		public System.Data.Linq.Table<ExamType> ExamTypes
		{
			get
			{
				return this.GetTable<ExamType>();
			}
		}
		
		public System.Data.Linq.Table<FeeAdmission> FeeAdmissions
		{
			get
			{
				return this.GetTable<FeeAdmission>();
			}
		}
		
		public System.Data.Linq.Table<FeeAdmissionHead> FeeAdmissionHeads
		{
			get
			{
				return this.GetTable<FeeAdmissionHead>();
			}
		}
		
		public System.Data.Linq.Table<FeeClass> FeeClasses
		{
			get
			{
				return this.GetTable<FeeClass>();
			}
		}
		
		public System.Data.Linq.Table<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this.GetTable<FeeClassHead>();
			}
		}
		
		public System.Data.Linq.Table<FeePayment> FeePayments
		{
			get
			{
				return this.GetTable<FeePayment>();
			}
		}
		
		public System.Data.Linq.Table<FeePaymentDetail> FeePaymentDetails
		{
			get
			{
				return this.GetTable<FeePaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<FeePaymentMonth> FeePaymentMonths
		{
			get
			{
				return this.GetTable<FeePaymentMonth>();
			}
		}
		
		public System.Data.Linq.Table<FeeRegistration> FeeRegistrations
		{
			get
			{
				return this.GetTable<FeeRegistration>();
			}
		}
		
		public System.Data.Linq.Table<FeeRegistrationHead> FeeRegistrationHeads
		{
			get
			{
				return this.GetTable<FeeRegistrationHead>();
			}
		}
		
		public System.Data.Linq.Table<FeeRemark> FeeRemarks
		{
			get
			{
				return this.GetTable<FeeRemark>();
			}
		}
		
		public System.Data.Linq.Table<FeeSubjectOption> FeeSubjectOptions
		{
			get
			{
				return this.GetTable<FeeSubjectOption>();
			}
		}
		
		public System.Data.Linq.Table<FeeSubjectOptionHead> FeeSubjectOptionHeads
		{
			get
			{
				return this.GetTable<FeeSubjectOptionHead>();
			}
		}
		
		public System.Data.Linq.Table<FeeTransport> FeeTransports
		{
			get
			{
				return this.GetTable<FeeTransport>();
			}
		}
		
		public System.Data.Linq.Table<FeeTransportHead> FeeTransportHeads
		{
			get
			{
				return this.GetTable<FeeTransportHead>();
			}
		}
		
		public System.Data.Linq.Table<Grade> Grades
		{
			get
			{
				return this.GetTable<Grade>();
			}
		}
		
		public System.Data.Linq.Table<GradeGroup> GradeGroups
		{
			get
			{
				return this.GetTable<GradeGroup>();
			}
		}
		
		public System.Data.Linq.Table<GradingScale> GradingScales
		{
			get
			{
				return this.GetTable<GradingScale>();
			}
		}
		
		public System.Data.Linq.Table<GradingSystem> GradingSystems
		{
			get
			{
				return this.GetTable<GradingSystem>();
			}
		}
		
		public System.Data.Linq.Table<Head> Heads
		{
			get
			{
				return this.GetTable<Head>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<LoginLog> LoginLogs
		{
			get
			{
				return this.GetTable<LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<Magazine> Magazines
		{
			get
			{
				return this.GetTable<Magazine>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Month> Months
		{
			get
			{
				return this.GetTable<Month>();
			}
		}
		
		public System.Data.Linq.Table<NewsPaper> NewsPapers
		{
			get
			{
				return this.GetTable<NewsPaper>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PageGroup> PageGroups
		{
			get
			{
				return this.GetTable<PageGroup>();
			}
		}
		
		public System.Data.Linq.Table<Pupil> Pupils
		{
			get
			{
				return this.GetTable<Pupil>();
			}
		}
		
		public System.Data.Linq.Table<PupilAdmission> PupilAdmissions
		{
			get
			{
				return this.GetTable<PupilAdmission>();
			}
		}
		
		public System.Data.Linq.Table<PupilAttendance> PupilAttendances
		{
			get
			{
				return this.GetTable<PupilAttendance>();
			}
		}
		
		public System.Data.Linq.Table<PupilCharge> PupilCharges
		{
			get
			{
				return this.GetTable<PupilCharge>();
			}
		}
		
		public System.Data.Linq.Table<PupilGrade> PupilGrades
		{
			get
			{
				return this.GetTable<PupilGrade>();
			}
		}
		
		public System.Data.Linq.Table<PupilMark> PupilMarks
		{
			get
			{
				return this.GetTable<PupilMark>();
			}
		}
		
		public System.Data.Linq.Table<PupilSubject> PupilSubjects
		{
			get
			{
				return this.GetTable<PupilSubject>();
			}
		}
		
		public System.Data.Linq.Table<PupilType> PupilTypes
		{
			get
			{
				return this.GetTable<PupilType>();
			}
		}
		
		public System.Data.Linq.Table<PupilWaiveOff> PupilWaiveOffs
		{
			get
			{
				return this.GetTable<PupilWaiveOff>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseBook> PurchaseBooks
		{
			get
			{
				return this.GetTable<PurchaseBook>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseMagazine> PurchaseMagazines
		{
			get
			{
				return this.GetTable<PurchaseMagazine>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseNewsPaper> PurchaseNewsPapers
		{
			get
			{
				return this.GetTable<PurchaseNewsPaper>();
			}
		}
		
		public System.Data.Linq.Table<Rack> Racks
		{
			get
			{
				return this.GetTable<Rack>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationForm> RegistrationForms
		{
			get
			{
				return this.GetTable<RegistrationForm>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleMenu> RoleMenus
		{
			get
			{
				return this.GetTable<RoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<StaffClass> StaffClasses
		{
			get
			{
				return this.GetTable<StaffClass>();
			}
		}
		
		public System.Data.Linq.Table<StaffLogin> StaffLogins
		{
			get
			{
				return this.GetTable<StaffLogin>();
			}
		}
		
		public System.Data.Linq.Table<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this.GetTable<StaffLoginRole>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<SubjectFullMark> SubjectFullMarks
		{
			get
			{
				return this.GetTable<SubjectFullMark>();
			}
		}
		
		public System.Data.Linq.Table<SubjectGradingScale> SubjectGradingScales
		{
			get
			{
				return this.GetTable<SubjectGradingScale>();
			}
		}
		
		public System.Data.Linq.Table<SubjectId> SubjectIds
		{
			get
			{
				return this.GetTable<SubjectId>();
			}
		}
		
		public System.Data.Linq.Table<SubjectOption> SubjectOptions
		{
			get
			{
				return this.GetTable<SubjectOption>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<TransportBatch> TransportBatches
		{
			get
			{
				return this.GetTable<TransportBatch>();
			}
		}
		
		public System.Data.Linq.Table<TransportDuration> TransportDurations
		{
			get
			{
				return this.GetTable<TransportDuration>();
			}
		}
		
		public System.Data.Linq.Table<TransportPupil> TransportPupils
		{
			get
			{
				return this.GetTable<TransportPupil>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookId;
		
		private string _BookName;
		
		private string _AuthorName;
		
		private string _Edition;
		
		private string _Publisher;
		
		private System.Nullable<int> _PublishingYear;
		
		private System.Nullable<int> _TotalPages;
		
		private System.Nullable<int> _Volume;
		
		private int _BookTypeId;
		
		private int _BookCount;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<BookClass> _BookClasses;
		
		private EntitySet<BookDetail> _BookDetails;
		
		private EntitySet<BookFine> _BookFines;
		
		private EntitySet<BookIssue> _BookIssues;
		
		private EntitySet<BookSubject> _BookSubjects;
		
		private EntityRef<BookType> _BookType;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnEditionChanging(string value);
    partial void OnEditionChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnPublishingYearChanging(System.Nullable<int> value);
    partial void OnPublishingYearChanged();
    partial void OnTotalPagesChanging(System.Nullable<int> value);
    partial void OnTotalPagesChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    partial void OnBookTypeIdChanging(int value);
    partial void OnBookTypeIdChanged();
    partial void OnBookCountChanging(int value);
    partial void OnBookCountChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Book()
		{
			this._BookClasses = new EntitySet<BookClass>(new Action<BookClass>(this.attach_BookClasses), new Action<BookClass>(this.detach_BookClasses));
			this._BookDetails = new EntitySet<BookDetail>(new Action<BookDetail>(this.attach_BookDetails), new Action<BookDetail>(this.detach_BookDetails));
			this._BookFines = new EntitySet<BookFine>(new Action<BookFine>(this.attach_BookFines), new Action<BookFine>(this.detach_BookFines));
			this._BookIssues = new EntitySet<BookIssue>(new Action<BookIssue>(this.attach_BookIssues), new Action<BookIssue>(this.detach_BookIssues));
			this._BookSubjects = new EntitySet<BookSubject>(new Action<BookSubject>(this.attach_BookSubjects), new Action<BookSubject>(this.detach_BookSubjects));
			this._BookType = default(EntityRef<BookType>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BookName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this.OnBookNameChanging(value);
					this.SendPropertyChanging();
					this._BookName = value;
					this.SendPropertyChanged("BookName");
					this.OnBookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Edition
		{
			get
			{
				return this._Edition;
			}
			set
			{
				if ((this._Edition != value))
				{
					this.OnEditionChanging(value);
					this.SendPropertyChanging();
					this._Edition = value;
					this.SendPropertyChanged("Edition");
					this.OnEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishingYear", DbType="Int")]
		public System.Nullable<int> PublishingYear
		{
			get
			{
				return this._PublishingYear;
			}
			set
			{
				if ((this._PublishingYear != value))
				{
					this.OnPublishingYearChanging(value);
					this.SendPropertyChanging();
					this._PublishingYear = value;
					this.SendPropertyChanged("PublishingYear");
					this.OnPublishingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPages", DbType="Int")]
		public System.Nullable<int> TotalPages
		{
			get
			{
				return this._TotalPages;
			}
			set
			{
				if ((this._TotalPages != value))
				{
					this.OnTotalPagesChanging(value);
					this.SendPropertyChanging();
					this._TotalPages = value;
					this.SendPropertyChanged("TotalPages");
					this.OnTotalPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTypeId", DbType="Int NOT NULL")]
		public int BookTypeId
		{
			get
			{
				return this._BookTypeId;
			}
			set
			{
				if ((this._BookTypeId != value))
				{
					if (this._BookType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BookTypeId = value;
					this.SendPropertyChanged("BookTypeId");
					this.OnBookTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCount", DbType="Int NOT NULL")]
		public int BookCount
		{
			get
			{
				return this._BookCount;
			}
			set
			{
				if ((this._BookCount != value))
				{
					this.OnBookCountChanging(value);
					this.SendPropertyChanging();
					this._BookCount = value;
					this.SendPropertyChanged("BookCount");
					this.OnBookCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookClass", Storage="_BookClasses", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<BookClass> BookClasses
		{
			get
			{
				return this._BookClasses;
			}
			set
			{
				this._BookClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookDetail", Storage="_BookDetails", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<BookDetail> BookDetails
		{
			get
			{
				return this._BookDetails;
			}
			set
			{
				this._BookDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookFine", Storage="_BookFines", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<BookFine> BookFines
		{
			get
			{
				return this._BookFines;
			}
			set
			{
				this._BookFines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookIssue", Storage="_BookIssues", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<BookIssue> BookIssues
		{
			get
			{
				return this._BookIssues;
			}
			set
			{
				this._BookIssues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookSubject", Storage="_BookSubjects", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<BookSubject> BookSubjects
		{
			get
			{
				return this._BookSubjects;
			}
			set
			{
				this._BookSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookType_Book", Storage="_BookType", ThisKey="BookTypeId", OtherKey="BookTypeId", IsForeignKey=true)]
		public BookType BookType
		{
			get
			{
				return this._BookType.Entity;
			}
			set
			{
				BookType previousValue = this._BookType.Entity;
				if (((previousValue != value) 
							|| (this._BookType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookType.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._BookType.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._BookTypeId = value.BookTypeId;
					}
					else
					{
						this._BookTypeId = default(int);
					}
					this.SendPropertyChanged("BookType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Book", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Book1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Books1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Books1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookClasses(BookClass entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookClasses(BookClass entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_BookSubjects(BookSubject entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookSubjects(BookSubject entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleType")]
	public partial class VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehicleTypeId;
		
		private string _VehicleTypeName;
		
		private byte _Status;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private EntitySet<Vehicle> _Vehicles;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleTypeIdChanging(int value);
    partial void OnVehicleTypeIdChanged();
    partial void OnVehicleTypeNameChanging(string value);
    partial void OnVehicleTypeNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public VehicleType()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehicleTypeId
		{
			get
			{
				return this._VehicleTypeId;
			}
			set
			{
				if ((this._VehicleTypeId != value))
				{
					this.OnVehicleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeId = value;
					this.SendPropertyChanged("VehicleTypeId");
					this.OnVehicleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string VehicleTypeName
		{
			get
			{
				return this._VehicleTypeName;
			}
			set
			{
				if ((this._VehicleTypeName != value))
				{
					this.OnVehicleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeName = value;
					this.SendPropertyChanged("VehicleTypeName");
					this.OnVehicleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_Vehicles", ThisKey="VehicleTypeId", OtherKey="VehicleTypeId")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_VehicleType", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.VehicleTypes.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.VehicleTypes.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookClass")]
	public partial class BookClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookClassId;
		
		private int _BookId;
		
		private int _ClassId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Class> _Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookClassIdChanging(int value);
    partial void OnBookClassIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookClass()
		{
			this._Book = default(EntityRef<Book>);
			this._Class = default(EntityRef<Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookClassId
		{
			get
			{
				return this._BookClassId;
			}
			set
			{
				if ((this._BookClassId != value))
				{
					this.OnBookClassIdChanging(value);
					this.SendPropertyChanging();
					this._BookClassId = value;
					this.SendPropertyChanged("BookClassId");
					this.OnBookClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookClass", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookClasses.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookClasses.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_BookClass", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.BookClasses.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.BookClasses.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDetail")]
	public partial class BookDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookDetailsId;
		
		private int _BookId;
		
		private int _PurchaseBookId;
		
		private int _BookNo;
		
		private byte _BookStatus;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<PurchaseBook> _PurchaseBook;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookDetailsIdChanging(int value);
    partial void OnBookDetailsIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnPurchaseBookIdChanging(int value);
    partial void OnPurchaseBookIdChanged();
    partial void OnBookNoChanging(int value);
    partial void OnBookNoChanged();
    partial void OnBookStatusChanging(byte value);
    partial void OnBookStatusChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookDetail()
		{
			this._Book = default(EntityRef<Book>);
			this._PurchaseBook = default(EntityRef<PurchaseBook>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDetailsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookDetailsId
		{
			get
			{
				return this._BookDetailsId;
			}
			set
			{
				if ((this._BookDetailsId != value))
				{
					this.OnBookDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._BookDetailsId = value;
					this.SendPropertyChanged("BookDetailsId");
					this.OnBookDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseBookId", DbType="Int NOT NULL")]
		public int PurchaseBookId
		{
			get
			{
				return this._PurchaseBookId;
			}
			set
			{
				if ((this._PurchaseBookId != value))
				{
					if (this._PurchaseBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseBookIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseBookId = value;
					this.SendPropertyChanged("PurchaseBookId");
					this.OnPurchaseBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="Int NOT NULL")]
		public int BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookStatus", DbType="TinyInt NOT NULL")]
		public byte BookStatus
		{
			get
			{
				return this._BookStatus;
			}
			set
			{
				if ((this._BookStatus != value))
				{
					this.OnBookStatusChanging(value);
					this.SendPropertyChanging();
					this._BookStatus = value;
					this.SendPropertyChanged("BookStatus");
					this.OnBookStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookDetail", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookDetails.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookDetails.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseBook_BookDetail", Storage="_PurchaseBook", ThisKey="PurchaseBookId", OtherKey="PurchaseBookId", IsForeignKey=true)]
		public PurchaseBook PurchaseBook
		{
			get
			{
				return this._PurchaseBook.Entity;
			}
			set
			{
				PurchaseBook previousValue = this._PurchaseBook.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseBook.Entity = null;
						previousValue.BookDetails.Remove(this);
					}
					this._PurchaseBook.Entity = value;
					if ((value != null))
					{
						value.BookDetails.Add(this);
						this._PurchaseBookId = value.PurchaseBookId;
					}
					else
					{
						this._PurchaseBookId = default(int);
					}
					this.SendPropertyChanged("PurchaseBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookDetail", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.BookDetails.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.BookDetails.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookDetail1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.BookDetails1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.BookDetails1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookFine")]
	public partial class BookFine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookFineId;
		
		private int _BookId;
		
		private decimal _FineAmount;
		
		private int _BookIssueId;
		
		private bool _Paid;
		
		private int _DueDays;
		
		private decimal _PayableAmount;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<BookIssue> _BookIssue;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookFineIdChanging(int value);
    partial void OnBookFineIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnFineAmountChanging(decimal value);
    partial void OnFineAmountChanged();
    partial void OnBookIssueIdChanging(int value);
    partial void OnBookIssueIdChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    partial void OnDueDaysChanging(int value);
    partial void OnDueDaysChanged();
    partial void OnPayableAmountChanging(decimal value);
    partial void OnPayableAmountChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookFine()
		{
			this._Book = default(EntityRef<Book>);
			this._BookIssue = default(EntityRef<BookIssue>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookFineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookFineId
		{
			get
			{
				return this._BookFineId;
			}
			set
			{
				if ((this._BookFineId != value))
				{
					this.OnBookFineIdChanging(value);
					this.SendPropertyChanging();
					this._BookFineId = value;
					this.SendPropertyChanged("BookFineId");
					this.OnBookFineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal FineAmount
		{
			get
			{
				return this._FineAmount;
			}
			set
			{
				if ((this._FineAmount != value))
				{
					this.OnFineAmountChanging(value);
					this.SendPropertyChanging();
					this._FineAmount = value;
					this.SendPropertyChanged("FineAmount");
					this.OnFineAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookIssueId", DbType="Int NOT NULL")]
		public int BookIssueId
		{
			get
			{
				return this._BookIssueId;
			}
			set
			{
				if ((this._BookIssueId != value))
				{
					if (this._BookIssue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIssueIdChanging(value);
					this.SendPropertyChanging();
					this._BookIssueId = value;
					this.SendPropertyChanged("BookIssueId");
					this.OnBookIssueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit NOT NULL")]
		public bool Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDays", DbType="Int NOT NULL")]
		public int DueDays
		{
			get
			{
				return this._DueDays;
			}
			set
			{
				if ((this._DueDays != value))
				{
					this.OnDueDaysChanging(value);
					this.SendPropertyChanging();
					this._DueDays = value;
					this.SendPropertyChanged("DueDays");
					this.OnDueDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal PayableAmount
		{
			get
			{
				return this._PayableAmount;
			}
			set
			{
				if ((this._PayableAmount != value))
				{
					this.OnPayableAmountChanging(value);
					this.SendPropertyChanging();
					this._PayableAmount = value;
					this.SendPropertyChanged("PayableAmount");
					this.OnPayableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookFine", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookFines.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookFines.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookIssue_BookFine", Storage="_BookIssue", ThisKey="BookIssueId", OtherKey="BookIssueId", IsForeignKey=true)]
		public BookIssue BookIssue
		{
			get
			{
				return this._BookIssue.Entity;
			}
			set
			{
				BookIssue previousValue = this._BookIssue.Entity;
				if (((previousValue != value) 
							|| (this._BookIssue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookIssue.Entity = null;
						previousValue.BookFines.Remove(this);
					}
					this._BookIssue.Entity = value;
					if ((value != null))
					{
						value.BookFines.Add(this);
						this._BookIssueId = value.BookIssueId;
					}
					else
					{
						this._BookIssueId = default(int);
					}
					this.SendPropertyChanged("BookIssue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookFine", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.BookFines.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.BookFines.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookFine1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.BookFines1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.BookFines1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookIssue")]
	public partial class BookIssue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookIssueId;
		
		private int _BookId;
		
		private string _StudentName;
		
		private System.Nullable<int> _StaffId;
		
		private System.DateTime _IssueDate;
		
		private System.DateTime _ReturnDate;
		
		private decimal _FineAmount;
		
		private string _Remarks;
		
		private bool _IsReturned;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<BookFine> _BookFines;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIssueIdChanging(int value);
    partial void OnBookIssueIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStaffIdChanging(System.Nullable<int> value);
    partial void OnStaffIdChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnReturnDateChanging(System.DateTime value);
    partial void OnReturnDateChanged();
    partial void OnFineAmountChanging(decimal value);
    partial void OnFineAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsReturnedChanging(bool value);
    partial void OnIsReturnedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookIssue()
		{
			this._BookFines = new EntitySet<BookFine>(new Action<BookFine>(this.attach_BookFines), new Action<BookFine>(this.detach_BookFines));
			this._Book = default(EntityRef<Book>);
			this._Staff = default(EntityRef<Staff>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookIssueId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookIssueId
		{
			get
			{
				return this._BookIssueId;
			}
			set
			{
				if ((this._BookIssueId != value))
				{
					this.OnBookIssueIdChanging(value);
					this.SendPropertyChanging();
					this._BookIssueId = value;
					this.SendPropertyChanged("BookIssueId");
					this.OnBookIssueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int")]
		public System.Nullable<int> StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime NOT NULL")]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal FineAmount
		{
			get
			{
				return this._FineAmount;
			}
			set
			{
				if ((this._FineAmount != value))
				{
					this.OnFineAmountChanging(value);
					this.SendPropertyChanging();
					this._FineAmount = value;
					this.SendPropertyChanged("FineAmount");
					this.OnFineAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReturned", DbType="Bit NOT NULL")]
		public bool IsReturned
		{
			get
			{
				return this._IsReturned;
			}
			set
			{
				if ((this._IsReturned != value))
				{
					this.OnIsReturnedChanging(value);
					this.SendPropertyChanging();
					this._IsReturned = value;
					this.SendPropertyChanged("IsReturned");
					this.OnIsReturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookIssue_BookFine", Storage="_BookFines", ThisKey="BookIssueId", OtherKey="BookIssueId")]
		public EntitySet<BookFine> BookFines
		{
			get
			{
				return this._BookFines;
			}
			set
			{
				this._BookFines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookIssue", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookIssues.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookIssues.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_BookIssue", Storage="_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.BookIssues.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.BookIssues.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookIssue", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.BookIssues.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.BookIssues.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookIssue1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.BookIssues1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.BookIssues1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.BookIssue = this;
		}
		
		private void detach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.BookIssue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookRack")]
	public partial class BookRack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookRackId;
		
		private int _RackId;
		
		private int _SubjectId;
		
		private int _ClassId;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Rack> _Rack;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookRackIdChanging(int value);
    partial void OnBookRackIdChanged();
    partial void OnRackIdChanging(int value);
    partial void OnRackIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookRack()
		{
			this._Class = default(EntityRef<Class>);
			this._Rack = default(EntityRef<Rack>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookRackId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookRackId
		{
			get
			{
				return this._BookRackId;
			}
			set
			{
				if ((this._BookRackId != value))
				{
					this.OnBookRackIdChanging(value);
					this.SendPropertyChanging();
					this._BookRackId = value;
					this.SendPropertyChanged("BookRackId");
					this.OnBookRackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackId", DbType="Int NOT NULL")]
		public int RackId
		{
			get
			{
				return this._RackId;
			}
			set
			{
				if ((this._RackId != value))
				{
					if (this._Rack.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRackIdChanging(value);
					this.SendPropertyChanging();
					this._RackId = value;
					this.SendPropertyChanged("RackId");
					this.OnRackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_BookRack", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.BookRacks.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.BookRacks.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rack_BookRack", Storage="_Rack", ThisKey="RackId", OtherKey="RackId", IsForeignKey=true)]
		public Rack Rack
		{
			get
			{
				return this._Rack.Entity;
			}
			set
			{
				Rack previousValue = this._Rack.Entity;
				if (((previousValue != value) 
							|| (this._Rack.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rack.Entity = null;
						previousValue.BookRacks.Remove(this);
					}
					this._Rack.Entity = value;
					if ((value != null))
					{
						value.BookRacks.Add(this);
						this._RackId = value.RackId;
					}
					else
					{
						this._RackId = default(int);
					}
					this.SendPropertyChanged("Rack");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookRack", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.BookRacks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.BookRacks.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BookRack", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectId", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.BookRacks.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.BookRacks.Add(this);
						this._SubjectId = value.SubjectId;
					}
					else
					{
						this._SubjectId = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookSubject")]
	public partial class BookSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookSubjectId;
		
		private int _BookId;
		
		private int _SubjectId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookSubjectIdChanging(int value);
    partial void OnBookSubjectIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookSubject()
		{
			this._Book = default(EntityRef<Book>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookSubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookSubjectId
		{
			get
			{
				return this._BookSubjectId;
			}
			set
			{
				if ((this._BookSubjectId != value))
				{
					this.OnBookSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._BookSubjectId = value;
					this.SendPropertyChanged("BookSubjectId");
					this.OnBookSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookSubject", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookSubjects.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookSubjects.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BookSubject", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectId", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.BookSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.BookSubjects.Add(this);
						this._SubjectId = value.SubjectId;
					}
					else
					{
						this._SubjectId = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookType")]
	public partial class BookType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookTypeId;
		
		private string _BookTypeName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Book> _Books;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookTypeIdChanging(int value);
    partial void OnBookTypeIdChanged();
    partial void OnBookTypeNameChanging(string value);
    partial void OnBookTypeNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BookType()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookTypeId
		{
			get
			{
				return this._BookTypeId;
			}
			set
			{
				if ((this._BookTypeId != value))
				{
					this.OnBookTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BookTypeId = value;
					this.SendPropertyChanged("BookTypeId");
					this.OnBookTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTypeName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BookTypeName
		{
			get
			{
				return this._BookTypeName;
			}
			set
			{
				if ((this._BookTypeName != value))
				{
					this.OnBookTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BookTypeName = value;
					this.SendPropertyChanged("BookTypeName");
					this.OnBookTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookType_Book", Storage="_Books", ThisKey="BookTypeId", OtherKey="BookTypeId")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookType", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.BookTypes.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.BookTypes.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.BookType = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.BookType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityId;
		
		private int _StateId;
		
		private string _CityName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Supplier> _Suppliers;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public City()
		{
			this._Suppliers = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers), new Action<Supplier>(this.detach_Suppliers));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Supplier", Storage="_Suppliers", ThisKey="CityId", OtherKey="CityId")]
		public EntitySet<Supplier> Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				this._Suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateId = value.StateId;
					}
					else
					{
						this._StateId = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassId;
		
		private System.Nullable<int> _ParentClassId;
		
		private string _ClassName;
		
		private int _ClassNo;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<BookClass> _BookClasses;
		
		private EntitySet<BookRack> _BookRacks;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<ClassExam> _ClassExams;
		
		private EntitySet<ClassFullMark> _ClassFullMarks;
		
		private EntitySet<ClassSubject> _ClassSubjects;
		
		private EntitySet<FeeClassHead> _FeeClassHeads;
		
		private EntitySet<GradingSystem> _GradingSystems;
		
		private EntitySet<Registration> _Registrations;
		
		private EntitySet<RegistrationForm> _RegistrationForms;
		
		private EntitySet<Section> _Sections;
		
		private EntitySet<SubjectOption> _SubjectOptions;
		
		private EntityRef<Class> _Class1;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnParentClassIdChanging(System.Nullable<int> value);
    partial void OnParentClassIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnClassNoChanging(int value);
    partial void OnClassNoChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Class()
		{
			this._BookClasses = new EntitySet<BookClass>(new Action<BookClass>(this.attach_BookClasses), new Action<BookClass>(this.detach_BookClasses));
			this._BookRacks = new EntitySet<BookRack>(new Action<BookRack>(this.attach_BookRacks), new Action<BookRack>(this.detach_BookRacks));
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._ClassExams = new EntitySet<ClassExam>(new Action<ClassExam>(this.attach_ClassExams), new Action<ClassExam>(this.detach_ClassExams));
			this._ClassFullMarks = new EntitySet<ClassFullMark>(new Action<ClassFullMark>(this.attach_ClassFullMarks), new Action<ClassFullMark>(this.detach_ClassFullMarks));
			this._ClassSubjects = new EntitySet<ClassSubject>(new Action<ClassSubject>(this.attach_ClassSubjects), new Action<ClassSubject>(this.detach_ClassSubjects));
			this._FeeClassHeads = new EntitySet<FeeClassHead>(new Action<FeeClassHead>(this.attach_FeeClassHeads), new Action<FeeClassHead>(this.detach_FeeClassHeads));
			this._GradingSystems = new EntitySet<GradingSystem>(new Action<GradingSystem>(this.attach_GradingSystems), new Action<GradingSystem>(this.detach_GradingSystems));
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._RegistrationForms = new EntitySet<RegistrationForm>(new Action<RegistrationForm>(this.attach_RegistrationForms), new Action<RegistrationForm>(this.detach_RegistrationForms));
			this._Sections = new EntitySet<Section>(new Action<Section>(this.attach_Sections), new Action<Section>(this.detach_Sections));
			this._SubjectOptions = new EntitySet<SubjectOption>(new Action<SubjectOption>(this.attach_SubjectOptions), new Action<SubjectOption>(this.detach_SubjectOptions));
			this._Class1 = default(EntityRef<Class>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentClassId", DbType="Int")]
		public System.Nullable<int> ParentClassId
		{
			get
			{
				return this._ParentClassId;
			}
			set
			{
				if ((this._ParentClassId != value))
				{
					if (this._Class1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentClassIdChanging(value);
					this.SendPropertyChanging();
					this._ParentClassId = value;
					this.SendPropertyChanged("ParentClassId");
					this.OnParentClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNo", DbType="Int NOT NULL")]
		public int ClassNo
		{
			get
			{
				return this._ClassNo;
			}
			set
			{
				if ((this._ClassNo != value))
				{
					this.OnClassNoChanging(value);
					this.SendPropertyChanging();
					this._ClassNo = value;
					this.SendPropertyChanged("ClassNo");
					this.OnClassNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_BookClass", Storage="_BookClasses", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<BookClass> BookClasses
		{
			get
			{
				return this._BookClasses;
			}
			set
			{
				this._BookClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_BookRack", Storage="_BookRacks", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<BookRack> BookRacks
		{
			get
			{
				return this._BookRacks;
			}
			set
			{
				this._BookRacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Class", Storage="_Classes", ThisKey="ClassId", OtherKey="ParentClassId")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassExam", Storage="_ClassExams", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<ClassExam> ClassExams
		{
			get
			{
				return this._ClassExams;
			}
			set
			{
				this._ClassExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassFullMark", Storage="_ClassFullMarks", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<ClassFullMark> ClassFullMarks
		{
			get
			{
				return this._ClassFullMarks;
			}
			set
			{
				this._ClassFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassSubject", Storage="_ClassSubjects", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<ClassSubject> ClassSubjects
		{
			get
			{
				return this._ClassSubjects;
			}
			set
			{
				this._ClassSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_FeeClassHead", Storage="_FeeClassHeads", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this._FeeClassHeads;
			}
			set
			{
				this._FeeClassHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_GradingSystem", Storage="_GradingSystems", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<GradingSystem> GradingSystems
		{
			get
			{
				return this._GradingSystems;
			}
			set
			{
				this._GradingSystems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Registration", Storage="_Registrations", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_RegistrationForm", Storage="_RegistrationForms", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<RegistrationForm> RegistrationForms
		{
			get
			{
				return this._RegistrationForms;
			}
			set
			{
				this._RegistrationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Section", Storage="_Sections", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<Section> Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				this._Sections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SubjectOption", Storage="_SubjectOptions", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<SubjectOption> SubjectOptions
		{
			get
			{
				return this._SubjectOptions;
			}
			set
			{
				this._SubjectOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Class", Storage="_Class1", ThisKey="ParentClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class1
		{
			get
			{
				return this._Class1.Entity;
			}
			set
			{
				Class previousValue = this._Class1.Entity;
				if (((previousValue != value) 
							|| (this._Class1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class1.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Class1.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._ParentClassId = value.ClassId;
					}
					else
					{
						this._ParentClassId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Class", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookClasses(BookClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_BookClasses(BookClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Class1 = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Class1 = null;
		}
		
		private void attach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassAttendance")]
	public partial class ClassAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassAttendanceId;
		
		private int _SessionId;
		
		private int _SectionId;
		
		private int _HyWorkingDays;
		
		private int _AnWorkingDays;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PupilAttendance> _PupilAttendances;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassAttendanceIdChanging(int value);
    partial void OnClassAttendanceIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnHyWorkingDaysChanging(int value);
    partial void OnHyWorkingDaysChanged();
    partial void OnAnWorkingDaysChanging(int value);
    partial void OnAnWorkingDaysChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ClassAttendance()
		{
			this._PupilAttendances = new EntitySet<PupilAttendance>(new Action<PupilAttendance>(this.attach_PupilAttendances), new Action<PupilAttendance>(this.detach_PupilAttendances));
			this._Section = default(EntityRef<Section>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassAttendanceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassAttendanceId
		{
			get
			{
				return this._ClassAttendanceId;
			}
			set
			{
				if ((this._ClassAttendanceId != value))
				{
					this.OnClassAttendanceIdChanging(value);
					this.SendPropertyChanging();
					this._ClassAttendanceId = value;
					this.SendPropertyChanged("ClassAttendanceId");
					this.OnClassAttendanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if ((this._Section.HasLoadedOrAssignedValue || this._Session.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HyWorkingDays", DbType="Int NOT NULL")]
		public int HyWorkingDays
		{
			get
			{
				return this._HyWorkingDays;
			}
			set
			{
				if ((this._HyWorkingDays != value))
				{
					this.OnHyWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._HyWorkingDays = value;
					this.SendPropertyChanged("HyWorkingDays");
					this.OnHyWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnWorkingDays", DbType="Int NOT NULL")]
		public int AnWorkingDays
		{
			get
			{
				return this._AnWorkingDays;
			}
			set
			{
				if ((this._AnWorkingDays != value))
				{
					this.OnAnWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._AnWorkingDays = value;
					this.SendPropertyChanged("AnWorkingDays");
					this.OnAnWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassAttendance_PupilAttendance", Storage="_PupilAttendances", ThisKey="ClassAttendanceId", OtherKey="ClassAttendanceId")]
		public EntitySet<PupilAttendance> PupilAttendances
		{
			get
			{
				return this._PupilAttendances;
			}
			set
			{
				this._PupilAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_ClassAttendance", Storage="_Section", ThisKey="SectionId", OtherKey="SectionId", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.ClassAttendances.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances.Add(this);
						this._SectionId = value.SectionId;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassAttendance", Storage="_Session", ThisKey="SectionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.ClassAttendances.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances.Add(this);
						this._SectionId = value.SessionId;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassAttendance", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.ClassAttendances.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassAttendance1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.ClassAttendances1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.ClassAttendance = this;
		}
		
		private void detach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.ClassAttendance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassExam")]
	public partial class ClassExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassExamId;
		
		private int _SessionId;
		
		private int _ClassId;
		
		private int _ExamId;
		
		private int _ExamNo;
		
		private bool _IsPractical;
		
		private bool _IsTheory;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntitySet<SubjectFullMark> _SubjectFullMarks;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Exam> _Exam;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassExamIdChanging(int value);
    partial void OnClassExamIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnExamIdChanging(int value);
    partial void OnExamIdChanged();
    partial void OnExamNoChanging(int value);
    partial void OnExamNoChanged();
    partial void OnIsPracticalChanging(bool value);
    partial void OnIsPracticalChanged();
    partial void OnIsTheoryChanging(bool value);
    partial void OnIsTheoryChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ClassExam()
		{
			this._SubjectFullMarks = new EntitySet<SubjectFullMark>(new Action<SubjectFullMark>(this.attach_SubjectFullMarks), new Action<SubjectFullMark>(this.detach_SubjectFullMarks));
			this._Class = default(EntityRef<Class>);
			this._Exam = default(EntityRef<Exam>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassExamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassExamId
		{
			get
			{
				return this._ClassExamId;
			}
			set
			{
				if ((this._ClassExamId != value))
				{
					this.OnClassExamIdChanging(value);
					this.SendPropertyChanging();
					this._ClassExamId = value;
					this.SendPropertyChanged("ClassExamId");
					this.OnClassExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="Int NOT NULL")]
		public int ExamId
		{
			get
			{
				return this._ExamId;
			}
			set
			{
				if ((this._ExamId != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIdChanging(value);
					this.SendPropertyChanging();
					this._ExamId = value;
					this.SendPropertyChanged("ExamId");
					this.OnExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamNo", DbType="Int NOT NULL")]
		public int ExamNo
		{
			get
			{
				return this._ExamNo;
			}
			set
			{
				if ((this._ExamNo != value))
				{
					this.OnExamNoChanging(value);
					this.SendPropertyChanging();
					this._ExamNo = value;
					this.SendPropertyChanged("ExamNo");
					this.OnExamNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPractical", DbType="Bit NOT NULL")]
		public bool IsPractical
		{
			get
			{
				return this._IsPractical;
			}
			set
			{
				if ((this._IsPractical != value))
				{
					this.OnIsPracticalChanging(value);
					this.SendPropertyChanging();
					this._IsPractical = value;
					this.SendPropertyChanged("IsPractical");
					this.OnIsPracticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTheory", DbType="Bit NOT NULL")]
		public bool IsTheory
		{
			get
			{
				return this._IsTheory;
			}
			set
			{
				if ((this._IsTheory != value))
				{
					this.OnIsTheoryChanging(value);
					this.SendPropertyChanging();
					this._IsTheory = value;
					this.SendPropertyChanged("IsTheory");
					this.OnIsTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassExam_SubjectFullMark", Storage="_SubjectFullMarks", ThisKey="ClassExamId", OtherKey="ClassExamId")]
		public EntitySet<SubjectFullMark> SubjectFullMarks
		{
			get
			{
				return this._SubjectFullMarks;
			}
			set
			{
				this._SubjectFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassExam", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassExams.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassExams.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ClassExam", Storage="_Exam", ThisKey="ExamId", OtherKey="ExamId", IsForeignKey=true)]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.ClassExams.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.ClassExams.Add(this);
						this._ExamId = value.ExamId;
					}
					else
					{
						this._ExamId = default(int);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassExam", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.ClassExams.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.ClassExams.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassExam", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.ClassExams.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.ClassExams.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassExam1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.ClassExams1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.ClassExams1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassExam = this;
		}
		
		private void detach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassExam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassFullMark")]
	public partial class ClassFullMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassFullMarkId;
		
		private int _ClassId;
		
		private int _SessionId;
		
		private byte _Term;
		
		private decimal _PassingMarks;
		
		private decimal _FullMarks;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassFullMarkIdChanging(int value);
    partial void OnClassFullMarkIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnTermChanging(byte value);
    partial void OnTermChanged();
    partial void OnPassingMarksChanging(decimal value);
    partial void OnPassingMarksChanged();
    partial void OnFullMarksChanging(decimal value);
    partial void OnFullMarksChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ClassFullMark()
		{
			this._Class = default(EntityRef<Class>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassFullMarkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassFullMarkId
		{
			get
			{
				return this._ClassFullMarkId;
			}
			set
			{
				if ((this._ClassFullMarkId != value))
				{
					this.OnClassFullMarkIdChanging(value);
					this.SendPropertyChanging();
					this._ClassFullMarkId = value;
					this.SendPropertyChanged("ClassFullMarkId");
					this.OnClassFullMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="TinyInt NOT NULL")]
		public byte Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassingMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal PassingMarks
		{
			get
			{
				return this._PassingMarks;
			}
			set
			{
				if ((this._PassingMarks != value))
				{
					this.OnPassingMarksChanging(value);
					this.SendPropertyChanging();
					this._PassingMarks = value;
					this.SendPropertyChanged("PassingMarks");
					this.OnPassingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullMarks", DbType="Decimal(18,0) NOT NULL")]
		public decimal FullMarks
		{
			get
			{
				return this._FullMarks;
			}
			set
			{
				if ((this._FullMarks != value))
				{
					this.OnFullMarksChanging(value);
					this.SendPropertyChanging();
					this._FullMarks = value;
					this.SendPropertyChanged("FullMarks");
					this.OnFullMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassFullMark", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassFullMarks.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassFullMarks.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassFullMark", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.ClassFullMarks.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.ClassFullMarks.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassFullMark", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.ClassFullMarks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.ClassFullMarks.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassFullMark1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.ClassFullMarks1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.ClassFullMarks1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassSubject")]
	public partial class ClassSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassSubjectId;
		
		private int _SessionId;
		
		private int _ClassId;
		
		private int _SubjectId;
		
		private string _SubjectCode;
		
		private int _SubjectNo;
		
		private bool _IsTheory;
		
		private bool _IsPractical;
		
		private bool _IsGrade;
		
		private System.Nullable<int> _GradeGroupId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<ExamFullMark> _ExamFullMarks;
		
		private EntitySet<PupilSubject> _PupilSubjects;
		
		private EntitySet<SubjectFullMark> _SubjectFullMarks;
		
		private EntitySet<SubjectGradingScale> _SubjectGradingScales;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassSubjectIdChanging(int value);
    partial void OnClassSubjectIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnSubjectNoChanging(int value);
    partial void OnSubjectNoChanged();
    partial void OnIsTheoryChanging(bool value);
    partial void OnIsTheoryChanged();
    partial void OnIsPracticalChanging(bool value);
    partial void OnIsPracticalChanged();
    partial void OnIsGradeChanging(bool value);
    partial void OnIsGradeChanged();
    partial void OnGradeGroupIdChanging(System.Nullable<int> value);
    partial void OnGradeGroupIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ClassSubject()
		{
			this._ExamFullMarks = new EntitySet<ExamFullMark>(new Action<ExamFullMark>(this.attach_ExamFullMarks), new Action<ExamFullMark>(this.detach_ExamFullMarks));
			this._PupilSubjects = new EntitySet<PupilSubject>(new Action<PupilSubject>(this.attach_PupilSubjects), new Action<PupilSubject>(this.detach_PupilSubjects));
			this._SubjectFullMarks = new EntitySet<SubjectFullMark>(new Action<SubjectFullMark>(this.attach_SubjectFullMarks), new Action<SubjectFullMark>(this.detach_SubjectFullMarks));
			this._SubjectGradingScales = new EntitySet<SubjectGradingScale>(new Action<SubjectGradingScale>(this.attach_SubjectGradingScales), new Action<SubjectGradingScale>(this.detach_SubjectGradingScales));
			this._Class = default(EntityRef<Class>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassSubjectId
		{
			get
			{
				return this._ClassSubjectId;
			}
			set
			{
				if ((this._ClassSubjectId != value))
				{
					this.OnClassSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectId = value;
					this.SendPropertyChanged("ClassSubjectId");
					this.OnClassSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectNo", DbType="Int NOT NULL")]
		public int SubjectNo
		{
			get
			{
				return this._SubjectNo;
			}
			set
			{
				if ((this._SubjectNo != value))
				{
					this.OnSubjectNoChanging(value);
					this.SendPropertyChanging();
					this._SubjectNo = value;
					this.SendPropertyChanged("SubjectNo");
					this.OnSubjectNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTheory", DbType="Bit NOT NULL")]
		public bool IsTheory
		{
			get
			{
				return this._IsTheory;
			}
			set
			{
				if ((this._IsTheory != value))
				{
					this.OnIsTheoryChanging(value);
					this.SendPropertyChanging();
					this._IsTheory = value;
					this.SendPropertyChanged("IsTheory");
					this.OnIsTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPractical", DbType="Bit NOT NULL")]
		public bool IsPractical
		{
			get
			{
				return this._IsPractical;
			}
			set
			{
				if ((this._IsPractical != value))
				{
					this.OnIsPracticalChanging(value);
					this.SendPropertyChanging();
					this._IsPractical = value;
					this.SendPropertyChanged("IsPractical");
					this.OnIsPracticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrade", DbType="Bit NOT NULL")]
		public bool IsGrade
		{
			get
			{
				return this._IsGrade;
			}
			set
			{
				if ((this._IsGrade != value))
				{
					this.OnIsGradeChanging(value);
					this.SendPropertyChanging();
					this._IsGrade = value;
					this.SendPropertyChanged("IsGrade");
					this.OnIsGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeGroupId", DbType="Int")]
		public System.Nullable<int> GradeGroupId
		{
			get
			{
				return this._GradeGroupId;
			}
			set
			{
				if ((this._GradeGroupId != value))
				{
					this.OnGradeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GradeGroupId = value;
					this.SendPropertyChanged("GradeGroupId");
					this.OnGradeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_ExamFullMark", Storage="_ExamFullMarks", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId")]
		public EntitySet<ExamFullMark> ExamFullMarks
		{
			get
			{
				return this._ExamFullMarks;
			}
			set
			{
				this._ExamFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_PupilSubject", Storage="_PupilSubjects", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId")]
		public EntitySet<PupilSubject> PupilSubjects
		{
			get
			{
				return this._PupilSubjects;
			}
			set
			{
				this._PupilSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_SubjectFullMark", Storage="_SubjectFullMarks", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId")]
		public EntitySet<SubjectFullMark> SubjectFullMarks
		{
			get
			{
				return this._SubjectFullMarks;
			}
			set
			{
				this._SubjectFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_SubjectGradingScale", Storage="_SubjectGradingScales", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId")]
		public EntitySet<SubjectGradingScale> SubjectGradingScales
		{
			get
			{
				return this._SubjectGradingScales;
			}
			set
			{
				this._SubjectGradingScales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassSubject", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassSubjects.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassSubjects.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassSubject", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.ClassSubjects.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.ClassSubjects.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassSubject", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.ClassSubjects.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.ClassSubjects.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassSubject1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.ClassSubjects1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.ClassSubjects1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ClassSubject", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectId", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.ClassSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.ClassSubjects.Add(this);
						this._SubjectId = value.SubjectId;
					}
					else
					{
						this._SubjectId = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = this;
		}
		
		private void detach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = null;
		}
		
		private void attach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = this;
		}
		
		private void detach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = null;
		}
		
		private void attach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = this;
		}
		
		private void detach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = null;
		}
		
		private void attach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = this;
		}
		
		private void detach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.ClassSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentId;
		
		private string _DepartmentName;
		
		private byte _Status;
		
		private EntitySet<Staff> _Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Department()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Staff", Storage="_Staffs", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Designation")]
	public partial class Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesignationId;
		
		private string _DesignationName;
		
		private byte _Status;
		
		private EntitySet<Staff> _Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIdChanging(int value);
    partial void OnDesignationIdChanged();
    partial void OnDesignationNameChanging(string value);
    partial void OnDesignationNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Designation()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DesignationName
		{
			get
			{
				return this._DesignationName;
			}
			set
			{
				if ((this._DesignationName != value))
				{
					this.OnDesignationNameChanging(value);
					this.SendPropertyChanging();
					this._DesignationName = value;
					this.SendPropertyChanged("DesignationName");
					this.OnDesignationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_Staff", Storage="_Staffs", ThisKey="DesignationId", OtherKey="DesignationId")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Designation = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Designation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exam")]
	public partial class Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamId;
		
		private int _ExamTypeId;
		
		private string _ExamName;
		
		private string _ExamShortName;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<ClassExam> _ClassExams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIdChanging(int value);
    partial void OnExamIdChanged();
    partial void OnExamTypeIdChanging(int value);
    partial void OnExamTypeIdChanged();
    partial void OnExamNameChanging(string value);
    partial void OnExamNameChanged();
    partial void OnExamShortNameChanging(string value);
    partial void OnExamShortNameChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Exam()
		{
			this._ClassExams = new EntitySet<ClassExam>(new Action<ClassExam>(this.attach_ClassExams), new Action<ClassExam>(this.detach_ClassExams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamId
		{
			get
			{
				return this._ExamId;
			}
			set
			{
				if ((this._ExamId != value))
				{
					this.OnExamIdChanging(value);
					this.SendPropertyChanging();
					this._ExamId = value;
					this.SendPropertyChanged("ExamId");
					this.OnExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeId", DbType="Int NOT NULL")]
		public int ExamTypeId
		{
			get
			{
				return this._ExamTypeId;
			}
			set
			{
				if ((this._ExamTypeId != value))
				{
					this.OnExamTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeId = value;
					this.SendPropertyChanged("ExamTypeId");
					this.OnExamTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExamName
		{
			get
			{
				return this._ExamName;
			}
			set
			{
				if ((this._ExamName != value))
				{
					this.OnExamNameChanging(value);
					this.SendPropertyChanging();
					this._ExamName = value;
					this.SendPropertyChanged("ExamName");
					this.OnExamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamShortName", DbType="NVarChar(50)")]
		public string ExamShortName
		{
			get
			{
				return this._ExamShortName;
			}
			set
			{
				if ((this._ExamShortName != value))
				{
					this.OnExamShortNameChanging(value);
					this.SendPropertyChanging();
					this._ExamShortName = value;
					this.SendPropertyChanged("ExamShortName");
					this.OnExamShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ClassExam", Storage="_ClassExams", ThisKey="ExamId", OtherKey="ExamId")]
		public EntitySet<ClassExam> ClassExams
		{
			get
			{
				return this._ClassExams;
			}
			set
			{
				this._ClassExams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamFullMark")]
	public partial class ExamFullMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamFullMarkId;
		
		private int _ExamTypeId;
		
		private int _ClassSubjectId;
		
		private byte _Term;
		
		private decimal _TheoryPassingMarks;
		
		private decimal _TheoryFullMarks;
		
		private decimal _PracticalPassingMarks;
		
		private decimal _PracticalFullMarks;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<ClassSubject> _ClassSubject;
		
		private EntityRef<ExamType> _ExamType;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamFullMarkIdChanging(int value);
    partial void OnExamFullMarkIdChanged();
    partial void OnExamTypeIdChanging(int value);
    partial void OnExamTypeIdChanged();
    partial void OnClassSubjectIdChanging(int value);
    partial void OnClassSubjectIdChanged();
    partial void OnTermChanging(byte value);
    partial void OnTermChanged();
    partial void OnTheoryPassingMarksChanging(decimal value);
    partial void OnTheoryPassingMarksChanged();
    partial void OnTheoryFullMarksChanging(decimal value);
    partial void OnTheoryFullMarksChanged();
    partial void OnPracticalPassingMarksChanging(decimal value);
    partial void OnPracticalPassingMarksChanged();
    partial void OnPracticalFullMarksChanging(decimal value);
    partial void OnPracticalFullMarksChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ExamFullMark()
		{
			this._ClassSubject = default(EntityRef<ClassSubject>);
			this._ExamType = default(EntityRef<ExamType>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamFullMarkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamFullMarkId
		{
			get
			{
				return this._ExamFullMarkId;
			}
			set
			{
				if ((this._ExamFullMarkId != value))
				{
					this.OnExamFullMarkIdChanging(value);
					this.SendPropertyChanging();
					this._ExamFullMarkId = value;
					this.SendPropertyChanged("ExamFullMarkId");
					this.OnExamFullMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeId", DbType="Int NOT NULL")]
		public int ExamTypeId
		{
			get
			{
				return this._ExamTypeId;
			}
			set
			{
				if ((this._ExamTypeId != value))
				{
					if (this._ExamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeId = value;
					this.SendPropertyChanged("ExamTypeId");
					this.OnExamTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectId", DbType="Int NOT NULL")]
		public int ClassSubjectId
		{
			get
			{
				return this._ClassSubjectId;
			}
			set
			{
				if ((this._ClassSubjectId != value))
				{
					if (this._ClassSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectId = value;
					this.SendPropertyChanged("ClassSubjectId");
					this.OnClassSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="TinyInt NOT NULL")]
		public byte Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryPassingMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal TheoryPassingMarks
		{
			get
			{
				return this._TheoryPassingMarks;
			}
			set
			{
				if ((this._TheoryPassingMarks != value))
				{
					this.OnTheoryPassingMarksChanging(value);
					this.SendPropertyChanging();
					this._TheoryPassingMarks = value;
					this.SendPropertyChanged("TheoryPassingMarks");
					this.OnTheoryPassingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryFullMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal TheoryFullMarks
		{
			get
			{
				return this._TheoryFullMarks;
			}
			set
			{
				if ((this._TheoryFullMarks != value))
				{
					this.OnTheoryFullMarksChanging(value);
					this.SendPropertyChanging();
					this._TheoryFullMarks = value;
					this.SendPropertyChanged("TheoryFullMarks");
					this.OnTheoryFullMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalPassingMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal PracticalPassingMarks
		{
			get
			{
				return this._PracticalPassingMarks;
			}
			set
			{
				if ((this._PracticalPassingMarks != value))
				{
					this.OnPracticalPassingMarksChanging(value);
					this.SendPropertyChanging();
					this._PracticalPassingMarks = value;
					this.SendPropertyChanged("PracticalPassingMarks");
					this.OnPracticalPassingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalFullMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal PracticalFullMarks
		{
			get
			{
				return this._PracticalFullMarks;
			}
			set
			{
				if ((this._PracticalFullMarks != value))
				{
					this.OnPracticalFullMarksChanging(value);
					this.SendPropertyChanging();
					this._PracticalFullMarks = value;
					this.SendPropertyChanged("PracticalFullMarks");
					this.OnPracticalFullMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_ExamFullMark", Storage="_ClassSubject", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId", IsForeignKey=true)]
		public ClassSubject ClassSubject
		{
			get
			{
				return this._ClassSubject.Entity;
			}
			set
			{
				ClassSubject previousValue = this._ClassSubject.Entity;
				if (((previousValue != value) 
							|| (this._ClassSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassSubject.Entity = null;
						previousValue.ExamFullMarks.Remove(this);
					}
					this._ClassSubject.Entity = value;
					if ((value != null))
					{
						value.ExamFullMarks.Add(this);
						this._ClassSubjectId = value.ClassSubjectId;
					}
					else
					{
						this._ClassSubjectId = default(int);
					}
					this.SendPropertyChanged("ClassSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamFullMark", Storage="_ExamType", ThisKey="ExamTypeId", OtherKey="ExamTypeId", IsForeignKey=true)]
		public ExamType ExamType
		{
			get
			{
				return this._ExamType.Entity;
			}
			set
			{
				ExamType previousValue = this._ExamType.Entity;
				if (((previousValue != value) 
							|| (this._ExamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamType.Entity = null;
						previousValue.ExamFullMarks.Remove(this);
					}
					this._ExamType.Entity = value;
					if ((value != null))
					{
						value.ExamFullMarks.Add(this);
						this._ExamTypeId = value.ExamTypeId;
					}
					else
					{
						this._ExamTypeId = default(int);
					}
					this.SendPropertyChanged("ExamType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ExamFullMark", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.ExamFullMarks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.ExamFullMarks.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ExamFullMark1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.ExamFullMarks1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.ExamFullMarks1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamType")]
	public partial class ExamType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamTypeId;
		
		private string _ExamTypeName;
		
		private string _ShortName;
		
		private byte _Status;
		
		private EntitySet<ExamFullMark> _ExamFullMarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamTypeIdChanging(int value);
    partial void OnExamTypeIdChanged();
    partial void OnExamTypeNameChanging(string value);
    partial void OnExamTypeNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ExamType()
		{
			this._ExamFullMarks = new EntitySet<ExamFullMark>(new Action<ExamFullMark>(this.attach_ExamFullMarks), new Action<ExamFullMark>(this.detach_ExamFullMarks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExamTypeId
		{
			get
			{
				return this._ExamTypeId;
			}
			set
			{
				if ((this._ExamTypeId != value))
				{
					this.OnExamTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeId = value;
					this.SendPropertyChanged("ExamTypeId");
					this.OnExamTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExamTypeName
		{
			get
			{
				return this._ExamTypeName;
			}
			set
			{
				if ((this._ExamTypeName != value))
				{
					this.OnExamTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeName = value;
					this.SendPropertyChanged("ExamTypeName");
					this.OnExamTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamFullMark", Storage="_ExamFullMarks", ThisKey="ExamTypeId", OtherKey="ExamTypeId")]
		public EntitySet<ExamFullMark> ExamFullMarks
		{
			get
			{
				return this._ExamFullMarks;
			}
			set
			{
				this._ExamFullMarks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = this;
		}
		
		private void detach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeAdmission")]
	public partial class FeeAdmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeAdmissionId;
		
		private int _FeeAdmissionHeadId;
		
		private decimal _FeeAmount;
		
		private string _Remarks;
		
		private bool _IsCompulsory;
		
		private bool _IsActive;
		
		private bool _IsRefundable;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<FeeAdmissionHead> _FeeAdmissionHead;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeAdmissionIdChanging(int value);
    partial void OnFeeAdmissionIdChanged();
    partial void OnFeeAdmissionHeadIdChanging(int value);
    partial void OnFeeAdmissionHeadIdChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsRefundableChanging(bool value);
    partial void OnIsRefundableChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeeAdmission()
		{
			this._FeeAdmissionHead = default(EntityRef<FeeAdmissionHead>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAdmissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeAdmissionId
		{
			get
			{
				return this._FeeAdmissionId;
			}
			set
			{
				if ((this._FeeAdmissionId != value))
				{
					this.OnFeeAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._FeeAdmissionId = value;
					this.SendPropertyChanged("FeeAdmissionId");
					this.OnFeeAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAdmissionHeadId", DbType="Int NOT NULL")]
		public int FeeAdmissionHeadId
		{
			get
			{
				return this._FeeAdmissionHeadId;
			}
			set
			{
				if ((this._FeeAdmissionHeadId != value))
				{
					if (this._FeeAdmissionHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeAdmissionHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeAdmissionHeadId = value;
					this.SendPropertyChanged("FeeAdmissionHeadId");
					this.OnFeeAdmissionHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRefundable", DbType="Bit NOT NULL")]
		public bool IsRefundable
		{
			get
			{
				return this._IsRefundable;
			}
			set
			{
				if ((this._IsRefundable != value))
				{
					this.OnIsRefundableChanging(value);
					this.SendPropertyChanging();
					this._IsRefundable = value;
					this.SendPropertyChanged("IsRefundable");
					this.OnIsRefundableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeAdmissionHead_FeeAdmission", Storage="_FeeAdmissionHead", ThisKey="FeeAdmissionHeadId", OtherKey="FeeAdmissionHeadId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FeeAdmissionHead FeeAdmissionHead
		{
			get
			{
				return this._FeeAdmissionHead.Entity;
			}
			set
			{
				FeeAdmissionHead previousValue = this._FeeAdmissionHead.Entity;
				if (((previousValue != value) 
							|| (this._FeeAdmissionHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeAdmissionHead.Entity = null;
						previousValue.FeeAdmissions.Remove(this);
					}
					this._FeeAdmissionHead.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissions.Add(this);
						this._FeeAdmissionHeadId = value.FeeAdmissionHeadId;
					}
					else
					{
						this._FeeAdmissionHeadId = default(int);
					}
					this.SendPropertyChanged("FeeAdmissionHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmission", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeAdmissions.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissions.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmission1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeeAdmissions1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissions1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeAdmissionHead")]
	public partial class FeeAdmissionHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeAdmissionHeadId;
		
		private byte _AdmissionType;
		
		private int _HeadId;
		
		private int _SessionId;
		
		private int _ClassId;
		
		private int _PupilTypeId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<FeeAdmission> _FeeAdmissions;
		
		private EntityRef<PupilType> _PupilType;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeAdmissionHeadIdChanging(int value);
    partial void OnFeeAdmissionHeadIdChanged();
    partial void OnAdmissionTypeChanging(byte value);
    partial void OnAdmissionTypeChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnPupilTypeIdChanging(int value);
    partial void OnPupilTypeIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public FeeAdmissionHead()
		{
			this._FeeAdmissions = new EntitySet<FeeAdmission>(new Action<FeeAdmission>(this.attach_FeeAdmissions), new Action<FeeAdmission>(this.detach_FeeAdmissions));
			this._PupilType = default(EntityRef<PupilType>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAdmissionHeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeAdmissionHeadId
		{
			get
			{
				return this._FeeAdmissionHeadId;
			}
			set
			{
				if ((this._FeeAdmissionHeadId != value))
				{
					this.OnFeeAdmissionHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeAdmissionHeadId = value;
					this.SendPropertyChanged("FeeAdmissionHeadId");
					this.OnFeeAdmissionHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="TinyInt NOT NULL")]
		public byte AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilTypeId", DbType="Int NOT NULL")]
		public int PupilTypeId
		{
			get
			{
				return this._PupilTypeId;
			}
			set
			{
				if ((this._PupilTypeId != value))
				{
					if (this._PupilType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilTypeId = value;
					this.SendPropertyChanged("PupilTypeId");
					this.OnPupilTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeAdmissionHead_FeeAdmission", Storage="_FeeAdmissions", ThisKey="FeeAdmissionHeadId", OtherKey="FeeAdmissionHeadId")]
		public EntitySet<FeeAdmission> FeeAdmissions
		{
			get
			{
				return this._FeeAdmissions;
			}
			set
			{
				this._FeeAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_FeeAdmissionHead", Storage="_PupilType", ThisKey="PupilTypeId", OtherKey="PupilTypeId", IsForeignKey=true)]
		public PupilType PupilType
		{
			get
			{
				return this._PupilType.Entity;
			}
			set
			{
				PupilType previousValue = this._PupilType.Entity;
				if (((previousValue != value) 
							|| (this._PupilType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilType.Entity = null;
						previousValue.FeeAdmissionHeads.Remove(this);
					}
					this._PupilType.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissionHeads.Add(this);
						this._PupilTypeId = value.PupilTypeId;
					}
					else
					{
						this._PupilTypeId = default(int);
					}
					this.SendPropertyChanged("PupilType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeeAdmissionHead", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.FeeAdmissionHeads.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissionHeads.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmissionHead", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeAdmissionHeads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeAdmissionHeads.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeAdmissions(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.FeeAdmissionHead = this;
		}
		
		private void detach_FeeAdmissions(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.FeeAdmissionHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeClass")]
	public partial class FeeClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeClassId;
		
		private int _FeeClassHeadId;
		
		private decimal _FeeAmount;
		
		private string _Remarks;
		
		private bool _IsActive;
		
		private bool _IsCompulsory;
		
		private bool _IsRefundable;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PupilWaiveOff> _PupilWaiveOffs;
		
		private EntityRef<FeeClassHead> _FeeClassHead;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeClassIdChanging(int value);
    partial void OnFeeClassIdChanged();
    partial void OnFeeClassHeadIdChanging(int value);
    partial void OnFeeClassHeadIdChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnIsRefundableChanging(bool value);
    partial void OnIsRefundableChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeeClass()
		{
			this._PupilWaiveOffs = new EntitySet<PupilWaiveOff>(new Action<PupilWaiveOff>(this.attach_PupilWaiveOffs), new Action<PupilWaiveOff>(this.detach_PupilWaiveOffs));
			this._FeeClassHead = default(EntityRef<FeeClassHead>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeClassId
		{
			get
			{
				return this._FeeClassId;
			}
			set
			{
				if ((this._FeeClassId != value))
				{
					this.OnFeeClassIdChanging(value);
					this.SendPropertyChanging();
					this._FeeClassId = value;
					this.SendPropertyChanged("FeeClassId");
					this.OnFeeClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeClassHeadId", DbType="Int NOT NULL")]
		public int FeeClassHeadId
		{
			get
			{
				return this._FeeClassHeadId;
			}
			set
			{
				if ((this._FeeClassHeadId != value))
				{
					if (this._FeeClassHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeClassHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeClassHeadId = value;
					this.SendPropertyChanged("FeeClassHeadId");
					this.OnFeeClassHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRefundable", DbType="Bit NOT NULL")]
		public bool IsRefundable
		{
			get
			{
				return this._IsRefundable;
			}
			set
			{
				if ((this._IsRefundable != value))
				{
					this.OnIsRefundableChanging(value);
					this.SendPropertyChanging();
					this._IsRefundable = value;
					this.SendPropertyChanged("IsRefundable");
					this.OnIsRefundableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeClass_PupilWaiveOff", Storage="_PupilWaiveOffs", ThisKey="FeeClassId", OtherKey="FeeClassId")]
		public EntitySet<PupilWaiveOff> PupilWaiveOffs
		{
			get
			{
				return this._PupilWaiveOffs;
			}
			set
			{
				this._PupilWaiveOffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeClassHead_FeeClass", Storage="_FeeClassHead", ThisKey="FeeClassHeadId", OtherKey="FeeClassHeadId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FeeClassHead FeeClassHead
		{
			get
			{
				return this._FeeClassHead.Entity;
			}
			set
			{
				FeeClassHead previousValue = this._FeeClassHead.Entity;
				if (((previousValue != value) 
							|| (this._FeeClassHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeClassHead.Entity = null;
						previousValue.FeeClasses.Remove(this);
					}
					this._FeeClassHead.Entity = value;
					if ((value != null))
					{
						value.FeeClasses.Add(this);
						this._FeeClassHeadId = value.FeeClassHeadId;
					}
					else
					{
						this._FeeClassHeadId = default(int);
					}
					this.SendPropertyChanged("FeeClassHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClass", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeClasses.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeClasses.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClass1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeeClasses1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeeClasses1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.FeeClass = this;
		}
		
		private void detach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.FeeClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeClassHead")]
	public partial class FeeClassHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeClassHeadId;
		
		private int _MonthId;
		
		private int _HeadId;
		
		private int _SessionId;
		
		private int _ClassId;
		
		private int _PupilTypeId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<FeeClass> _FeeClasses;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<PupilType> _PupilType;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeClassHeadIdChanging(int value);
    partial void OnFeeClassHeadIdChanged();
    partial void OnMonthIdChanging(int value);
    partial void OnMonthIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnPupilTypeIdChanging(int value);
    partial void OnPupilTypeIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public FeeClassHead()
		{
			this._FeeClasses = new EntitySet<FeeClass>(new Action<FeeClass>(this.attach_FeeClasses), new Action<FeeClass>(this.detach_FeeClasses));
			this._Class = default(EntityRef<Class>);
			this._Head = default(EntityRef<Head>);
			this._PupilType = default(EntityRef<PupilType>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeClassHeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeClassHeadId
		{
			get
			{
				return this._FeeClassHeadId;
			}
			set
			{
				if ((this._FeeClassHeadId != value))
				{
					this.OnFeeClassHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeClassHeadId = value;
					this.SendPropertyChanged("FeeClassHeadId");
					this.OnFeeClassHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="Int NOT NULL")]
		public int MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilTypeId", DbType="Int NOT NULL")]
		public int PupilTypeId
		{
			get
			{
				return this._PupilTypeId;
			}
			set
			{
				if ((this._PupilTypeId != value))
				{
					if (this._PupilType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilTypeId = value;
					this.SendPropertyChanged("PupilTypeId");
					this.OnPupilTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeClassHead_FeeClass", Storage="_FeeClasses", ThisKey="FeeClassHeadId", OtherKey="FeeClassHeadId")]
		public EntitySet<FeeClass> FeeClasses
		{
			get
			{
				return this._FeeClasses;
			}
			set
			{
				this._FeeClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_FeeClassHead", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.FeeClassHeads.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.FeeClassHeads.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeClassHead", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeeClassHeads.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeeClassHeads.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_FeeClassHead", Storage="_PupilType", ThisKey="PupilTypeId", OtherKey="PupilTypeId", IsForeignKey=true)]
		public PupilType PupilType
		{
			get
			{
				return this._PupilType.Entity;
			}
			set
			{
				PupilType previousValue = this._PupilType.Entity;
				if (((previousValue != value) 
							|| (this._PupilType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilType.Entity = null;
						previousValue.FeeClassHeads.Remove(this);
					}
					this._PupilType.Entity = value;
					if ((value != null))
					{
						value.FeeClassHeads.Add(this);
						this._PupilTypeId = value.PupilTypeId;
					}
					else
					{
						this._PupilTypeId = default(int);
					}
					this.SendPropertyChanged("PupilType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeeClassHead", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.FeeClassHeads.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.FeeClassHeads.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClassHead", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeClassHeads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeClassHeads.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeClasses(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.FeeClassHead = this;
		}
		
		private void detach_FeeClasses(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.FeeClassHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePayment")]
	public partial class FeePayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeePaymentId;
		
		private string _ReceiptNo;
		
		private System.Nullable<int> _RegistrationId;
		
		private System.Nullable<int> _PupilAdmissionId;
		
		private int _SessionId;
		
		private byte _PaymentFor;
		
		private System.DateTime _PaymentDate;
		
		private System.Nullable<System.DateTime> _PaymentConfirmDate;
		
		private string _PaymentDetail;
		
		private byte _PaymentMode;
		
		private string _ChequeNo;
		
		private System.Nullable<System.DateTime> _ChequeDate;
		
		private string _ChequeBank;
		
		private string _ChequeBankBranch;
		
		private string _TransactionNo;
		
		private decimal _FeeAmount;
		
		private decimal _WaiveOffAmount;
		
		private decimal _TotalAmount;
		
		private decimal _PaidAmount;
		
		private string _PaidMonths;
		
		private string _PaidPeriod;
		
		private string _Remarks;
		
		private string _RemarksOnWaiveOff;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private byte _FeePaymentStatus;
		
		private EntitySet<FeePaymentDetail> _FeePaymentDetails;
		
		private EntitySet<FeePaymentMonth> _FeePaymentMonths;
		
		private EntitySet<FeeRemark> _FeeRemarks;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
		private EntityRef<Registration> _Registration;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeePaymentIdChanging(int value);
    partial void OnFeePaymentIdChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnRegistrationIdChanging(System.Nullable<int> value);
    partial void OnRegistrationIdChanged();
    partial void OnPupilAdmissionIdChanging(System.Nullable<int> value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnPaymentForChanging(byte value);
    partial void OnPaymentForChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentConfirmDateChanged();
    partial void OnPaymentDetailChanging(string value);
    partial void OnPaymentDetailChanged();
    partial void OnPaymentModeChanging(byte value);
    partial void OnPaymentModeChanged();
    partial void OnChequeNoChanging(string value);
    partial void OnChequeNoChanged();
    partial void OnChequeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChequeDateChanged();
    partial void OnChequeBankChanging(string value);
    partial void OnChequeBankChanged();
    partial void OnChequeBankBranchChanging(string value);
    partial void OnChequeBankBranchChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnWaiveOffAmountChanging(decimal value);
    partial void OnWaiveOffAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPaidMonthsChanging(string value);
    partial void OnPaidMonthsChanged();
    partial void OnPaidPeriodChanging(string value);
    partial void OnPaidPeriodChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnRemarksOnWaiveOffChanging(string value);
    partial void OnRemarksOnWaiveOffChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnFeePaymentStatusChanging(byte value);
    partial void OnFeePaymentStatusChanged();
    #endregion
		
		public FeePayment()
		{
			this._FeePaymentDetails = new EntitySet<FeePaymentDetail>(new Action<FeePaymentDetail>(this.attach_FeePaymentDetails), new Action<FeePaymentDetail>(this.detach_FeePaymentDetails));
			this._FeePaymentMonths = new EntitySet<FeePaymentMonth>(new Action<FeePaymentMonth>(this.attach_FeePaymentMonths), new Action<FeePaymentMonth>(this.detach_FeePaymentMonths));
			this._FeeRemarks = new EntitySet<FeeRemark>(new Action<FeeRemark>(this.attach_FeeRemarks), new Action<FeeRemark>(this.detach_FeeRemarks));
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			this._Registration = default(EntityRef<Registration>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeePaymentId
		{
			get
			{
				return this._FeePaymentId;
			}
			set
			{
				if ((this._FeePaymentId != value))
				{
					this.OnFeePaymentIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentId = value;
					this.SendPropertyChanged("FeePaymentId");
					this.OnFeePaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationId", DbType="Int")]
		public System.Nullable<int> RegistrationId
		{
			get
			{
				return this._RegistrationId;
			}
			set
			{
				if ((this._RegistrationId != value))
				{
					if (this._Registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationId = value;
					this.SendPropertyChanged("RegistrationId");
					this.OnRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int")]
		public System.Nullable<int> PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFor", DbType="TinyInt NOT NULL")]
		public byte PaymentFor
		{
			get
			{
				return this._PaymentFor;
			}
			set
			{
				if ((this._PaymentFor != value))
				{
					this.OnPaymentForChanging(value);
					this.SendPropertyChanging();
					this._PaymentFor = value;
					this.SendPropertyChanged("PaymentFor");
					this.OnPaymentForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentConfirmDate
		{
			get
			{
				return this._PaymentConfirmDate;
			}
			set
			{
				if ((this._PaymentConfirmDate != value))
				{
					this.OnPaymentConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentConfirmDate = value;
					this.SendPropertyChanged("PaymentConfirmDate");
					this.OnPaymentConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDetail", DbType="NVarChar(350)")]
		public string PaymentDetail
		{
			get
			{
				return this._PaymentDetail;
			}
			set
			{
				if ((this._PaymentDetail != value))
				{
					this.OnPaymentDetailChanging(value);
					this.SendPropertyChanging();
					this._PaymentDetail = value;
					this.SendPropertyChanged("PaymentDetail");
					this.OnPaymentDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="TinyInt NOT NULL")]
		public byte PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNo", DbType="NVarChar(50)")]
		public string ChequeNo
		{
			get
			{
				return this._ChequeNo;
			}
			set
			{
				if ((this._ChequeNo != value))
				{
					this.OnChequeNoChanging(value);
					this.SendPropertyChanging();
					this._ChequeNo = value;
					this.SendPropertyChanged("ChequeNo");
					this.OnChequeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeDate", DbType="Date")]
		public System.Nullable<System.DateTime> ChequeDate
		{
			get
			{
				return this._ChequeDate;
			}
			set
			{
				if ((this._ChequeDate != value))
				{
					this.OnChequeDateChanging(value);
					this.SendPropertyChanging();
					this._ChequeDate = value;
					this.SendPropertyChanged("ChequeDate");
					this.OnChequeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeBank", DbType="NVarChar(150)")]
		public string ChequeBank
		{
			get
			{
				return this._ChequeBank;
			}
			set
			{
				if ((this._ChequeBank != value))
				{
					this.OnChequeBankChanging(value);
					this.SendPropertyChanging();
					this._ChequeBank = value;
					this.SendPropertyChanged("ChequeBank");
					this.OnChequeBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeBankBranch", DbType="NVarChar(50)")]
		public string ChequeBankBranch
		{
			get
			{
				return this._ChequeBankBranch;
			}
			set
			{
				if ((this._ChequeBankBranch != value))
				{
					this.OnChequeBankBranchChanging(value);
					this.SendPropertyChanging();
					this._ChequeBankBranch = value;
					this.SendPropertyChanged("ChequeBankBranch");
					this.OnChequeBankBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="NVarChar(50)")]
		public string TransactionNo
		{
			get
			{
				return this._TransactionNo;
			}
			set
			{
				if ((this._TransactionNo != value))
				{
					this.OnTransactionNoChanging(value);
					this.SendPropertyChanging();
					this._TransactionNo = value;
					this.SendPropertyChanged("TransactionNo");
					this.OnTransactionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaiveOffAmount", DbType="Money NOT NULL")]
		public decimal WaiveOffAmount
		{
			get
			{
				return this._WaiveOffAmount;
			}
			set
			{
				if ((this._WaiveOffAmount != value))
				{
					this.OnWaiveOffAmountChanging(value);
					this.SendPropertyChanging();
					this._WaiveOffAmount = value;
					this.SendPropertyChanged("WaiveOffAmount");
					this.OnWaiveOffAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Money NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidMonths", DbType="NVarChar(250)")]
		public string PaidMonths
		{
			get
			{
				return this._PaidMonths;
			}
			set
			{
				if ((this._PaidMonths != value))
				{
					this.OnPaidMonthsChanging(value);
					this.SendPropertyChanging();
					this._PaidMonths = value;
					this.SendPropertyChanged("PaidMonths");
					this.OnPaidMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidPeriod", DbType="NVarChar(150)")]
		public string PaidPeriod
		{
			get
			{
				return this._PaidPeriod;
			}
			set
			{
				if ((this._PaidPeriod != value))
				{
					this.OnPaidPeriodChanging(value);
					this.SendPropertyChanging();
					this._PaidPeriod = value;
					this.SendPropertyChanged("PaidPeriod");
					this.OnPaidPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(550)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarksOnWaiveOff", DbType="NVarChar(250)")]
		public string RemarksOnWaiveOff
		{
			get
			{
				return this._RemarksOnWaiveOff;
			}
			set
			{
				if ((this._RemarksOnWaiveOff != value))
				{
					this.OnRemarksOnWaiveOffChanging(value);
					this.SendPropertyChanging();
					this._RemarksOnWaiveOff = value;
					this.SendPropertyChanged("RemarksOnWaiveOff");
					this.OnRemarksOnWaiveOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentStatus", DbType="TinyInt NOT NULL")]
		public byte FeePaymentStatus
		{
			get
			{
				return this._FeePaymentStatus;
			}
			set
			{
				if ((this._FeePaymentStatus != value))
				{
					this.OnFeePaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentStatus = value;
					this.SendPropertyChanged("FeePaymentStatus");
					this.OnFeePaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeePaymentDetail", Storage="_FeePaymentDetails", ThisKey="FeePaymentId", OtherKey="FeePaymentId")]
		public EntitySet<FeePaymentDetail> FeePaymentDetails
		{
			get
			{
				return this._FeePaymentDetails;
			}
			set
			{
				this._FeePaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeePaymentMonth", Storage="_FeePaymentMonths", ThisKey="FeePaymentId", OtherKey="FeePaymentId")]
		public EntitySet<FeePaymentMonth> FeePaymentMonths
		{
			get
			{
				return this._FeePaymentMonths;
			}
			set
			{
				this._FeePaymentMonths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeeRemark", Storage="_FeeRemarks", ThisKey="FeePaymentId", OtherKey="FeePaymentId")]
		public EntitySet<FeeRemark> FeeRemarks
		{
			get
			{
				return this._FeeRemarks;
			}
			set
			{
				this._FeeRemarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_FeePayment", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.FeePayments.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.FeePayments.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_FeePayment", Storage="_Registration", ThisKey="RegistrationId", OtherKey="RegistrationId", IsForeignKey=true)]
		public Registration Registration
		{
			get
			{
				return this._Registration.Entity;
			}
			set
			{
				Registration previousValue = this._Registration.Entity;
				if (((previousValue != value) 
							|| (this._Registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Registration.Entity = null;
						previousValue.FeePayments.Remove(this);
					}
					this._Registration.Entity = value;
					if ((value != null))
					{
						value.FeePayments.Add(this);
						this._RegistrationId = value.RegistrationId;
					}
					else
					{
						this._RegistrationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeePayment", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.FeePayments.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.FeePayments.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePayment", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeePayments.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeePayments.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePayment1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeePayments1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeePayments1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = this;
		}
		
		private void detach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = null;
		}
		
		private void attach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = this;
		}
		
		private void detach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = null;
		}
		
		private void attach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = this;
		}
		
		private void detach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.FeePayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePaymentDetail")]
	public partial class FeePaymentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeePaymentDetailId;
		
		private int _FeePaymentId;
		
		private int _HeadId;
		
		private string _HeadName;
		
		private byte _FeeFor;
		
		private decimal _FeeAmount;
		
		private decimal _WaiveOffAmount;
		
		private decimal _TotalAmount;
		
		private string _Remarks;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private EntitySet<PupilWaiveOff> _PupilWaiveOffs;
		
		private EntityRef<FeePayment> _FeePayment;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeePaymentDetailIdChanging(int value);
    partial void OnFeePaymentDetailIdChanged();
    partial void OnFeePaymentIdChanging(int value);
    partial void OnFeePaymentIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnHeadNameChanging(string value);
    partial void OnHeadNameChanged();
    partial void OnFeeForChanging(byte value);
    partial void OnFeeForChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnWaiveOffAmountChanging(decimal value);
    partial void OnWaiveOffAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public FeePaymentDetail()
		{
			this._PupilWaiveOffs = new EntitySet<PupilWaiveOff>(new Action<PupilWaiveOff>(this.attach_PupilWaiveOffs), new Action<PupilWaiveOff>(this.detach_PupilWaiveOffs));
			this._FeePayment = default(EntityRef<FeePayment>);
			this._Head = default(EntityRef<Head>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeePaymentDetailId
		{
			get
			{
				return this._FeePaymentDetailId;
			}
			set
			{
				if ((this._FeePaymentDetailId != value))
				{
					this.OnFeePaymentDetailIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentDetailId = value;
					this.SendPropertyChanged("FeePaymentDetailId");
					this.OnFeePaymentDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentId", DbType="Int NOT NULL")]
		public int FeePaymentId
		{
			get
			{
				return this._FeePaymentId;
			}
			set
			{
				if ((this._FeePaymentId != value))
				{
					if (this._FeePayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePaymentIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentId = value;
					this.SendPropertyChanged("FeePaymentId");
					this.OnFeePaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string HeadName
		{
			get
			{
				return this._HeadName;
			}
			set
			{
				if ((this._HeadName != value))
				{
					this.OnHeadNameChanging(value);
					this.SendPropertyChanging();
					this._HeadName = value;
					this.SendPropertyChanged("HeadName");
					this.OnHeadNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeFor", DbType="TinyInt NOT NULL")]
		public byte FeeFor
		{
			get
			{
				return this._FeeFor;
			}
			set
			{
				if ((this._FeeFor != value))
				{
					this.OnFeeForChanging(value);
					this.SendPropertyChanging();
					this._FeeFor = value;
					this.SendPropertyChanged("FeeFor");
					this.OnFeeForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaiveOffAmount", DbType="Money NOT NULL")]
		public decimal WaiveOffAmount
		{
			get
			{
				return this._WaiveOffAmount;
			}
			set
			{
				if ((this._WaiveOffAmount != value))
				{
					this.OnWaiveOffAmountChanging(value);
					this.SendPropertyChanging();
					this._WaiveOffAmount = value;
					this.SendPropertyChanged("WaiveOffAmount");
					this.OnWaiveOffAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePaymentDetail_PupilWaiveOff", Storage="_PupilWaiveOffs", ThisKey="FeePaymentDetailId", OtherKey="FeePaymentDetailId")]
		public EntitySet<PupilWaiveOff> PupilWaiveOffs
		{
			get
			{
				return this._PupilWaiveOffs;
			}
			set
			{
				this._PupilWaiveOffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeePaymentDetail", Storage="_FeePayment", ThisKey="FeePaymentId", OtherKey="FeePaymentId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FeePayment FeePayment
		{
			get
			{
				return this._FeePayment.Entity;
			}
			set
			{
				FeePayment previousValue = this._FeePayment.Entity;
				if (((previousValue != value) 
							|| (this._FeePayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePayment.Entity = null;
						previousValue.FeePaymentDetails.Remove(this);
					}
					this._FeePayment.Entity = value;
					if ((value != null))
					{
						value.FeePaymentDetails.Add(this);
						this._FeePaymentId = value.FeePaymentId;
					}
					else
					{
						this._FeePaymentId = default(int);
					}
					this.SendPropertyChanged("FeePayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeePaymentDetail", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeePaymentDetails.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeePaymentDetails.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePaymentDetail", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeePaymentDetails.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeePaymentDetails.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.FeePaymentDetail = this;
		}
		
		private void detach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.FeePaymentDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePaymentMonth")]
	public partial class FeePaymentMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeePaymentMonthId;
		
		private int _FeePaymentId;
		
		private int _PupilAdmissionId;
		
		private int _MonthId;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private EntityRef<FeePayment> _FeePayment;
		
		private EntityRef<Month> _Month;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeePaymentMonthIdChanging(int value);
    partial void OnFeePaymentMonthIdChanged();
    partial void OnFeePaymentIdChanging(int value);
    partial void OnFeePaymentIdChanged();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnMonthIdChanging(int value);
    partial void OnMonthIdChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public FeePaymentMonth()
		{
			this._FeePayment = default(EntityRef<FeePayment>);
			this._Month = default(EntityRef<Month>);
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentMonthId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeePaymentMonthId
		{
			get
			{
				return this._FeePaymentMonthId;
			}
			set
			{
				if ((this._FeePaymentMonthId != value))
				{
					this.OnFeePaymentMonthIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentMonthId = value;
					this.SendPropertyChanged("FeePaymentMonthId");
					this.OnFeePaymentMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentId", DbType="Int NOT NULL")]
		public int FeePaymentId
		{
			get
			{
				return this._FeePaymentId;
			}
			set
			{
				if ((this._FeePaymentId != value))
				{
					if (this._FeePayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePaymentIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentId = value;
					this.SendPropertyChanged("FeePaymentId");
					this.OnFeePaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int NOT NULL")]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="Int NOT NULL")]
		public int MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					if (this._Month.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeePaymentMonth", Storage="_FeePayment", ThisKey="FeePaymentId", OtherKey="FeePaymentId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FeePayment FeePayment
		{
			get
			{
				return this._FeePayment.Entity;
			}
			set
			{
				FeePayment previousValue = this._FeePayment.Entity;
				if (((previousValue != value) 
							|| (this._FeePayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePayment.Entity = null;
						previousValue.FeePaymentMonths.Remove(this);
					}
					this._FeePayment.Entity = value;
					if ((value != null))
					{
						value.FeePaymentMonths.Add(this);
						this._FeePaymentId = value.FeePaymentId;
					}
					else
					{
						this._FeePaymentId = default(int);
					}
					this.SendPropertyChanged("FeePayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_FeePaymentMonth", Storage="_Month", ThisKey="MonthId", OtherKey="MonthId", IsForeignKey=true)]
		public Month Month
		{
			get
			{
				return this._Month.Entity;
			}
			set
			{
				Month previousValue = this._Month.Entity;
				if (((previousValue != value) 
							|| (this._Month.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Month.Entity = null;
						previousValue.FeePaymentMonths.Remove(this);
					}
					this._Month.Entity = value;
					if ((value != null))
					{
						value.FeePaymentMonths.Add(this);
						this._MonthId = value.MonthId;
					}
					else
					{
						this._MonthId = default(int);
					}
					this.SendPropertyChanged("Month");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_FeePaymentMonth", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.FeePaymentMonths.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.FeePaymentMonths.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(int);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeRegistration")]
	public partial class FeeRegistration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeRegistrationId;
		
		private int _RegistrationFormId;
		
		private int _HeadId;
		
		private decimal _FeeAmount;
		
		private decimal _SameSchoolFeeAmount;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<RegistrationForm> _RegistrationForm;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeRegistrationIdChanging(int value);
    partial void OnFeeRegistrationIdChanged();
    partial void OnRegistrationFormIdChanging(int value);
    partial void OnRegistrationFormIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnSameSchoolFeeAmountChanging(decimal value);
    partial void OnSameSchoolFeeAmountChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeeRegistration()
		{
			this._Head = default(EntityRef<Head>);
			this._RegistrationForm = default(EntityRef<RegistrationForm>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeRegistrationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeRegistrationId
		{
			get
			{
				return this._FeeRegistrationId;
			}
			set
			{
				if ((this._FeeRegistrationId != value))
				{
					this.OnFeeRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._FeeRegistrationId = value;
					this.SendPropertyChanged("FeeRegistrationId");
					this.OnFeeRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationFormId", DbType="Int NOT NULL")]
		public int RegistrationFormId
		{
			get
			{
				return this._RegistrationFormId;
			}
			set
			{
				if ((this._RegistrationFormId != value))
				{
					if (this._RegistrationForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationFormIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationFormId = value;
					this.SendPropertyChanged("RegistrationFormId");
					this.OnRegistrationFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SameSchoolFeeAmount", DbType="Money NOT NULL")]
		public decimal SameSchoolFeeAmount
		{
			get
			{
				return this._SameSchoolFeeAmount;
			}
			set
			{
				if ((this._SameSchoolFeeAmount != value))
				{
					this.OnSameSchoolFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._SameSchoolFeeAmount = value;
					this.SendPropertyChanged("SameSchoolFeeAmount");
					this.OnSameSchoolFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeRegistration", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeeRegistrations.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrations.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationForm_FeeRegistration", Storage="_RegistrationForm", ThisKey="RegistrationFormId", OtherKey="RegistrationFormId", IsForeignKey=true)]
		public RegistrationForm RegistrationForm
		{
			get
			{
				return this._RegistrationForm.Entity;
			}
			set
			{
				RegistrationForm previousValue = this._RegistrationForm.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationForm.Entity = null;
						previousValue.FeeRegistrations.Remove(this);
					}
					this._RegistrationForm.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrations.Add(this);
						this._RegistrationFormId = value.RegistrationFormId;
					}
					else
					{
						this._RegistrationFormId = default(int);
					}
					this.SendPropertyChanged("RegistrationForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistration", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeRegistrations.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrations.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistration1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeeRegistrations1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrations1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeRegistrationHead")]
	public partial class FeeRegistrationHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeRegistrationHeadId;
		
		private int _HeadId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeRegistrationHeadIdChanging(int value);
    partial void OnFeeRegistrationHeadIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public FeeRegistrationHead()
		{
			this._Head = default(EntityRef<Head>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeRegistrationHeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeRegistrationHeadId
		{
			get
			{
				return this._FeeRegistrationHeadId;
			}
			set
			{
				if ((this._FeeRegistrationHeadId != value))
				{
					this.OnFeeRegistrationHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeRegistrationHeadId = value;
					this.SendPropertyChanged("FeeRegistrationHeadId");
					this.OnFeeRegistrationHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeRegistrationHead", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeeRegistrationHeads.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrationHeads.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistrationHead", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeRegistrationHeads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeRegistrationHeads.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeRemarks")]
	public partial class FeeRemark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeRemarksId;
		
		private int _PupilId;
		
		private System.Nullable<int> _FeePaymentId;
		
		private string _Reamarks;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private EntityRef<FeePayment> _FeePayment;
		
		private EntityRef<Pupil> _Pupil;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeRemarksIdChanging(int value);
    partial void OnFeeRemarksIdChanged();
    partial void OnPupilIdChanging(int value);
    partial void OnPupilIdChanged();
    partial void OnFeePaymentIdChanging(System.Nullable<int> value);
    partial void OnFeePaymentIdChanged();
    partial void OnReamarksChanging(string value);
    partial void OnReamarksChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public FeeRemark()
		{
			this._FeePayment = default(EntityRef<FeePayment>);
			this._Pupil = default(EntityRef<Pupil>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeRemarksId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeRemarksId
		{
			get
			{
				return this._FeeRemarksId;
			}
			set
			{
				if ((this._FeeRemarksId != value))
				{
					this.OnFeeRemarksIdChanging(value);
					this.SendPropertyChanging();
					this._FeeRemarksId = value;
					this.SendPropertyChanged("FeeRemarksId");
					this.OnFeeRemarksIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilId", DbType="Int NOT NULL")]
		public int PupilId
		{
			get
			{
				return this._PupilId;
			}
			set
			{
				if ((this._PupilId != value))
				{
					if (this._Pupil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilIdChanging(value);
					this.SendPropertyChanging();
					this._PupilId = value;
					this.SendPropertyChanged("PupilId");
					this.OnPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentId", DbType="Int")]
		public System.Nullable<int> FeePaymentId
		{
			get
			{
				return this._FeePaymentId;
			}
			set
			{
				if ((this._FeePaymentId != value))
				{
					if (this._FeePayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePaymentIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentId = value;
					this.SendPropertyChanged("FeePaymentId");
					this.OnFeePaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reamarks", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string Reamarks
		{
			get
			{
				return this._Reamarks;
			}
			set
			{
				if ((this._Reamarks != value))
				{
					this.OnReamarksChanging(value);
					this.SendPropertyChanging();
					this._Reamarks = value;
					this.SendPropertyChanged("Reamarks");
					this.OnReamarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePayment_FeeRemark", Storage="_FeePayment", ThisKey="FeePaymentId", OtherKey="FeePaymentId", IsForeignKey=true)]
		public FeePayment FeePayment
		{
			get
			{
				return this._FeePayment.Entity;
			}
			set
			{
				FeePayment previousValue = this._FeePayment.Entity;
				if (((previousValue != value) 
							|| (this._FeePayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePayment.Entity = null;
						previousValue.FeeRemarks.Remove(this);
					}
					this._FeePayment.Entity = value;
					if ((value != null))
					{
						value.FeeRemarks.Add(this);
						this._FeePaymentId = value.FeePaymentId;
					}
					else
					{
						this._FeePaymentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FeePayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_FeeRemark", Storage="_Pupil", ThisKey="PupilId", OtherKey="PupilId", IsForeignKey=true)]
		public Pupil Pupil
		{
			get
			{
				return this._Pupil.Entity;
			}
			set
			{
				Pupil previousValue = this._Pupil.Entity;
				if (((previousValue != value) 
							|| (this._Pupil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pupil.Entity = null;
						previousValue.FeeRemarks.Remove(this);
					}
					this._Pupil.Entity = value;
					if ((value != null))
					{
						value.FeeRemarks.Add(this);
						this._PupilId = value.PupilId;
					}
					else
					{
						this._PupilId = default(int);
					}
					this.SendPropertyChanged("Pupil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRemark", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeRemarks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeRemarks.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeSubjectOption")]
	public partial class FeeSubjectOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeSubjectOptionId;
		
		private int _FeeSubjectOptionHeadId;
		
		private int _SubjectOptionId;
		
		private decimal _FeeAmount;
		
		private bool _IsCompulsory;
		
		private bool _IsActive;
		
		private string _Remarks;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<FeeSubjectOptionHead> _FeeSubjectOptionHead;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<SubjectOption> _SubjectOption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeSubjectOptionIdChanging(int value);
    partial void OnFeeSubjectOptionIdChanged();
    partial void OnFeeSubjectOptionHeadIdChanging(int value);
    partial void OnFeeSubjectOptionHeadIdChanged();
    partial void OnSubjectOptionIdChanging(int value);
    partial void OnSubjectOptionIdChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeeSubjectOption()
		{
			this._FeeSubjectOptionHead = default(EntityRef<FeeSubjectOptionHead>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._SubjectOption = default(EntityRef<SubjectOption>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeSubjectOptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeSubjectOptionId
		{
			get
			{
				return this._FeeSubjectOptionId;
			}
			set
			{
				if ((this._FeeSubjectOptionId != value))
				{
					this.OnFeeSubjectOptionIdChanging(value);
					this.SendPropertyChanging();
					this._FeeSubjectOptionId = value;
					this.SendPropertyChanged("FeeSubjectOptionId");
					this.OnFeeSubjectOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeSubjectOptionHeadId", DbType="Int NOT NULL")]
		public int FeeSubjectOptionHeadId
		{
			get
			{
				return this._FeeSubjectOptionHeadId;
			}
			set
			{
				if ((this._FeeSubjectOptionHeadId != value))
				{
					if (this._FeeSubjectOptionHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeSubjectOptionHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeSubjectOptionHeadId = value;
					this.SendPropertyChanged("FeeSubjectOptionHeadId");
					this.OnFeeSubjectOptionHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectOptionId", DbType="Int NOT NULL")]
		public int SubjectOptionId
		{
			get
			{
				return this._SubjectOptionId;
			}
			set
			{
				if ((this._SubjectOptionId != value))
				{
					if (this._SubjectOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectOptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectOptionId = value;
					this.SendPropertyChanged("SubjectOptionId");
					this.OnSubjectOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(150)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeSubjectOptionHead_FeeSubjectOption", Storage="_FeeSubjectOptionHead", ThisKey="FeeSubjectOptionHeadId", OtherKey="FeeSubjectOptionHeadId", IsForeignKey=true)]
		public FeeSubjectOptionHead FeeSubjectOptionHead
		{
			get
			{
				return this._FeeSubjectOptionHead.Entity;
			}
			set
			{
				FeeSubjectOptionHead previousValue = this._FeeSubjectOptionHead.Entity;
				if (((previousValue != value) 
							|| (this._FeeSubjectOptionHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeSubjectOptionHead.Entity = null;
						previousValue.FeeSubjectOptions.Remove(this);
					}
					this._FeeSubjectOptionHead.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptions.Add(this);
						this._FeeSubjectOptionHeadId = value.FeeSubjectOptionHeadId;
					}
					else
					{
						this._FeeSubjectOptionHeadId = default(int);
					}
					this.SendPropertyChanged("FeeSubjectOptionHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOption", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeSubjectOptions.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptions.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOption1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeeSubjectOptions1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptions1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectOption_FeeSubjectOption", Storage="_SubjectOption", ThisKey="SubjectOptionId", OtherKey="SubjectOptionId", IsForeignKey=true)]
		public SubjectOption SubjectOption
		{
			get
			{
				return this._SubjectOption.Entity;
			}
			set
			{
				SubjectOption previousValue = this._SubjectOption.Entity;
				if (((previousValue != value) 
							|| (this._SubjectOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectOption.Entity = null;
						previousValue.FeeSubjectOptions.Remove(this);
					}
					this._SubjectOption.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptions.Add(this);
						this._SubjectOptionId = value.SubjectOptionId;
					}
					else
					{
						this._SubjectOptionId = default(int);
					}
					this.SendPropertyChanged("SubjectOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeSubjectOptionHead")]
	public partial class FeeSubjectOptionHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeSubjectOptionHeadId;
		
		private int _HeadId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<FeeSubjectOption> _FeeSubjectOptions;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeSubjectOptionHeadIdChanging(int value);
    partial void OnFeeSubjectOptionHeadIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public FeeSubjectOptionHead()
		{
			this._FeeSubjectOptions = new EntitySet<FeeSubjectOption>(new Action<FeeSubjectOption>(this.attach_FeeSubjectOptions), new Action<FeeSubjectOption>(this.detach_FeeSubjectOptions));
			this._Head = default(EntityRef<Head>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeSubjectOptionHeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeSubjectOptionHeadId
		{
			get
			{
				return this._FeeSubjectOptionHeadId;
			}
			set
			{
				if ((this._FeeSubjectOptionHeadId != value))
				{
					this.OnFeeSubjectOptionHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeSubjectOptionHeadId = value;
					this.SendPropertyChanged("FeeSubjectOptionHeadId");
					this.OnFeeSubjectOptionHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeSubjectOptionHead_FeeSubjectOption", Storage="_FeeSubjectOptions", ThisKey="FeeSubjectOptionHeadId", OtherKey="FeeSubjectOptionHeadId")]
		public EntitySet<FeeSubjectOption> FeeSubjectOptions
		{
			get
			{
				return this._FeeSubjectOptions;
			}
			set
			{
				this._FeeSubjectOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeSubjectOptionHead", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeeSubjectOptionHeads.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptionHeads.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOptionHead", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeSubjectOptionHeads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeSubjectOptionHeads.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.FeeSubjectOptionHead = this;
		}
		
		private void detach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.FeeSubjectOptionHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeTransport")]
	public partial class FeeTransport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeTransportId;
		
		private int _FeeTransportHeadId;
		
		private int _TransportBatchId;
		
		private int _TransportDurationId;
		
		private decimal _FeeAmount;
		
		private bool _IsCompulsory;
		
		private bool _IsActive;
		
		private string _Remarks;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<FeeTransportHead> _FeeTransportHead;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<TransportBatch> _TransportBatch;
		
		private EntityRef<TransportDuration> _TransportDuration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeTransportIdChanging(int value);
    partial void OnFeeTransportIdChanged();
    partial void OnFeeTransportHeadIdChanging(int value);
    partial void OnFeeTransportHeadIdChanged();
    partial void OnTransportBatchIdChanging(int value);
    partial void OnTransportBatchIdChanged();
    partial void OnTransportDurationIdChanging(int value);
    partial void OnTransportDurationIdChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public FeeTransport()
		{
			this._FeeTransportHead = default(EntityRef<FeeTransportHead>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._TransportBatch = default(EntityRef<TransportBatch>);
			this._TransportDuration = default(EntityRef<TransportDuration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeTransportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeTransportId
		{
			get
			{
				return this._FeeTransportId;
			}
			set
			{
				if ((this._FeeTransportId != value))
				{
					this.OnFeeTransportIdChanging(value);
					this.SendPropertyChanging();
					this._FeeTransportId = value;
					this.SendPropertyChanged("FeeTransportId");
					this.OnFeeTransportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeTransportHeadId", DbType="Int NOT NULL")]
		public int FeeTransportHeadId
		{
			get
			{
				return this._FeeTransportHeadId;
			}
			set
			{
				if ((this._FeeTransportHeadId != value))
				{
					if (this._FeeTransportHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeTransportHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeTransportHeadId = value;
					this.SendPropertyChanged("FeeTransportHeadId");
					this.OnFeeTransportHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportBatchId", DbType="Int NOT NULL")]
		public int TransportBatchId
		{
			get
			{
				return this._TransportBatchId;
			}
			set
			{
				if ((this._TransportBatchId != value))
				{
					if (this._TransportBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransportBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TransportBatchId = value;
					this.SendPropertyChanged("TransportBatchId");
					this.OnTransportBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportDurationId", DbType="Int NOT NULL")]
		public int TransportDurationId
		{
			get
			{
				return this._TransportDurationId;
			}
			set
			{
				if ((this._TransportDurationId != value))
				{
					if (this._TransportDuration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransportDurationIdChanging(value);
					this.SendPropertyChanging();
					this._TransportDurationId = value;
					this.SendPropertyChanged("TransportDurationId");
					this.OnTransportDurationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(150)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeTransportHead_FeeTransport", Storage="_FeeTransportHead", ThisKey="FeeTransportHeadId", OtherKey="FeeTransportHeadId", IsForeignKey=true)]
		public FeeTransportHead FeeTransportHead
		{
			get
			{
				return this._FeeTransportHead.Entity;
			}
			set
			{
				FeeTransportHead previousValue = this._FeeTransportHead.Entity;
				if (((previousValue != value) 
							|| (this._FeeTransportHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeTransportHead.Entity = null;
						previousValue.FeeTransports.Remove(this);
					}
					this._FeeTransportHead.Entity = value;
					if ((value != null))
					{
						value.FeeTransports.Add(this);
						this._FeeTransportHeadId = value.FeeTransportHeadId;
					}
					else
					{
						this._FeeTransportHeadId = default(int);
					}
					this.SendPropertyChanged("FeeTransportHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransport", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeTransports.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeTransports.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransport1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.FeeTransports1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.FeeTransports1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportBatch_FeeTransport", Storage="_TransportBatch", ThisKey="TransportBatchId", OtherKey="TransportBatchId", IsForeignKey=true)]
		public TransportBatch TransportBatch
		{
			get
			{
				return this._TransportBatch.Entity;
			}
			set
			{
				TransportBatch previousValue = this._TransportBatch.Entity;
				if (((previousValue != value) 
							|| (this._TransportBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportBatch.Entity = null;
						previousValue.FeeTransports.Remove(this);
					}
					this._TransportBatch.Entity = value;
					if ((value != null))
					{
						value.FeeTransports.Add(this);
						this._TransportBatchId = value.TransportBatchId;
					}
					else
					{
						this._TransportBatchId = default(int);
					}
					this.SendPropertyChanged("TransportBatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportDuration_FeeTransport", Storage="_TransportDuration", ThisKey="TransportDurationId", OtherKey="TransportDurationId", IsForeignKey=true)]
		public TransportDuration TransportDuration
		{
			get
			{
				return this._TransportDuration.Entity;
			}
			set
			{
				TransportDuration previousValue = this._TransportDuration.Entity;
				if (((previousValue != value) 
							|| (this._TransportDuration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportDuration.Entity = null;
						previousValue.FeeTransports.Remove(this);
					}
					this._TransportDuration.Entity = value;
					if ((value != null))
					{
						value.FeeTransports.Add(this);
						this._TransportDurationId = value.TransportDurationId;
					}
					else
					{
						this._TransportDurationId = default(int);
					}
					this.SendPropertyChanged("TransportDuration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeeTransportHead")]
	public partial class FeeTransportHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeeTransportHeadId;
		
		private int _HeadId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<FeeTransport> _FeeTransports;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeeTransportHeadIdChanging(int value);
    partial void OnFeeTransportHeadIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public FeeTransportHead()
		{
			this._FeeTransports = new EntitySet<FeeTransport>(new Action<FeeTransport>(this.attach_FeeTransports), new Action<FeeTransport>(this.detach_FeeTransports));
			this._Head = default(EntityRef<Head>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeTransportHeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeeTransportHeadId
		{
			get
			{
				return this._FeeTransportHeadId;
			}
			set
			{
				if ((this._FeeTransportHeadId != value))
				{
					this.OnFeeTransportHeadIdChanging(value);
					this.SendPropertyChanging();
					this._FeeTransportHeadId = value;
					this.SendPropertyChanged("FeeTransportHeadId");
					this.OnFeeTransportHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeTransportHead_FeeTransport", Storage="_FeeTransports", ThisKey="FeeTransportHeadId", OtherKey="FeeTransportHeadId")]
		public EntitySet<FeeTransport> FeeTransports
		{
			get
			{
				return this._FeeTransports;
			}
			set
			{
				this._FeeTransports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeTransportHead", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.FeeTransportHeads.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.FeeTransportHeads.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransportHead", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.FeeTransportHeads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.FeeTransportHeads.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.FeeTransportHead = this;
		}
		
		private void detach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.FeeTransportHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grade")]
	public partial class Grade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GradeId;
		
		private int _GradeNo;
		
		private string _GradeName;
		
		private EntitySet<PupilGrade> _PupilGrades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradeIdChanging(int value);
    partial void OnGradeIdChanged();
    partial void OnGradeNoChanging(int value);
    partial void OnGradeNoChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    #endregion
		
		public Grade()
		{
			this._PupilGrades = new EntitySet<PupilGrade>(new Action<PupilGrade>(this.attach_PupilGrades), new Action<PupilGrade>(this.detach_PupilGrades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeNo", DbType="Int NOT NULL")]
		public int GradeNo
		{
			get
			{
				return this._GradeNo;
			}
			set
			{
				if ((this._GradeNo != value))
				{
					this.OnGradeNoChanging(value);
					this.SendPropertyChanging();
					this._GradeNo = value;
					this.SendPropertyChanged("GradeNo");
					this.OnGradeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this.OnGradeNameChanging(value);
					this.SendPropertyChanging();
					this._GradeName = value;
					this.SendPropertyChanged("GradeName");
					this.OnGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PupilGrade", Storage="_PupilGrades", ThisKey="GradeId", OtherKey="GradeId")]
		public EntitySet<PupilGrade> PupilGrades
		{
			get
			{
				return this._PupilGrades;
			}
			set
			{
				this._PupilGrades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.Grade = this;
		}
		
		private void detach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.Grade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradeGroup")]
	public partial class GradeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GradeGroupId;
		
		private string _GradeGroupName;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradeGroupIdChanging(int value);
    partial void OnGradeGroupIdChanged();
    partial void OnGradeGroupNameChanging(string value);
    partial void OnGradeGroupNameChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public GradeGroup()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GradeGroupId
		{
			get
			{
				return this._GradeGroupId;
			}
			set
			{
				if ((this._GradeGroupId != value))
				{
					this.OnGradeGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GradeGroupId = value;
					this.SendPropertyChanged("GradeGroupId");
					this.OnGradeGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeGroupName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GradeGroupName
		{
			get
			{
				return this._GradeGroupName;
			}
			set
			{
				if ((this._GradeGroupName != value))
				{
					this.OnGradeGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GradeGroupName = value;
					this.SendPropertyChanged("GradeGroupName");
					this.OnGradeGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradeGroup", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.GradeGroups.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.GradeGroups.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradingScale")]
	public partial class GradingScale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GradingScaleId;
		
		private string _GradingScaleName;
		
		private int _UpToGradeNo;
		
		private EntitySet<SubjectGradingScale> _SubjectGradingScales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradingScaleIdChanging(int value);
    partial void OnGradingScaleIdChanged();
    partial void OnGradingScaleNameChanging(string value);
    partial void OnGradingScaleNameChanged();
    partial void OnUpToGradeNoChanging(int value);
    partial void OnUpToGradeNoChanged();
    #endregion
		
		public GradingScale()
		{
			this._SubjectGradingScales = new EntitySet<SubjectGradingScale>(new Action<SubjectGradingScale>(this.attach_SubjectGradingScales), new Action<SubjectGradingScale>(this.detach_SubjectGradingScales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradingScaleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GradingScaleId
		{
			get
			{
				return this._GradingScaleId;
			}
			set
			{
				if ((this._GradingScaleId != value))
				{
					this.OnGradingScaleIdChanging(value);
					this.SendPropertyChanging();
					this._GradingScaleId = value;
					this.SendPropertyChanged("GradingScaleId");
					this.OnGradingScaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradingScaleName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string GradingScaleName
		{
			get
			{
				return this._GradingScaleName;
			}
			set
			{
				if ((this._GradingScaleName != value))
				{
					this.OnGradingScaleNameChanging(value);
					this.SendPropertyChanging();
					this._GradingScaleName = value;
					this.SendPropertyChanged("GradingScaleName");
					this.OnGradingScaleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpToGradeNo", DbType="Int NOT NULL")]
		public int UpToGradeNo
		{
			get
			{
				return this._UpToGradeNo;
			}
			set
			{
				if ((this._UpToGradeNo != value))
				{
					this.OnUpToGradeNoChanging(value);
					this.SendPropertyChanging();
					this._UpToGradeNo = value;
					this.SendPropertyChanged("UpToGradeNo");
					this.OnUpToGradeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GradingScale_SubjectGradingScale", Storage="_SubjectGradingScales", ThisKey="GradingScaleId", OtherKey="GradingScaleId")]
		public EntitySet<SubjectGradingScale> SubjectGradingScales
		{
			get
			{
				return this._SubjectGradingScales;
			}
			set
			{
				this._SubjectGradingScales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.GradingScale = this;
		}
		
		private void detach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.GradingScale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradingSystem")]
	public partial class GradingSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GradingSystemId;
		
		private int _ClassId;
		
		private int _SessionId;
		
		private decimal _FromMarks;
		
		private decimal _ToMarks;
		
		private string _GradeName;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UdatedDate;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradingSystemIdChanging(int value);
    partial void OnGradingSystemIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnFromMarksChanging(decimal value);
    partial void OnFromMarksChanged();
    partial void OnToMarksChanging(decimal value);
    partial void OnToMarksChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUdatedDateChanged();
    #endregion
		
		public GradingSystem()
		{
			this._Class = default(EntityRef<Class>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradingSystemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GradingSystemId
		{
			get
			{
				return this._GradingSystemId;
			}
			set
			{
				if ((this._GradingSystemId != value))
				{
					this.OnGradingSystemIdChanging(value);
					this.SendPropertyChanging();
					this._GradingSystemId = value;
					this.SendPropertyChanged("GradingSystemId");
					this.OnGradingSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal FromMarks
		{
			get
			{
				return this._FromMarks;
			}
			set
			{
				if ((this._FromMarks != value))
				{
					this.OnFromMarksChanging(value);
					this.SendPropertyChanging();
					this._FromMarks = value;
					this.SendPropertyChanged("FromMarks");
					this.OnFromMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal ToMarks
		{
			get
			{
				return this._ToMarks;
			}
			set
			{
				if ((this._ToMarks != value))
				{
					this.OnToMarksChanging(value);
					this.SendPropertyChanging();
					this._ToMarks = value;
					this.SendPropertyChanged("ToMarks");
					this.OnToMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this.OnGradeNameChanging(value);
					this.SendPropertyChanging();
					this._GradeName = value;
					this.SendPropertyChanged("GradeName");
					this.OnGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UdatedDate
		{
			get
			{
				return this._UdatedDate;
			}
			set
			{
				if ((this._UdatedDate != value))
				{
					this.OnUdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UdatedDate = value;
					this.SendPropertyChanged("UdatedDate");
					this.OnUdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_GradingSystem", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.GradingSystems.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.GradingSystems.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_GradingSystem", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.GradingSystems.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.GradingSystems.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradingSystem", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.GradingSystems.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.GradingSystems.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradingSystem1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.GradingSystems1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.GradingSystems1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Head")]
	public partial class Head : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeadId;
		
		private string _HeadName;
		
		private bool _IsCompulsory;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<FeeClassHead> _FeeClassHeads;
		
		private EntitySet<FeePaymentDetail> _FeePaymentDetails;
		
		private EntitySet<FeeRegistration> _FeeRegistrations;
		
		private EntitySet<FeeRegistrationHead> _FeeRegistrationHeads;
		
		private EntitySet<FeeSubjectOptionHead> _FeeSubjectOptionHeads;
		
		private EntitySet<FeeTransportHead> _FeeTransportHeads;
		
		private EntitySet<PupilCharge> _PupilCharges;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnHeadNameChanging(string value);
    partial void OnHeadNameChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Head()
		{
			this._FeeClassHeads = new EntitySet<FeeClassHead>(new Action<FeeClassHead>(this.attach_FeeClassHeads), new Action<FeeClassHead>(this.detach_FeeClassHeads));
			this._FeePaymentDetails = new EntitySet<FeePaymentDetail>(new Action<FeePaymentDetail>(this.attach_FeePaymentDetails), new Action<FeePaymentDetail>(this.detach_FeePaymentDetails));
			this._FeeRegistrations = new EntitySet<FeeRegistration>(new Action<FeeRegistration>(this.attach_FeeRegistrations), new Action<FeeRegistration>(this.detach_FeeRegistrations));
			this._FeeRegistrationHeads = new EntitySet<FeeRegistrationHead>(new Action<FeeRegistrationHead>(this.attach_FeeRegistrationHeads), new Action<FeeRegistrationHead>(this.detach_FeeRegistrationHeads));
			this._FeeSubjectOptionHeads = new EntitySet<FeeSubjectOptionHead>(new Action<FeeSubjectOptionHead>(this.attach_FeeSubjectOptionHeads), new Action<FeeSubjectOptionHead>(this.detach_FeeSubjectOptionHeads));
			this._FeeTransportHeads = new EntitySet<FeeTransportHead>(new Action<FeeTransportHead>(this.attach_FeeTransportHeads), new Action<FeeTransportHead>(this.detach_FeeTransportHeads));
			this._PupilCharges = new EntitySet<PupilCharge>(new Action<PupilCharge>(this.attach_PupilCharges), new Action<PupilCharge>(this.detach_PupilCharges));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HeadName
		{
			get
			{
				return this._HeadName;
			}
			set
			{
				if ((this._HeadName != value))
				{
					this.OnHeadNameChanging(value);
					this.SendPropertyChanging();
					this._HeadName = value;
					this.SendPropertyChanged("HeadName");
					this.OnHeadNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeClassHead", Storage="_FeeClassHeads", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this._FeeClassHeads;
			}
			set
			{
				this._FeeClassHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeePaymentDetail", Storage="_FeePaymentDetails", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeePaymentDetail> FeePaymentDetails
		{
			get
			{
				return this._FeePaymentDetails;
			}
			set
			{
				this._FeePaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeRegistration", Storage="_FeeRegistrations", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeeRegistration> FeeRegistrations
		{
			get
			{
				return this._FeeRegistrations;
			}
			set
			{
				this._FeeRegistrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeRegistrationHead", Storage="_FeeRegistrationHeads", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeeRegistrationHead> FeeRegistrationHeads
		{
			get
			{
				return this._FeeRegistrationHeads;
			}
			set
			{
				this._FeeRegistrationHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeSubjectOptionHead", Storage="_FeeSubjectOptionHeads", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeeSubjectOptionHead> FeeSubjectOptionHeads
		{
			get
			{
				return this._FeeSubjectOptionHeads;
			}
			set
			{
				this._FeeSubjectOptionHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_FeeTransportHead", Storage="_FeeTransportHeads", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<FeeTransportHead> FeeTransportHeads
		{
			get
			{
				return this._FeeTransportHeads;
			}
			set
			{
				this._FeeTransportHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_PupilCharge", Storage="_PupilCharges", ThisKey="HeadId", OtherKey="HeadId")]
		public EntitySet<PupilCharge> PupilCharges
		{
			get
			{
				return this._PupilCharges;
			}
			set
			{
				this._PupilCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Head", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Heads.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Heads.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_FeeRegistrationHeads(FeeRegistrationHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeeRegistrationHeads(FeeRegistrationHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_FeeSubjectOptionHeads(FeeSubjectOptionHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeeSubjectOptionHeads(FeeSubjectOptionHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_FeeTransportHeads(FeeTransportHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_FeeTransportHeads(FeeTransportHead entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
		
		private void attach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.Head = this;
		}
		
		private void detach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.Head = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageId;
		
		private string _LanguageName;
		
		private byte _Status;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PurchaseMagazine> _PurchaseMagazines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Language()
		{
			this._PurchaseMagazines = new EntitySet<PurchaseMagazine>(new Action<PurchaseMagazine>(this.attach_PurchaseMagazines), new Action<PurchaseMagazine>(this.detach_PurchaseMagazines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PurchaseMagazine", Storage="_PurchaseMagazines", ThisKey="LanguageId", OtherKey="LanguageId")]
		public EntitySet<PurchaseMagazine> PurchaseMagazines
		{
			get
			{
				return this._PurchaseMagazines;
			}
			set
			{
				this._PurchaseMagazines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginLog")]
	public partial class LoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginLogId;
		
		private string _UserName;
		
		private string _LoginPassword;
		
		private string _ClientBrowser;
		
		private string _LoginDevice;
		
		private string _IPAddress;
		
		private string _ReferrerUrl;
		
		private byte _LoginResult;
		
		private System.DateTime _LoginTime;
		
		private System.DateTime _LastUpdatedOn;
		
		private System.Nullable<byte> _UserType;
		
		private string _GoogleLocation;
		
		private string _IMEINo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginLogIdChanging(int value);
    partial void OnLoginLogIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnClientBrowserChanging(string value);
    partial void OnClientBrowserChanged();
    partial void OnLoginDeviceChanging(string value);
    partial void OnLoginDeviceChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnReferrerUrlChanging(string value);
    partial void OnReferrerUrlChanged();
    partial void OnLoginResultChanging(byte value);
    partial void OnLoginResultChanged();
    partial void OnLoginTimeChanging(System.DateTime value);
    partial void OnLoginTimeChanged();
    partial void OnLastUpdatedOnChanging(System.DateTime value);
    partial void OnLastUpdatedOnChanged();
    partial void OnUserTypeChanging(System.Nullable<byte> value);
    partial void OnUserTypeChanged();
    partial void OnGoogleLocationChanging(string value);
    partial void OnGoogleLocationChanged();
    partial void OnIMEINoChanging(string value);
    partial void OnIMEINoChanged();
    #endregion
		
		public LoginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginLogId
		{
			get
			{
				return this._LoginLogId;
			}
			set
			{
				if ((this._LoginLogId != value))
				{
					this.OnLoginLogIdChanging(value);
					this.SendPropertyChanging();
					this._LoginLogId = value;
					this.SendPropertyChanged("LoginLogId");
					this.OnLoginLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientBrowser", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientBrowser
		{
			get
			{
				return this._ClientBrowser;
			}
			set
			{
				if ((this._ClientBrowser != value))
				{
					this.OnClientBrowserChanging(value);
					this.SendPropertyChanging();
					this._ClientBrowser = value;
					this.SendPropertyChanged("ClientBrowser");
					this.OnClientBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDevice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginDevice
		{
			get
			{
				return this._LoginDevice;
			}
			set
			{
				if ((this._LoginDevice != value))
				{
					this.OnLoginDeviceChanging(value);
					this.SendPropertyChanging();
					this._LoginDevice = value;
					this.SendPropertyChanged("LoginDevice");
					this.OnLoginDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReferrerUrl
		{
			get
			{
				return this._ReferrerUrl;
			}
			set
			{
				if ((this._ReferrerUrl != value))
				{
					this.OnReferrerUrlChanging(value);
					this.SendPropertyChanging();
					this._ReferrerUrl = value;
					this.SendPropertyChanged("ReferrerUrl");
					this.OnReferrerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginResult", DbType="TinyInt NOT NULL")]
		public byte LoginResult
		{
			get
			{
				return this._LoginResult;
			}
			set
			{
				if ((this._LoginResult != value))
				{
					this.OnLoginResultChanging(value);
					this.SendPropertyChanging();
					this._LoginResult = value;
					this.SendPropertyChanged("LoginResult");
					this.OnLoginResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedOn
		{
			get
			{
				return this._LastUpdatedOn;
			}
			set
			{
				if ((this._LastUpdatedOn != value))
				{
					this.OnLastUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedOn = value;
					this.SendPropertyChanged("LastUpdatedOn");
					this.OnLastUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt")]
		public System.Nullable<byte> UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleLocation", DbType="NVarChar(250)")]
		public string GoogleLocation
		{
			get
			{
				return this._GoogleLocation;
			}
			set
			{
				if ((this._GoogleLocation != value))
				{
					this.OnGoogleLocationChanging(value);
					this.SendPropertyChanging();
					this._GoogleLocation = value;
					this.SendPropertyChanged("GoogleLocation");
					this.OnGoogleLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMEINo", DbType="NVarChar(150)")]
		public string IMEINo
		{
			get
			{
				return this._IMEINo;
			}
			set
			{
				if ((this._IMEINo != value))
				{
					this.OnIMEINoChanging(value);
					this.SendPropertyChanging();
					this._IMEINo = value;
					this.SendPropertyChanged("IMEINo");
					this.OnIMEINoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Magazine")]
	public partial class Magazine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MagazineId;
		
		private string _MagazineName;
		
		private byte _Status;
		
		private decimal _Rate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PurchaseMagazine> _PurchaseMagazines;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagazineIdChanging(int value);
    partial void OnMagazineIdChanged();
    partial void OnMagazineNameChanging(string value);
    partial void OnMagazineNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Magazine()
		{
			this._PurchaseMagazines = new EntitySet<PurchaseMagazine>(new Action<PurchaseMagazine>(this.attach_PurchaseMagazines), new Action<PurchaseMagazine>(this.detach_PurchaseMagazines));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					this.OnMagazineIdChanging(value);
					this.SendPropertyChanging();
					this._MagazineId = value;
					this.SendPropertyChanged("MagazineId");
					this.OnMagazineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MagazineName
		{
			get
			{
				return this._MagazineName;
			}
			set
			{
				if ((this._MagazineName != value))
				{
					this.OnMagazineNameChanging(value);
					this.SendPropertyChanging();
					this._MagazineName = value;
					this.SendPropertyChanged("MagazineName");
					this.OnMagazineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_PurchaseMagazine", Storage="_PurchaseMagazines", ThisKey="MagazineId", OtherKey="MagazineId")]
		public EntitySet<PurchaseMagazine> PurchaseMagazines
		{
			get
			{
				return this._PurchaseMagazines;
			}
			set
			{
				this._PurchaseMagazines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Magazine", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Magazines.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Magazines.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = this;
		}
		
		private void detach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private string _MenuTitle;
		
		private System.Nullable<int> _PageId;
		
		private int _MenuNo;
		
		private System.Nullable<int> _ParentMenuId;
		
		private string _MenuIcon;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntityRef<Menu> _Menu1;
		
		private EntityRef<Page> _Page;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnMenuTitleChanging(string value);
    partial void OnMenuTitleChanged();
    partial void OnPageIdChanging(System.Nullable<int> value);
    partial void OnPageIdChanged();
    partial void OnMenuNoChanging(int value);
    partial void OnMenuNoChanged();
    partial void OnParentMenuIdChanging(System.Nullable<int> value);
    partial void OnParentMenuIdChanged();
    partial void OnMenuIconChanging(string value);
    partial void OnMenuIconChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Menu()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Menu1 = default(EntityRef<Menu>);
			this._Page = default(EntityRef<Page>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MenuTitle
		{
			get
			{
				return this._MenuTitle;
			}
			set
			{
				if ((this._MenuTitle != value))
				{
					this.OnMenuTitleChanging(value);
					this.SendPropertyChanging();
					this._MenuTitle = value;
					this.SendPropertyChanged("MenuTitle");
					this.OnMenuTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int")]
		public System.Nullable<int> PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuNo", DbType="Int NOT NULL")]
		public int MenuNo
		{
			get
			{
				return this._MenuNo;
			}
			set
			{
				if ((this._MenuNo != value))
				{
					this.OnMenuNoChanging(value);
					this.SendPropertyChanging();
					this._MenuNo = value;
					this.SendPropertyChanged("MenuNo");
					this.OnMenuNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuId", DbType="Int")]
		public System.Nullable<int> ParentMenuId
		{
			get
			{
				return this._ParentMenuId;
			}
			set
			{
				if ((this._ParentMenuId != value))
				{
					if (this._Menu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuId = value;
					this.SendPropertyChanged("ParentMenuId");
					this.OnParentMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuIcon", DbType="NVarChar(255)")]
		public string MenuIcon
		{
			get
			{
				return this._MenuIcon;
			}
			set
			{
				if ((this._MenuIcon != value))
				{
					this.OnMenuIconChanging(value);
					this.SendPropertyChanging();
					this._MenuIcon = value;
					this.SendPropertyChanged("MenuIcon");
					this.OnMenuIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="MenuId", OtherKey="ParentMenuId")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_RoleMenus", ThisKey="MenuId", OtherKey="MenuId")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="ParentMenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Menu Menu1
		{
			get
			{
				return this._Menu1.Entity;
			}
			set
			{
				Menu previousValue = this._Menu1.Entity;
				if (((previousValue != value) 
							|| (this._Menu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu1.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Menu1.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._ParentMenuId = value.MenuId;
					}
					else
					{
						this._ParentMenuId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Menu", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Menu", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Month")]
	public partial class Month : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MonthId;
		
		private string _MonthName;
		
		private string _ShortName;
		
		private int _Position;
		
		private EntitySet<FeePaymentMonth> _FeePaymentMonths;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthIdChanging(int value);
    partial void OnMonthIdChanged();
    partial void OnMonthNameChanging(string value);
    partial void OnMonthNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public Month()
		{
			this._FeePaymentMonths = new EntitySet<FeePaymentMonth>(new Action<FeePaymentMonth>(this.attach_FeePaymentMonths), new Action<FeePaymentMonth>(this.detach_FeePaymentMonths));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this.OnMonthNameChanging(value);
					this.SendPropertyChanging();
					this._MonthName = value;
					this.SendPropertyChanged("MonthName");
					this.OnMonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_FeePaymentMonth", Storage="_FeePaymentMonths", ThisKey="MonthId", OtherKey="MonthId")]
		public EntitySet<FeePaymentMonth> FeePaymentMonths
		{
			get
			{
				return this._FeePaymentMonths;
			}
			set
			{
				this._FeePaymentMonths.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.Month = this;
		}
		
		private void detach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.Month = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsPaper")]
	public partial class NewsPaper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsPaperId;
		
		private string _NewsPaperName;
		
		private byte _Status;
		
		private decimal _Rate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PurchaseNewsPaper> _PurchaseNewsPapers;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsPaperIdChanging(int value);
    partial void OnNewsPaperIdChanged();
    partial void OnNewsPaperNameChanging(string value);
    partial void OnNewsPaperNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public NewsPaper()
		{
			this._PurchaseNewsPapers = new EntitySet<PurchaseNewsPaper>(new Action<PurchaseNewsPaper>(this.attach_PurchaseNewsPapers), new Action<PurchaseNewsPaper>(this.detach_PurchaseNewsPapers));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsPaperId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsPaperId
		{
			get
			{
				return this._NewsPaperId;
			}
			set
			{
				if ((this._NewsPaperId != value))
				{
					this.OnNewsPaperIdChanging(value);
					this.SendPropertyChanging();
					this._NewsPaperId = value;
					this.SendPropertyChanged("NewsPaperId");
					this.OnNewsPaperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsPaperName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NewsPaperName
		{
			get
			{
				return this._NewsPaperName;
			}
			set
			{
				if ((this._NewsPaperName != value))
				{
					this.OnNewsPaperNameChanging(value);
					this.SendPropertyChanging();
					this._NewsPaperName = value;
					this.SendPropertyChanged("NewsPaperName");
					this.OnNewsPaperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsPaper_PurchaseNewsPaper", Storage="_PurchaseNewsPapers", ThisKey="NewsPaperId", OtherKey="NewsPaperId")]
		public EntitySet<PurchaseNewsPaper> PurchaseNewsPapers
		{
			get
			{
				return this._PurchaseNewsPapers;
			}
			set
			{
				this._PurchaseNewsPapers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_NewsPaper", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.NewsPapers.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.NewsPapers.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseNewsPapers(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.NewsPaper = this;
		}
		
		private void detach_PurchaseNewsPapers(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.NewsPaper = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private int _PageGroupId;
		
		private string _PageName;
		
		private string _PageUrl;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Menu> _Menus;
		
		private EntityRef<PageGroup> _PageGroup;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnPageGroupIdChanging(int value);
    partial void OnPageGroupIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnPageUrlChanging(string value);
    partial void OnPageUrlChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Page()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._PageGroup = default(EntityRef<PageGroup>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupId", DbType="Int NOT NULL")]
		public int PageGroupId
		{
			get
			{
				return this._PageGroupId;
			}
			set
			{
				if ((this._PageGroupId != value))
				{
					if (this._PageGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PageGroupId = value;
					this.SendPropertyChanged("PageGroupId");
					this.OnPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageUrl
		{
			get
			{
				return this._PageUrl;
			}
			set
			{
				if ((this._PageUrl != value))
				{
					this.OnPageUrlChanging(value);
					this.SendPropertyChanging();
					this._PageUrl = value;
					this.SendPropertyChanged("PageUrl");
					this.OnPageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Menu", Storage="_Menus", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageGroup_Page", Storage="_PageGroup", ThisKey="PageGroupId", OtherKey="PageGroupId", IsForeignKey=true)]
		public PageGroup PageGroup
		{
			get
			{
				return this._PageGroup.Entity;
			}
			set
			{
				PageGroup previousValue = this._PageGroup.Entity;
				if (((previousValue != value) 
							|| (this._PageGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageGroup.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._PageGroup.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._PageGroupId = value.PageGroupId;
					}
					else
					{
						this._PageGroupId = default(int);
					}
					this.SendPropertyChanged("PageGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Page", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageGroup")]
	public partial class PageGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageGroupId;
		
		private string _PageGroupName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageGroupIdChanging(int value);
    partial void OnPageGroupIdChanged();
    partial void OnPageGroupNameChanging(string value);
    partial void OnPageGroupNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PageGroup()
		{
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageGroupId
		{
			get
			{
				return this._PageGroupId;
			}
			set
			{
				if ((this._PageGroupId != value))
				{
					this.OnPageGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PageGroupId = value;
					this.SendPropertyChanged("PageGroupId");
					this.OnPageGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroupName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageGroupName
		{
			get
			{
				return this._PageGroupName;
			}
			set
			{
				if ((this._PageGroupName != value))
				{
					this.OnPageGroupNameChanging(value);
					this.SendPropertyChanging();
					this._PageGroupName = value;
					this.SendPropertyChanged("PageGroupName");
					this.OnPageGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageGroup_Page", Storage="_Pages", ThisKey="PageGroupId", OtherKey="PageGroupId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PageGroup", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PageGroups.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PageGroups.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.PageGroup = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.PageGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pupil")]
	public partial class Pupil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilId;
		
		private int _PupilTypeId;
		
		private string _AdmissionNo;
		
		private string _PupilName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private byte _Gender;
		
		private string _FatherName;
		
		private string _FatherOccupation;
		
		private string _MotherName;
		
		private string _MotherOccupation;
		
		private System.Nullable<decimal> _FamilyAnnualIncome;
		
		private string _GuardianMobileNo;
		
		private string _CorrespondenceAddress;
		
		private System.Nullable<int> _CorrespondenceCityId;
		
		private string _CorrespondencePinCode;
		
		private string _PermanentAddress;
		
		private System.Nullable<int> _PermanentCityId;
		
		private string _PermanentPinCode;
		
		private System.Nullable<byte> _Category;
		
		private System.Nullable<byte> _BloodGroup;
		
		private System.Nullable<byte> _Religion;
		
		private System.Nullable<byte> _Nationality;
		
		private string _MobileNo;
		
		private string _AlternateNo;
		
		private string _Email;
		
		private string _AadhaarNo;
		
		private string _PreviousSchoolName;
		
		private string _PreviousSchoolBoard;
		
		private string _PreviousSchoolClass;
		
		private string _PreviousSchoolMedium;
		
		private string _PreviousSchoolTCNo;
		
		private System.Nullable<System.DateTime> _PreviousSchoolTCDate;
		
		private string _Remarks;
		
		private string _StudentPhoto;
		
		private string _LoginPassword;
		
		private byte _PupilStatus;
		
		private System.DateTime _JoinDate;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<FeeRemark> _FeeRemarks;
		
		private EntitySet<PupilAdmission> _PupilAdmissions;
		
		private EntitySet<PupilCharge> _PupilCharges;
		
		private EntitySet<TransportPupil> _TransportPupils;
		
		private EntityRef<PupilType> _PupilType;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilIdChanging(int value);
    partial void OnPupilIdChanged();
    partial void OnPupilTypeIdChanging(int value);
    partial void OnPupilTypeIdChanged();
    partial void OnAdmissionNoChanging(string value);
    partial void OnAdmissionNoChanged();
    partial void OnPupilNameChanging(string value);
    partial void OnPupilNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnFatherOccupationChanging(string value);
    partial void OnFatherOccupationChanged();
    partial void OnMotherNameChanging(string value);
    partial void OnMotherNameChanged();
    partial void OnMotherOccupationChanging(string value);
    partial void OnMotherOccupationChanged();
    partial void OnFamilyAnnualIncomeChanging(System.Nullable<decimal> value);
    partial void OnFamilyAnnualIncomeChanged();
    partial void OnGuardianMobileNoChanging(string value);
    partial void OnGuardianMobileNoChanged();
    partial void OnCorrespondenceAddressChanging(string value);
    partial void OnCorrespondenceAddressChanged();
    partial void OnCorrespondenceCityIdChanging(System.Nullable<int> value);
    partial void OnCorrespondenceCityIdChanged();
    partial void OnCorrespondencePinCodeChanging(string value);
    partial void OnCorrespondencePinCodeChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnPermanentCityIdChanging(System.Nullable<int> value);
    partial void OnPermanentCityIdChanged();
    partial void OnPermanentPinCodeChanging(string value);
    partial void OnPermanentPinCodeChanged();
    partial void OnCategoryChanging(System.Nullable<byte> value);
    partial void OnCategoryChanged();
    partial void OnBloodGroupChanging(System.Nullable<byte> value);
    partial void OnBloodGroupChanged();
    partial void OnReligionChanging(System.Nullable<byte> value);
    partial void OnReligionChanged();
    partial void OnNationalityChanging(System.Nullable<byte> value);
    partial void OnNationalityChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAlternateNoChanging(string value);
    partial void OnAlternateNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAadhaarNoChanging(string value);
    partial void OnAadhaarNoChanged();
    partial void OnPreviousSchoolNameChanging(string value);
    partial void OnPreviousSchoolNameChanged();
    partial void OnPreviousSchoolBoardChanging(string value);
    partial void OnPreviousSchoolBoardChanged();
    partial void OnPreviousSchoolClassChanging(string value);
    partial void OnPreviousSchoolClassChanged();
    partial void OnPreviousSchoolMediumChanging(string value);
    partial void OnPreviousSchoolMediumChanged();
    partial void OnPreviousSchoolTCNoChanging(string value);
    partial void OnPreviousSchoolTCNoChanged();
    partial void OnPreviousSchoolTCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPreviousSchoolTCDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnStudentPhotoChanging(string value);
    partial void OnStudentPhotoChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnPupilStatusChanging(byte value);
    partial void OnPupilStatusChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Pupil()
		{
			this._FeeRemarks = new EntitySet<FeeRemark>(new Action<FeeRemark>(this.attach_FeeRemarks), new Action<FeeRemark>(this.detach_FeeRemarks));
			this._PupilAdmissions = new EntitySet<PupilAdmission>(new Action<PupilAdmission>(this.attach_PupilAdmissions), new Action<PupilAdmission>(this.detach_PupilAdmissions));
			this._PupilCharges = new EntitySet<PupilCharge>(new Action<PupilCharge>(this.attach_PupilCharges), new Action<PupilCharge>(this.detach_PupilCharges));
			this._TransportPupils = new EntitySet<TransportPupil>(new Action<TransportPupil>(this.attach_TransportPupils), new Action<TransportPupil>(this.detach_TransportPupils));
			this._PupilType = default(EntityRef<PupilType>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilId
		{
			get
			{
				return this._PupilId;
			}
			set
			{
				if ((this._PupilId != value))
				{
					this.OnPupilIdChanging(value);
					this.SendPropertyChanging();
					this._PupilId = value;
					this.SendPropertyChanged("PupilId");
					this.OnPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilTypeId", DbType="Int NOT NULL")]
		public int PupilTypeId
		{
			get
			{
				return this._PupilTypeId;
			}
			set
			{
				if ((this._PupilTypeId != value))
				{
					if (this._PupilType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilTypeId = value;
					this.SendPropertyChanged("PupilTypeId");
					this.OnPupilTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdmissionNo
		{
			get
			{
				return this._AdmissionNo;
			}
			set
			{
				if ((this._AdmissionNo != value))
				{
					this.OnAdmissionNoChanging(value);
					this.SendPropertyChanging();
					this._AdmissionNo = value;
					this.SendPropertyChanged("AdmissionNo");
					this.OnAdmissionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PupilName
		{
			get
			{
				return this._PupilName;
			}
			set
			{
				if ((this._PupilName != value))
				{
					this.OnPupilNameChanging(value);
					this.SendPropertyChanging();
					this._PupilName = value;
					this.SendPropertyChanged("PupilName");
					this.OnPupilNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(150)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherOccupation", DbType="NVarChar(50)")]
		public string FatherOccupation
		{
			get
			{
				return this._FatherOccupation;
			}
			set
			{
				if ((this._FatherOccupation != value))
				{
					this.OnFatherOccupationChanging(value);
					this.SendPropertyChanging();
					this._FatherOccupation = value;
					this.SendPropertyChanged("FatherOccupation");
					this.OnFatherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherName", DbType="NVarChar(150)")]
		public string MotherName
		{
			get
			{
				return this._MotherName;
			}
			set
			{
				if ((this._MotherName != value))
				{
					this.OnMotherNameChanging(value);
					this.SendPropertyChanging();
					this._MotherName = value;
					this.SendPropertyChanged("MotherName");
					this.OnMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherOccupation", DbType="NVarChar(50)")]
		public string MotherOccupation
		{
			get
			{
				return this._MotherOccupation;
			}
			set
			{
				if ((this._MotherOccupation != value))
				{
					this.OnMotherOccupationChanging(value);
					this.SendPropertyChanging();
					this._MotherOccupation = value;
					this.SendPropertyChanged("MotherOccupation");
					this.OnMotherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyAnnualIncome", DbType="Money")]
		public System.Nullable<decimal> FamilyAnnualIncome
		{
			get
			{
				return this._FamilyAnnualIncome;
			}
			set
			{
				if ((this._FamilyAnnualIncome != value))
				{
					this.OnFamilyAnnualIncomeChanging(value);
					this.SendPropertyChanging();
					this._FamilyAnnualIncome = value;
					this.SendPropertyChanged("FamilyAnnualIncome");
					this.OnFamilyAnnualIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianMobileNo", DbType="NVarChar(50)")]
		public string GuardianMobileNo
		{
			get
			{
				return this._GuardianMobileNo;
			}
			set
			{
				if ((this._GuardianMobileNo != value))
				{
					this.OnGuardianMobileNoChanging(value);
					this.SendPropertyChanging();
					this._GuardianMobileNo = value;
					this.SendPropertyChanged("GuardianMobileNo");
					this.OnGuardianMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(550)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this.OnCorrespondenceAddressChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddress = value;
					this.SendPropertyChanged("CorrespondenceAddress");
					this.OnCorrespondenceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceCityId", DbType="Int")]
		public System.Nullable<int> CorrespondenceCityId
		{
			get
			{
				return this._CorrespondenceCityId;
			}
			set
			{
				if ((this._CorrespondenceCityId != value))
				{
					this.OnCorrespondenceCityIdChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceCityId = value;
					this.SendPropertyChanged("CorrespondenceCityId");
					this.OnCorrespondenceCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondencePinCode", DbType="NVarChar(6)")]
		public string CorrespondencePinCode
		{
			get
			{
				return this._CorrespondencePinCode;
			}
			set
			{
				if ((this._CorrespondencePinCode != value))
				{
					this.OnCorrespondencePinCodeChanging(value);
					this.SendPropertyChanging();
					this._CorrespondencePinCode = value;
					this.SendPropertyChanged("CorrespondencePinCode");
					this.OnCorrespondencePinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(550)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityId", DbType="Int")]
		public System.Nullable<int> PermanentCityId
		{
			get
			{
				return this._PermanentCityId;
			}
			set
			{
				if ((this._PermanentCityId != value))
				{
					this.OnPermanentCityIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentCityId = value;
					this.SendPropertyChanged("PermanentCityId");
					this.OnPermanentCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentPinCode", DbType="NVarChar(6)")]
		public string PermanentPinCode
		{
			get
			{
				return this._PermanentPinCode;
			}
			set
			{
				if ((this._PermanentPinCode != value))
				{
					this.OnPermanentPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PermanentPinCode = value;
					this.SendPropertyChanged("PermanentPinCode");
					this.OnPermanentPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="TinyInt")]
		public System.Nullable<byte> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="TinyInt")]
		public System.Nullable<byte> BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this.OnBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._BloodGroup = value;
					this.SendPropertyChanged("BloodGroup");
					this.OnBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="TinyInt")]
		public System.Nullable<byte> Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="TinyInt")]
		public System.Nullable<byte> Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateNo", DbType="NVarChar(50)")]
		public string AlternateNo
		{
			get
			{
				return this._AlternateNo;
			}
			set
			{
				if ((this._AlternateNo != value))
				{
					this.OnAlternateNoChanging(value);
					this.SendPropertyChanging();
					this._AlternateNo = value;
					this.SendPropertyChanged("AlternateNo");
					this.OnAlternateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AadhaarNo", DbType="NVarChar(50)")]
		public string AadhaarNo
		{
			get
			{
				return this._AadhaarNo;
			}
			set
			{
				if ((this._AadhaarNo != value))
				{
					this.OnAadhaarNoChanging(value);
					this.SendPropertyChanging();
					this._AadhaarNo = value;
					this.SendPropertyChanged("AadhaarNo");
					this.OnAadhaarNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolName", DbType="NVarChar(150)")]
		public string PreviousSchoolName
		{
			get
			{
				return this._PreviousSchoolName;
			}
			set
			{
				if ((this._PreviousSchoolName != value))
				{
					this.OnPreviousSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolName = value;
					this.SendPropertyChanged("PreviousSchoolName");
					this.OnPreviousSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolBoard", DbType="NVarChar(150)")]
		public string PreviousSchoolBoard
		{
			get
			{
				return this._PreviousSchoolBoard;
			}
			set
			{
				if ((this._PreviousSchoolBoard != value))
				{
					this.OnPreviousSchoolBoardChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolBoard = value;
					this.SendPropertyChanged("PreviousSchoolBoard");
					this.OnPreviousSchoolBoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolClass", DbType="NVarChar(50)")]
		public string PreviousSchoolClass
		{
			get
			{
				return this._PreviousSchoolClass;
			}
			set
			{
				if ((this._PreviousSchoolClass != value))
				{
					this.OnPreviousSchoolClassChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolClass = value;
					this.SendPropertyChanged("PreviousSchoolClass");
					this.OnPreviousSchoolClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolMedium", DbType="NVarChar(50)")]
		public string PreviousSchoolMedium
		{
			get
			{
				return this._PreviousSchoolMedium;
			}
			set
			{
				if ((this._PreviousSchoolMedium != value))
				{
					this.OnPreviousSchoolMediumChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolMedium = value;
					this.SendPropertyChanged("PreviousSchoolMedium");
					this.OnPreviousSchoolMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolTCNo", DbType="NVarChar(50)")]
		public string PreviousSchoolTCNo
		{
			get
			{
				return this._PreviousSchoolTCNo;
			}
			set
			{
				if ((this._PreviousSchoolTCNo != value))
				{
					this.OnPreviousSchoolTCNoChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolTCNo = value;
					this.SendPropertyChanged("PreviousSchoolTCNo");
					this.OnPreviousSchoolTCNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolTCDate", DbType="Date")]
		public System.Nullable<System.DateTime> PreviousSchoolTCDate
		{
			get
			{
				return this._PreviousSchoolTCDate;
			}
			set
			{
				if ((this._PreviousSchoolTCDate != value))
				{
					this.OnPreviousSchoolTCDateChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolTCDate = value;
					this.SendPropertyChanged("PreviousSchoolTCDate");
					this.OnPreviousSchoolTCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhoto", DbType="NVarChar(150)")]
		public string StudentPhoto
		{
			get
			{
				return this._StudentPhoto;
			}
			set
			{
				if ((this._StudentPhoto != value))
				{
					this.OnStudentPhotoChanging(value);
					this.SendPropertyChanging();
					this._StudentPhoto = value;
					this.SendPropertyChanged("StudentPhoto");
					this.OnStudentPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(150)")]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilStatus", DbType="TinyInt NOT NULL")]
		public byte PupilStatus
		{
			get
			{
				return this._PupilStatus;
			}
			set
			{
				if ((this._PupilStatus != value))
				{
					this.OnPupilStatusChanging(value);
					this.SendPropertyChanging();
					this._PupilStatus = value;
					this.SendPropertyChanged("PupilStatus");
					this.OnPupilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="Date NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_FeeRemark", Storage="_FeeRemarks", ThisKey="PupilId", OtherKey="PupilId")]
		public EntitySet<FeeRemark> FeeRemarks
		{
			get
			{
				return this._FeeRemarks;
			}
			set
			{
				this._FeeRemarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_PupilAdmission", Storage="_PupilAdmissions", ThisKey="PupilId", OtherKey="PupilId")]
		public EntitySet<PupilAdmission> PupilAdmissions
		{
			get
			{
				return this._PupilAdmissions;
			}
			set
			{
				this._PupilAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_PupilCharge", Storage="_PupilCharges", ThisKey="PupilId", OtherKey="PupilId")]
		public EntitySet<PupilCharge> PupilCharges
		{
			get
			{
				return this._PupilCharges;
			}
			set
			{
				this._PupilCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_TransportPupil", Storage="_TransportPupils", ThisKey="PupilId", OtherKey="PupilId")]
		public EntitySet<TransportPupil> TransportPupils
		{
			get
			{
				return this._TransportPupils;
			}
			set
			{
				this._TransportPupils.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_Pupil", Storage="_PupilType", ThisKey="PupilTypeId", OtherKey="PupilTypeId", IsForeignKey=true)]
		public PupilType PupilType
		{
			get
			{
				return this._PupilType.Entity;
			}
			set
			{
				PupilType previousValue = this._PupilType.Entity;
				if (((previousValue != value) 
							|| (this._PupilType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilType.Entity = null;
						previousValue.Pupils.Remove(this);
					}
					this._PupilType.Entity = value;
					if ((value != null))
					{
						value.Pupils.Add(this);
						this._PupilTypeId = value.PupilTypeId;
					}
					else
					{
						this._PupilTypeId = default(int);
					}
					this.SendPropertyChanged("PupilType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Pupil", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Pupils.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Pupils.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Pupil1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Pupils1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Pupils1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = this;
		}
		
		private void detach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = null;
		}
		
		private void attach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = this;
		}
		
		private void detach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = null;
		}
		
		private void attach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = this;
		}
		
		private void detach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = null;
		}
		
		private void attach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = this;
		}
		
		private void detach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.Pupil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilAdmission")]
	public partial class PupilAdmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilAdmissionId;
		
		private int _PupilId;
		
		private int _AdmissionType;
		
		private int _SessionId;
		
		private int _SectionId;
		
		private System.Nullable<int> _RollNo;
		
		private System.DateTime _AdmissionDate;
		
		private System.Nullable<System.DateTime> _LeaveDate;
		
		private string _Height;
		
		private string _Weight;
		
		private byte _PupilAdmissionStatus;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<FeePayment> _FeePayments;
		
		private EntitySet<FeePaymentMonth> _FeePaymentMonths;
		
		private EntitySet<PupilAttendance> _PupilAttendances;
		
		private EntitySet<PupilGrade> _PupilGrades;
		
		private EntitySet<PupilSubject> _PupilSubjects;
		
		private EntitySet<PupilWaiveOff> _PupilWaiveOffs;
		
		private EntityRef<Pupil> _Pupil;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnPupilIdChanging(int value);
    partial void OnPupilIdChanged();
    partial void OnAdmissionTypeChanging(int value);
    partial void OnAdmissionTypeChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnRollNoChanging(System.Nullable<int> value);
    partial void OnRollNoChanged();
    partial void OnAdmissionDateChanging(System.DateTime value);
    partial void OnAdmissionDateChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnPupilAdmissionStatusChanging(byte value);
    partial void OnPupilAdmissionStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PupilAdmission()
		{
			this._FeePayments = new EntitySet<FeePayment>(new Action<FeePayment>(this.attach_FeePayments), new Action<FeePayment>(this.detach_FeePayments));
			this._FeePaymentMonths = new EntitySet<FeePaymentMonth>(new Action<FeePaymentMonth>(this.attach_FeePaymentMonths), new Action<FeePaymentMonth>(this.detach_FeePaymentMonths));
			this._PupilAttendances = new EntitySet<PupilAttendance>(new Action<PupilAttendance>(this.attach_PupilAttendances), new Action<PupilAttendance>(this.detach_PupilAttendances));
			this._PupilGrades = new EntitySet<PupilGrade>(new Action<PupilGrade>(this.attach_PupilGrades), new Action<PupilGrade>(this.detach_PupilGrades));
			this._PupilSubjects = new EntitySet<PupilSubject>(new Action<PupilSubject>(this.attach_PupilSubjects), new Action<PupilSubject>(this.detach_PupilSubjects));
			this._PupilWaiveOffs = new EntitySet<PupilWaiveOff>(new Action<PupilWaiveOff>(this.attach_PupilWaiveOffs), new Action<PupilWaiveOff>(this.detach_PupilWaiveOffs));
			this._Pupil = default(EntityRef<Pupil>);
			this._Section = default(EntityRef<Section>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilId", DbType="Int NOT NULL")]
		public int PupilId
		{
			get
			{
				return this._PupilId;
			}
			set
			{
				if ((this._PupilId != value))
				{
					if (this._Pupil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilIdChanging(value);
					this.SendPropertyChanging();
					this._PupilId = value;
					this.SendPropertyChanged("PupilId");
					this.OnPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="Int NOT NULL")]
		public int AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNo", DbType="Int")]
		public System.Nullable<int> RollNo
		{
			get
			{
				return this._RollNo;
			}
			set
			{
				if ((this._RollNo != value))
				{
					this.OnRollNoChanging(value);
					this.SendPropertyChanging();
					this._RollNo = value;
					this.SendPropertyChanged("RollNo");
					this.OnRollNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionDate", DbType="Date NOT NULL")]
		public System.DateTime AdmissionDate
		{
			get
			{
				return this._AdmissionDate;
			}
			set
			{
				if ((this._AdmissionDate != value))
				{
					this.OnAdmissionDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionDate = value;
					this.SendPropertyChanged("AdmissionDate");
					this.OnAdmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="Date")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NVarChar(50)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionStatus", DbType="TinyInt NOT NULL")]
		public byte PupilAdmissionStatus
		{
			get
			{
				return this._PupilAdmissionStatus;
			}
			set
			{
				if ((this._PupilAdmissionStatus != value))
				{
					this.OnPupilAdmissionStatusChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionStatus = value;
					this.SendPropertyChanged("PupilAdmissionStatus");
					this.OnPupilAdmissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_FeePayment", Storage="_FeePayments", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<FeePayment> FeePayments
		{
			get
			{
				return this._FeePayments;
			}
			set
			{
				this._FeePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_FeePaymentMonth", Storage="_FeePaymentMonths", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<FeePaymentMonth> FeePaymentMonths
		{
			get
			{
				return this._FeePaymentMonths;
			}
			set
			{
				this._FeePaymentMonths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilAttendance", Storage="_PupilAttendances", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<PupilAttendance> PupilAttendances
		{
			get
			{
				return this._PupilAttendances;
			}
			set
			{
				this._PupilAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilGrade", Storage="_PupilGrades", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<PupilGrade> PupilGrades
		{
			get
			{
				return this._PupilGrades;
			}
			set
			{
				this._PupilGrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilSubject", Storage="_PupilSubjects", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<PupilSubject> PupilSubjects
		{
			get
			{
				return this._PupilSubjects;
			}
			set
			{
				this._PupilSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilWaiveOff", Storage="_PupilWaiveOffs", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId")]
		public EntitySet<PupilWaiveOff> PupilWaiveOffs
		{
			get
			{
				return this._PupilWaiveOffs;
			}
			set
			{
				this._PupilWaiveOffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_PupilAdmission", Storage="_Pupil", ThisKey="PupilId", OtherKey="PupilId", IsForeignKey=true)]
		public Pupil Pupil
		{
			get
			{
				return this._Pupil.Entity;
			}
			set
			{
				Pupil previousValue = this._Pupil.Entity;
				if (((previousValue != value) 
							|| (this._Pupil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pupil.Entity = null;
						previousValue.PupilAdmissions.Remove(this);
					}
					this._Pupil.Entity = value;
					if ((value != null))
					{
						value.PupilAdmissions.Add(this);
						this._PupilId = value.PupilId;
					}
					else
					{
						this._PupilId = default(int);
					}
					this.SendPropertyChanged("Pupil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_PupilAdmission", Storage="_Section", ThisKey="SectionId", OtherKey="SectionId", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.PupilAdmissions.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.PupilAdmissions.Add(this);
						this._SectionId = value.SectionId;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_PupilAdmission", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.PupilAdmissions.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.PupilAdmissions.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAdmission", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilAdmissions.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilAdmissions.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAdmission1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilAdmissions1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilAdmissions1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
		
		private void attach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_FeePaymentMonths(FeePaymentMonth entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
		
		private void attach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
		
		private void attach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
		
		private void attach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
		
		private void attach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = this;
		}
		
		private void detach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.PupilAdmission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilAttendance")]
	public partial class PupilAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilAttendanceId;
		
		private int _PupilAdmissionId;
		
		private int _HyPresentDays;
		
		private int _AnPresentDays;
		
		private int _ClassAttendanceId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<ClassAttendance> _ClassAttendance;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilAttendanceIdChanging(int value);
    partial void OnPupilAttendanceIdChanged();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnHyPresentDaysChanging(int value);
    partial void OnHyPresentDaysChanged();
    partial void OnAnPresentDaysChanging(int value);
    partial void OnAnPresentDaysChanged();
    partial void OnClassAttendanceIdChanging(int value);
    partial void OnClassAttendanceIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PupilAttendance()
		{
			this._ClassAttendance = default(EntityRef<ClassAttendance>);
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAttendanceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilAttendanceId
		{
			get
			{
				return this._PupilAttendanceId;
			}
			set
			{
				if ((this._PupilAttendanceId != value))
				{
					this.OnPupilAttendanceIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAttendanceId = value;
					this.SendPropertyChanged("PupilAttendanceId");
					this.OnPupilAttendanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int NOT NULL")]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HyPresentDays", DbType="Int NOT NULL")]
		public int HyPresentDays
		{
			get
			{
				return this._HyPresentDays;
			}
			set
			{
				if ((this._HyPresentDays != value))
				{
					this.OnHyPresentDaysChanging(value);
					this.SendPropertyChanging();
					this._HyPresentDays = value;
					this.SendPropertyChanged("HyPresentDays");
					this.OnHyPresentDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnPresentDays", DbType="Int NOT NULL")]
		public int AnPresentDays
		{
			get
			{
				return this._AnPresentDays;
			}
			set
			{
				if ((this._AnPresentDays != value))
				{
					this.OnAnPresentDaysChanging(value);
					this.SendPropertyChanging();
					this._AnPresentDays = value;
					this.SendPropertyChanged("AnPresentDays");
					this.OnAnPresentDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassAttendanceId", DbType="Int NOT NULL")]
		public int ClassAttendanceId
		{
			get
			{
				return this._ClassAttendanceId;
			}
			set
			{
				if ((this._ClassAttendanceId != value))
				{
					if (this._ClassAttendance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassAttendanceIdChanging(value);
					this.SendPropertyChanging();
					this._ClassAttendanceId = value;
					this.SendPropertyChanged("ClassAttendanceId");
					this.OnClassAttendanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassAttendance_PupilAttendance", Storage="_ClassAttendance", ThisKey="ClassAttendanceId", OtherKey="ClassAttendanceId", IsForeignKey=true)]
		public ClassAttendance ClassAttendance
		{
			get
			{
				return this._ClassAttendance.Entity;
			}
			set
			{
				ClassAttendance previousValue = this._ClassAttendance.Entity;
				if (((previousValue != value) 
							|| (this._ClassAttendance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassAttendance.Entity = null;
						previousValue.PupilAttendances.Remove(this);
					}
					this._ClassAttendance.Entity = value;
					if ((value != null))
					{
						value.PupilAttendances.Add(this);
						this._ClassAttendanceId = value.ClassAttendanceId;
					}
					else
					{
						this._ClassAttendanceId = default(int);
					}
					this.SendPropertyChanged("ClassAttendance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilAttendance", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.PupilAttendances.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.PupilAttendances.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(int);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAttendance", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilAttendances.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilAttendances.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAttendance1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilAttendances1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilAttendances1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilCharge")]
	public partial class PupilCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilChargeId;
		
		private int _PupilId;
		
		private int _HeadId;
		
		private byte _FeeFor;
		
		private decimal _FeeAmount;
		
		private System.DateTime _ChargeDate;
		
		private bool _IsCompulsory;
		
		private string _Remarks;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Head> _Head;
		
		private EntityRef<Pupil> _Pupil;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilChargeIdChanging(int value);
    partial void OnPupilChargeIdChanged();
    partial void OnPupilIdChanging(int value);
    partial void OnPupilIdChanged();
    partial void OnHeadIdChanging(int value);
    partial void OnHeadIdChanged();
    partial void OnFeeForChanging(byte value);
    partial void OnFeeForChanged();
    partial void OnFeeAmountChanging(decimal value);
    partial void OnFeeAmountChanged();
    partial void OnChargeDateChanging(System.DateTime value);
    partial void OnChargeDateChanged();
    partial void OnIsCompulsoryChanging(bool value);
    partial void OnIsCompulsoryChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PupilCharge()
		{
			this._Head = default(EntityRef<Head>);
			this._Pupil = default(EntityRef<Pupil>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilChargeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilChargeId
		{
			get
			{
				return this._PupilChargeId;
			}
			set
			{
				if ((this._PupilChargeId != value))
				{
					this.OnPupilChargeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilChargeId = value;
					this.SendPropertyChanged("PupilChargeId");
					this.OnPupilChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilId", DbType="Int NOT NULL")]
		public int PupilId
		{
			get
			{
				return this._PupilId;
			}
			set
			{
				if ((this._PupilId != value))
				{
					if (this._Pupil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilIdChanging(value);
					this.SendPropertyChanging();
					this._PupilId = value;
					this.SendPropertyChanged("PupilId");
					this.OnPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int NOT NULL")]
		public int HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeFor", DbType="TinyInt NOT NULL")]
		public byte FeeFor
		{
			get
			{
				return this._FeeFor;
			}
			set
			{
				if ((this._FeeFor != value))
				{
					this.OnFeeForChanging(value);
					this.SendPropertyChanging();
					this._FeeFor = value;
					this.SendPropertyChanged("FeeFor");
					this.OnFeeForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Money NOT NULL")]
		public decimal FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeDate", DbType="Date NOT NULL")]
		public System.DateTime ChargeDate
		{
			get
			{
				return this._ChargeDate;
			}
			set
			{
				if ((this._ChargeDate != value))
				{
					this.OnChargeDateChanging(value);
					this.SendPropertyChanging();
					this._ChargeDate = value;
					this.SendPropertyChanged("ChargeDate");
					this.OnChargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompulsory", DbType="Bit NOT NULL")]
		public bool IsCompulsory
		{
			get
			{
				return this._IsCompulsory;
			}
			set
			{
				if ((this._IsCompulsory != value))
				{
					this.OnIsCompulsoryChanging(value);
					this.SendPropertyChanging();
					this._IsCompulsory = value;
					this.SendPropertyChanged("IsCompulsory");
					this.OnIsCompulsoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Head_PupilCharge", Storage="_Head", ThisKey="HeadId", OtherKey="HeadId", IsForeignKey=true)]
		public Head Head
		{
			get
			{
				return this._Head.Entity;
			}
			set
			{
				Head previousValue = this._Head.Entity;
				if (((previousValue != value) 
							|| (this._Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Head.Entity = null;
						previousValue.PupilCharges.Remove(this);
					}
					this._Head.Entity = value;
					if ((value != null))
					{
						value.PupilCharges.Add(this);
						this._HeadId = value.HeadId;
					}
					else
					{
						this._HeadId = default(int);
					}
					this.SendPropertyChanged("Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_PupilCharge", Storage="_Pupil", ThisKey="PupilId", OtherKey="PupilId", IsForeignKey=true)]
		public Pupil Pupil
		{
			get
			{
				return this._Pupil.Entity;
			}
			set
			{
				Pupil previousValue = this._Pupil.Entity;
				if (((previousValue != value) 
							|| (this._Pupil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pupil.Entity = null;
						previousValue.PupilCharges.Remove(this);
					}
					this._Pupil.Entity = value;
					if ((value != null))
					{
						value.PupilCharges.Add(this);
						this._PupilId = value.PupilId;
					}
					else
					{
						this._PupilId = default(int);
					}
					this.SendPropertyChanged("Pupil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilCharge", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilCharges.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilCharges.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilCharge1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilCharges1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilCharges1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilGrade")]
	public partial class PupilGrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilGradeId;
		
		private int _PupilAdmissionId;
		
		private int _SubjectGradingScaleId;
		
		private int _GradeId;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Grade> _Grade;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<SubjectGradingScale> _SubjectGradingScale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilGradeIdChanging(int value);
    partial void OnPupilGradeIdChanged();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnSubjectGradingScaleIdChanging(int value);
    partial void OnSubjectGradingScaleIdChanged();
    partial void OnGradeIdChanging(int value);
    partial void OnGradeIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PupilGrade()
		{
			this._Grade = default(EntityRef<Grade>);
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._SubjectGradingScale = default(EntityRef<SubjectGradingScale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilGradeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilGradeId
		{
			get
			{
				return this._PupilGradeId;
			}
			set
			{
				if ((this._PupilGradeId != value))
				{
					this.OnPupilGradeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilGradeId = value;
					this.SendPropertyChanged("PupilGradeId");
					this.OnPupilGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int NOT NULL")]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectGradingScaleId", DbType="Int NOT NULL")]
		public int SubjectGradingScaleId
		{
			get
			{
				return this._SubjectGradingScaleId;
			}
			set
			{
				if ((this._SubjectGradingScaleId != value))
				{
					if (this._SubjectGradingScale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectGradingScaleIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectGradingScaleId = value;
					this.SendPropertyChanged("SubjectGradingScaleId");
					this.OnSubjectGradingScaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="Int NOT NULL")]
		public int GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					if (this._Grade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIdChanging(value);
					this.SendPropertyChanging();
					this._GradeId = value;
					this.SendPropertyChanged("GradeId");
					this.OnGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grade_PupilGrade", Storage="_Grade", ThisKey="GradeId", OtherKey="GradeId", IsForeignKey=true)]
		public Grade Grade
		{
			get
			{
				return this._Grade.Entity;
			}
			set
			{
				Grade previousValue = this._Grade.Entity;
				if (((previousValue != value) 
							|| (this._Grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grade.Entity = null;
						previousValue.PupilGrades.Remove(this);
					}
					this._Grade.Entity = value;
					if ((value != null))
					{
						value.PupilGrades.Add(this);
						this._GradeId = value.GradeId;
					}
					else
					{
						this._GradeId = default(int);
					}
					this.SendPropertyChanged("Grade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilGrade", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.PupilGrades.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.PupilGrades.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(int);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilGrade", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilGrades.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilGrades.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilGrade1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilGrades1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilGrades1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectGradingScale_PupilGrade", Storage="_SubjectGradingScale", ThisKey="SubjectGradingScaleId", OtherKey="SubjectGradingScaleId", IsForeignKey=true)]
		public SubjectGradingScale SubjectGradingScale
		{
			get
			{
				return this._SubjectGradingScale.Entity;
			}
			set
			{
				SubjectGradingScale previousValue = this._SubjectGradingScale.Entity;
				if (((previousValue != value) 
							|| (this._SubjectGradingScale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectGradingScale.Entity = null;
						previousValue.PupilGrades.Remove(this);
					}
					this._SubjectGradingScale.Entity = value;
					if ((value != null))
					{
						value.PupilGrades.Add(this);
						this._SubjectGradingScaleId = value.SubjectGradingScaleId;
					}
					else
					{
						this._SubjectGradingScaleId = default(int);
					}
					this.SendPropertyChanged("SubjectGradingScale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilMark")]
	public partial class PupilMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilMarkId;
		
		private int _PupilSubjectId;
		
		private int _SubjectFullMarkId;
		
		private decimal _TheoryMO;
		
		private decimal _PracticalMO;
		
		private string _Aggregate;
		
		private decimal _Percentage;
		
		private int _Rank;
		
		private bool _IsPass;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<PupilSubject> _PupilSubject;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<SubjectFullMark> _SubjectFullMark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilMarkIdChanging(int value);
    partial void OnPupilMarkIdChanged();
    partial void OnPupilSubjectIdChanging(int value);
    partial void OnPupilSubjectIdChanged();
    partial void OnSubjectFullMarkIdChanging(int value);
    partial void OnSubjectFullMarkIdChanged();
    partial void OnTheoryMOChanging(decimal value);
    partial void OnTheoryMOChanged();
    partial void OnPracticalMOChanging(decimal value);
    partial void OnPracticalMOChanged();
    partial void OnAggregateChanging(string value);
    partial void OnAggregateChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnIsPassChanging(bool value);
    partial void OnIsPassChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PupilMark()
		{
			this._PupilSubject = default(EntityRef<PupilSubject>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._SubjectFullMark = default(EntityRef<SubjectFullMark>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilMarkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilMarkId
		{
			get
			{
				return this._PupilMarkId;
			}
			set
			{
				if ((this._PupilMarkId != value))
				{
					this.OnPupilMarkIdChanging(value);
					this.SendPropertyChanging();
					this._PupilMarkId = value;
					this.SendPropertyChanged("PupilMarkId");
					this.OnPupilMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilSubjectId", DbType="Int NOT NULL")]
		public int PupilSubjectId
		{
			get
			{
				return this._PupilSubjectId;
			}
			set
			{
				if ((this._PupilSubjectId != value))
				{
					if (this._PupilSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._PupilSubjectId = value;
					this.SendPropertyChanged("PupilSubjectId");
					this.OnPupilSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectFullMarkId", DbType="Int NOT NULL")]
		public int SubjectFullMarkId
		{
			get
			{
				return this._SubjectFullMarkId;
			}
			set
			{
				if ((this._SubjectFullMarkId != value))
				{
					if (this._SubjectFullMark.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectFullMarkIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectFullMarkId = value;
					this.SendPropertyChanged("SubjectFullMarkId");
					this.OnSubjectFullMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryMO", DbType="Decimal(18,1) NOT NULL")]
		public decimal TheoryMO
		{
			get
			{
				return this._TheoryMO;
			}
			set
			{
				if ((this._TheoryMO != value))
				{
					this.OnTheoryMOChanging(value);
					this.SendPropertyChanging();
					this._TheoryMO = value;
					this.SendPropertyChanged("TheoryMO");
					this.OnTheoryMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalMO", DbType="Decimal(18,1) NOT NULL")]
		public decimal PracticalMO
		{
			get
			{
				return this._PracticalMO;
			}
			set
			{
				if ((this._PracticalMO != value))
				{
					this.OnPracticalMOChanging(value);
					this.SendPropertyChanging();
					this._PracticalMO = value;
					this.SendPropertyChanged("PracticalMO");
					this.OnPracticalMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aggregate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Aggregate
		{
			get
			{
				return this._Aggregate;
			}
			set
			{
				if ((this._Aggregate != value))
				{
					this.OnAggregateChanging(value);
					this.SendPropertyChanging();
					this._Aggregate = value;
					this.SendPropertyChanged("Aggregate");
					this.OnAggregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,2) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit NOT NULL")]
		public bool IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilSubject_PupilMark", Storage="_PupilSubject", ThisKey="PupilSubjectId", OtherKey="PupilSubjectId", IsForeignKey=true)]
		public PupilSubject PupilSubject
		{
			get
			{
				return this._PupilSubject.Entity;
			}
			set
			{
				PupilSubject previousValue = this._PupilSubject.Entity;
				if (((previousValue != value) 
							|| (this._PupilSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilSubject.Entity = null;
						previousValue.PupilMarks.Remove(this);
					}
					this._PupilSubject.Entity = value;
					if ((value != null))
					{
						value.PupilMarks.Add(this);
						this._PupilSubjectId = value.PupilSubjectId;
					}
					else
					{
						this._PupilSubjectId = default(int);
					}
					this.SendPropertyChanged("PupilSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilMark", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilMarks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilMarks.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilMark1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilMarks1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilMarks1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectFullMark_PupilMark", Storage="_SubjectFullMark", ThisKey="SubjectFullMarkId", OtherKey="SubjectFullMarksId", IsForeignKey=true)]
		public SubjectFullMark SubjectFullMark
		{
			get
			{
				return this._SubjectFullMark.Entity;
			}
			set
			{
				SubjectFullMark previousValue = this._SubjectFullMark.Entity;
				if (((previousValue != value) 
							|| (this._SubjectFullMark.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectFullMark.Entity = null;
						previousValue.PupilMarks.Remove(this);
					}
					this._SubjectFullMark.Entity = value;
					if ((value != null))
					{
						value.PupilMarks.Add(this);
						this._SubjectFullMarkId = value.SubjectFullMarksId;
					}
					else
					{
						this._SubjectFullMarkId = default(int);
					}
					this.SendPropertyChanged("SubjectFullMark");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilSubject")]
	public partial class PupilSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilSubjectId;
		
		private int _PupilAdmissionId;
		
		private int _ClassSubjectId;
		
		private int _SubjectNo;
		
		private bool _IsOptional;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PupilMark> _PupilMarks;
		
		private EntityRef<ClassSubject> _ClassSubject;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilSubjectIdChanging(int value);
    partial void OnPupilSubjectIdChanged();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnClassSubjectIdChanging(int value);
    partial void OnClassSubjectIdChanged();
    partial void OnSubjectNoChanging(int value);
    partial void OnSubjectNoChanged();
    partial void OnIsOptionalChanging(bool value);
    partial void OnIsOptionalChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpatedByChanging(System.Nullable<int> value);
    partial void OnUpatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PupilSubject()
		{
			this._PupilMarks = new EntitySet<PupilMark>(new Action<PupilMark>(this.attach_PupilMarks), new Action<PupilMark>(this.detach_PupilMarks));
			this._ClassSubject = default(EntityRef<ClassSubject>);
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilSubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilSubjectId
		{
			get
			{
				return this._PupilSubjectId;
			}
			set
			{
				if ((this._PupilSubjectId != value))
				{
					this.OnPupilSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._PupilSubjectId = value;
					this.SendPropertyChanged("PupilSubjectId");
					this.OnPupilSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int NOT NULL")]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectId", DbType="Int NOT NULL")]
		public int ClassSubjectId
		{
			get
			{
				return this._ClassSubjectId;
			}
			set
			{
				if ((this._ClassSubjectId != value))
				{
					if (this._ClassSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectId = value;
					this.SendPropertyChanged("ClassSubjectId");
					this.OnClassSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectNo", DbType="Int NOT NULL")]
		public int SubjectNo
		{
			get
			{
				return this._SubjectNo;
			}
			set
			{
				if ((this._SubjectNo != value))
				{
					this.OnSubjectNoChanging(value);
					this.SendPropertyChanging();
					this._SubjectNo = value;
					this.SendPropertyChanged("SubjectNo");
					this.OnSubjectNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOptional", DbType="Bit NOT NULL")]
		public bool IsOptional
		{
			get
			{
				return this._IsOptional;
			}
			set
			{
				if ((this._IsOptional != value))
				{
					this.OnIsOptionalChanging(value);
					this.SendPropertyChanging();
					this._IsOptional = value;
					this.SendPropertyChanged("IsOptional");
					this.OnIsOptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpatedBy", DbType="Int")]
		public System.Nullable<int> UpatedBy
		{
			get
			{
				return this._UpatedBy;
			}
			set
			{
				if ((this._UpatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpatedByChanging(value);
					this.SendPropertyChanging();
					this._UpatedBy = value;
					this.SendPropertyChanged("UpatedBy");
					this.OnUpatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilSubject_PupilMark", Storage="_PupilMarks", ThisKey="PupilSubjectId", OtherKey="PupilSubjectId")]
		public EntitySet<PupilMark> PupilMarks
		{
			get
			{
				return this._PupilMarks;
			}
			set
			{
				this._PupilMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_PupilSubject", Storage="_ClassSubject", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId", IsForeignKey=true)]
		public ClassSubject ClassSubject
		{
			get
			{
				return this._ClassSubject.Entity;
			}
			set
			{
				ClassSubject previousValue = this._ClassSubject.Entity;
				if (((previousValue != value) 
							|| (this._ClassSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassSubject.Entity = null;
						previousValue.PupilSubjects.Remove(this);
					}
					this._ClassSubject.Entity = value;
					if ((value != null))
					{
						value.PupilSubjects.Add(this);
						this._ClassSubjectId = value.ClassSubjectId;
					}
					else
					{
						this._ClassSubjectId = default(int);
					}
					this.SendPropertyChanged("ClassSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilSubject", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.PupilSubjects.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.PupilSubjects.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(int);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilSubject", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilSubjects.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilSubjects.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilSubject1", Storage="_StaffLogin1", ThisKey="UpatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilSubjects1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilSubjects1.Add(this);
						this._UpatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.PupilSubject = this;
		}
		
		private void detach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.PupilSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilType")]
	public partial class PupilType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilTypeId;
		
		private string _PupilTypeName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<FeeAdmissionHead> _FeeAdmissionHeads;
		
		private EntitySet<FeeClassHead> _FeeClassHeads;
		
		private EntitySet<Pupil> _Pupils;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilTypeIdChanging(int value);
    partial void OnPupilTypeIdChanged();
    partial void OnPupilTypeNameChanging(string value);
    partial void OnPupilTypeNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PupilType()
		{
			this._FeeAdmissionHeads = new EntitySet<FeeAdmissionHead>(new Action<FeeAdmissionHead>(this.attach_FeeAdmissionHeads), new Action<FeeAdmissionHead>(this.detach_FeeAdmissionHeads));
			this._FeeClassHeads = new EntitySet<FeeClassHead>(new Action<FeeClassHead>(this.attach_FeeClassHeads), new Action<FeeClassHead>(this.detach_FeeClassHeads));
			this._Pupils = new EntitySet<Pupil>(new Action<Pupil>(this.attach_Pupils), new Action<Pupil>(this.detach_Pupils));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilTypeId
		{
			get
			{
				return this._PupilTypeId;
			}
			set
			{
				if ((this._PupilTypeId != value))
				{
					this.OnPupilTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PupilTypeId = value;
					this.SendPropertyChanged("PupilTypeId");
					this.OnPupilTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilTypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PupilTypeName
		{
			get
			{
				return this._PupilTypeName;
			}
			set
			{
				if ((this._PupilTypeName != value))
				{
					this.OnPupilTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PupilTypeName = value;
					this.SendPropertyChanged("PupilTypeName");
					this.OnPupilTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_FeeAdmissionHead", Storage="_FeeAdmissionHeads", ThisKey="PupilTypeId", OtherKey="PupilTypeId")]
		public EntitySet<FeeAdmissionHead> FeeAdmissionHeads
		{
			get
			{
				return this._FeeAdmissionHeads;
			}
			set
			{
				this._FeeAdmissionHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_FeeClassHead", Storage="_FeeClassHeads", ThisKey="PupilTypeId", OtherKey="PupilTypeId")]
		public EntitySet<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this._FeeClassHeads;
			}
			set
			{
				this._FeeClassHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilType_Pupil", Storage="_Pupils", ThisKey="PupilTypeId", OtherKey="PupilTypeId")]
		public EntitySet<Pupil> Pupils
		{
			get
			{
				return this._Pupils;
			}
			set
			{
				this._Pupils.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = this;
		}
		
		private void detach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = null;
		}
		
		private void attach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = this;
		}
		
		private void detach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = null;
		}
		
		private void attach_Pupils(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = this;
		}
		
		private void detach_Pupils(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.PupilType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PupilWaiveOff")]
	public partial class PupilWaiveOff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PupilWaiveOffId;
		
		private int _PupilAdmissionId;
		
		private int _FeeClassId;
		
		private decimal _WaiveOffAmount;
		
		private string _Remarks;
		
		private System.Nullable<int> _FeePaymentDetailId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<FeeClass> _FeeClass;
		
		private EntityRef<FeePaymentDetail> _FeePaymentDetail;
		
		private EntityRef<PupilAdmission> _PupilAdmission;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPupilWaiveOffIdChanging(int value);
    partial void OnPupilWaiveOffIdChanged();
    partial void OnPupilAdmissionIdChanging(int value);
    partial void OnPupilAdmissionIdChanged();
    partial void OnFeeClassIdChanging(int value);
    partial void OnFeeClassIdChanged();
    partial void OnWaiveOffAmountChanging(decimal value);
    partial void OnWaiveOffAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnFeePaymentDetailIdChanging(System.Nullable<int> value);
    partial void OnFeePaymentDetailIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PupilWaiveOff()
		{
			this._FeeClass = default(EntityRef<FeeClass>);
			this._FeePaymentDetail = default(EntityRef<FeePaymentDetail>);
			this._PupilAdmission = default(EntityRef<PupilAdmission>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilWaiveOffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PupilWaiveOffId
		{
			get
			{
				return this._PupilWaiveOffId;
			}
			set
			{
				if ((this._PupilWaiveOffId != value))
				{
					this.OnPupilWaiveOffIdChanging(value);
					this.SendPropertyChanging();
					this._PupilWaiveOffId = value;
					this.SendPropertyChanged("PupilWaiveOffId");
					this.OnPupilWaiveOffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionId", DbType="Int NOT NULL")]
		public int PupilAdmissionId
		{
			get
			{
				return this._PupilAdmissionId;
			}
			set
			{
				if ((this._PupilAdmissionId != value))
				{
					if (this._PupilAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilAdmissionIdChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionId = value;
					this.SendPropertyChanged("PupilAdmissionId");
					this.OnPupilAdmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeClassId", DbType="Int NOT NULL")]
		public int FeeClassId
		{
			get
			{
				return this._FeeClassId;
			}
			set
			{
				if ((this._FeeClassId != value))
				{
					if (this._FeeClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeClassIdChanging(value);
					this.SendPropertyChanging();
					this._FeeClassId = value;
					this.SendPropertyChanged("FeeClassId");
					this.OnFeeClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaiveOffAmount", DbType="Money NOT NULL")]
		public decimal WaiveOffAmount
		{
			get
			{
				return this._WaiveOffAmount;
			}
			set
			{
				if ((this._WaiveOffAmount != value))
				{
					this.OnWaiveOffAmountChanging(value);
					this.SendPropertyChanging();
					this._WaiveOffAmount = value;
					this.SendPropertyChanged("WaiveOffAmount");
					this.OnWaiveOffAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaymentDetailId", DbType="Int")]
		public System.Nullable<int> FeePaymentDetailId
		{
			get
			{
				return this._FeePaymentDetailId;
			}
			set
			{
				if ((this._FeePaymentDetailId != value))
				{
					if (this._FeePaymentDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePaymentDetailIdChanging(value);
					this.SendPropertyChanging();
					this._FeePaymentDetailId = value;
					this.SendPropertyChanged("FeePaymentDetailId");
					this.OnFeePaymentDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeeClass_PupilWaiveOff", Storage="_FeeClass", ThisKey="FeeClassId", OtherKey="FeeClassId", IsForeignKey=true)]
		public FeeClass FeeClass
		{
			get
			{
				return this._FeeClass.Entity;
			}
			set
			{
				FeeClass previousValue = this._FeeClass.Entity;
				if (((previousValue != value) 
							|| (this._FeeClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeeClass.Entity = null;
						previousValue.PupilWaiveOffs.Remove(this);
					}
					this._FeeClass.Entity = value;
					if ((value != null))
					{
						value.PupilWaiveOffs.Add(this);
						this._FeeClassId = value.FeeClassId;
					}
					else
					{
						this._FeeClassId = default(int);
					}
					this.SendPropertyChanged("FeeClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePaymentDetail_PupilWaiveOff", Storage="_FeePaymentDetail", ThisKey="FeePaymentDetailId", OtherKey="FeePaymentDetailId", IsForeignKey=true)]
		public FeePaymentDetail FeePaymentDetail
		{
			get
			{
				return this._FeePaymentDetail.Entity;
			}
			set
			{
				FeePaymentDetail previousValue = this._FeePaymentDetail.Entity;
				if (((previousValue != value) 
							|| (this._FeePaymentDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePaymentDetail.Entity = null;
						previousValue.PupilWaiveOffs.Remove(this);
					}
					this._FeePaymentDetail.Entity = value;
					if ((value != null))
					{
						value.PupilWaiveOffs.Add(this);
						this._FeePaymentDetailId = value.FeePaymentDetailId;
					}
					else
					{
						this._FeePaymentDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FeePaymentDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PupilAdmission_PupilWaiveOff", Storage="_PupilAdmission", ThisKey="PupilAdmissionId", OtherKey="PupilAdmissionId", IsForeignKey=true)]
		public PupilAdmission PupilAdmission
		{
			get
			{
				return this._PupilAdmission.Entity;
			}
			set
			{
				PupilAdmission previousValue = this._PupilAdmission.Entity;
				if (((previousValue != value) 
							|| (this._PupilAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PupilAdmission.Entity = null;
						previousValue.PupilWaiveOffs.Remove(this);
					}
					this._PupilAdmission.Entity = value;
					if ((value != null))
					{
						value.PupilWaiveOffs.Add(this);
						this._PupilAdmissionId = value.PupilAdmissionId;
					}
					else
					{
						this._PupilAdmissionId = default(int);
					}
					this.SendPropertyChanged("PupilAdmission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilWaiveOff", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PupilWaiveOffs.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PupilWaiveOffs.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilWaiveOff1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PupilWaiveOffs1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PupilWaiveOffs1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseId;
		
		private int _SupplierId;
		
		private string _InvoiceNo;
		
		private System.DateTime _InvoiceDate;
		
		private decimal _BaseAmount;
		
		private decimal _DiscountAmount;
		
		private decimal _TaxableAmount;
		
		private decimal _CGSTAmount;
		
		private decimal _SGSTAmount;
		
		private decimal _IGSTAmount;
		
		private decimal _GrossAmount;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIdChanging(int value);
    partial void OnPurchaseIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnBaseAmountChanging(decimal value);
    partial void OnBaseAmountChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnTaxableAmountChanging(decimal value);
    partial void OnTaxableAmountChanged();
    partial void OnCGSTAmountChanging(decimal value);
    partial void OnCGSTAmountChanged();
    partial void OnSGSTAmountChanging(decimal value);
    partial void OnSGSTAmountChanged();
    partial void OnIGSTAmountChanging(decimal value);
    partial void OnIGSTAmountChanged();
    partial void OnGrossAmountChanging(decimal value);
    partial void OnGrossAmountChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Purchase()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseId
		{
			get
			{
				return this._PurchaseId;
			}
			set
			{
				if ((this._PurchaseId != value))
				{
					this.OnPurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseId = value;
					this.SendPropertyChanged("PurchaseId");
					this.OnPurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseAmount
		{
			get
			{
				return this._BaseAmount;
			}
			set
			{
				if ((this._BaseAmount != value))
				{
					this.OnBaseAmountChanging(value);
					this.SendPropertyChanging();
					this._BaseAmount = value;
					this.SendPropertyChanged("BaseAmount");
					this.OnBaseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TaxableAmount
		{
			get
			{
				return this._TaxableAmount;
			}
			set
			{
				if ((this._TaxableAmount != value))
				{
					this.OnTaxableAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxableAmount = value;
					this.SendPropertyChanged("TaxableAmount");
					this.OnTaxableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal CGSTAmount
		{
			get
			{
				return this._CGSTAmount;
			}
			set
			{
				if ((this._CGSTAmount != value))
				{
					this.OnCGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._CGSTAmount = value;
					this.SendPropertyChanged("CGSTAmount");
					this.OnCGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal SGSTAmount
		{
			get
			{
				return this._SGSTAmount;
			}
			set
			{
				if ((this._SGSTAmount != value))
				{
					this.OnSGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._SGSTAmount = value;
					this.SendPropertyChanged("SGSTAmount");
					this.OnSGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal IGSTAmount
		{
			get
			{
				return this._IGSTAmount;
			}
			set
			{
				if ((this._IGSTAmount != value))
				{
					this.OnIGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._IGSTAmount = value;
					this.SendPropertyChanged("IGSTAmount");
					this.OnIGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal GrossAmount
		{
			get
			{
				return this._GrossAmount;
			}
			set
			{
				if ((this._GrossAmount != value))
				{
					this.OnGrossAmountChanging(value);
					this.SendPropertyChanging();
					this._GrossAmount = value;
					this.SendPropertyChanged("GrossAmount");
					this.OnGrossAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Purchase", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Purchase1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Purchases1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Purchases1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Purchase", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseBook")]
	public partial class PurchaseBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseBookId;
		
		private int _PurchaseId;
		
		private int _BookId;
		
		private decimal _Rate;
		
		private decimal _Quantity;
		
		private decimal _BaseAmount;
		
		private decimal _DiscountPercentage;
		
		private decimal _DiscountAmount;
		
		private decimal _TaxableAmount;
		
		private decimal _GSTPercentage;
		
		private decimal _CGSTAmount;
		
		private decimal _SGSTAmount;
		
		private decimal _IGSTAmount;
		
		private decimal _TotalAmount;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private EntitySet<BookDetail> _BookDetails;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseBookIdChanging(int value);
    partial void OnPurchaseBookIdChanged();
    partial void OnPurchaseIdChanging(int value);
    partial void OnPurchaseIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnBaseAmountChanging(decimal value);
    partial void OnBaseAmountChanged();
    partial void OnDiscountPercentageChanging(decimal value);
    partial void OnDiscountPercentageChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnTaxableAmountChanging(decimal value);
    partial void OnTaxableAmountChanged();
    partial void OnGSTPercentageChanging(decimal value);
    partial void OnGSTPercentageChanged();
    partial void OnCGSTAmountChanging(decimal value);
    partial void OnCGSTAmountChanged();
    partial void OnSGSTAmountChanging(decimal value);
    partial void OnSGSTAmountChanged();
    partial void OnIGSTAmountChanging(decimal value);
    partial void OnIGSTAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PurchaseBook()
		{
			this._BookDetails = new EntitySet<BookDetail>(new Action<BookDetail>(this.attach_BookDetails), new Action<BookDetail>(this.detach_BookDetails));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseBookId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseBookId
		{
			get
			{
				return this._PurchaseBookId;
			}
			set
			{
				if ((this._PurchaseBookId != value))
				{
					this.OnPurchaseBookIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseBookId = value;
					this.SendPropertyChanged("PurchaseBookId");
					this.OnPurchaseBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseId", DbType="Int NOT NULL")]
		public int PurchaseId
		{
			get
			{
				return this._PurchaseId;
			}
			set
			{
				if ((this._PurchaseId != value))
				{
					this.OnPurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseId = value;
					this.SendPropertyChanged("PurchaseId");
					this.OnPurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,0) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseAmount
		{
			get
			{
				return this._BaseAmount;
			}
			set
			{
				if ((this._BaseAmount != value))
				{
					this.OnBaseAmountChanging(value);
					this.SendPropertyChanging();
					this._BaseAmount = value;
					this.SendPropertyChanged("BaseAmount");
					this.OnBaseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Decimal(18,2) NOT NULL")]
		public decimal DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TaxableAmount
		{
			get
			{
				return this._TaxableAmount;
			}
			set
			{
				if ((this._TaxableAmount != value))
				{
					this.OnTaxableAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxableAmount = value;
					this.SendPropertyChanged("TaxableAmount");
					this.OnTaxableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSTPercentage", DbType="Decimal(18,0) NOT NULL")]
		public decimal GSTPercentage
		{
			get
			{
				return this._GSTPercentage;
			}
			set
			{
				if ((this._GSTPercentage != value))
				{
					this.OnGSTPercentageChanging(value);
					this.SendPropertyChanging();
					this._GSTPercentage = value;
					this.SendPropertyChanged("GSTPercentage");
					this.OnGSTPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal CGSTAmount
		{
			get
			{
				return this._CGSTAmount;
			}
			set
			{
				if ((this._CGSTAmount != value))
				{
					this.OnCGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._CGSTAmount = value;
					this.SendPropertyChanged("CGSTAmount");
					this.OnCGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal SGSTAmount
		{
			get
			{
				return this._SGSTAmount;
			}
			set
			{
				if ((this._SGSTAmount != value))
				{
					this.OnSGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._SGSTAmount = value;
					this.SendPropertyChanged("SGSTAmount");
					this.OnSGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGSTAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal IGSTAmount
		{
			get
			{
				return this._IGSTAmount;
			}
			set
			{
				if ((this._IGSTAmount != value))
				{
					this.OnIGSTAmountChanging(value);
					this.SendPropertyChanging();
					this._IGSTAmount = value;
					this.SendPropertyChanged("IGSTAmount");
					this.OnIGSTAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseBook_BookDetail", Storage="_BookDetails", ThisKey="PurchaseBookId", OtherKey="PurchaseBookId")]
		public EntitySet<BookDetail> BookDetails
		{
			get
			{
				return this._BookDetails;
			}
			set
			{
				this._BookDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseBook", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PurchaseBooks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PurchaseBooks.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseBook1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PurchaseBooks1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PurchaseBooks1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseBook = this;
		}
		
		private void detach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseMagazine")]
	public partial class PurchaseMagazine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseMagazineId;
		
		private int _MagazineId;
		
		private System.DateTime _PublicDate;
		
		private System.DateTime _ReceiveDate;
		
		private int _LanguageId;
		
		private string _ReceiveSource;
		
		private decimal _Rate;
		
		private string _Remarks;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Magazine> _Magazine;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseMagazineIdChanging(int value);
    partial void OnPurchaseMagazineIdChanged();
    partial void OnMagazineIdChanging(int value);
    partial void OnMagazineIdChanged();
    partial void OnPublicDateChanging(System.DateTime value);
    partial void OnPublicDateChanged();
    partial void OnReceiveDateChanging(System.DateTime value);
    partial void OnReceiveDateChanged();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnReceiveSourceChanging(string value);
    partial void OnReceiveSourceChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PurchaseMagazine()
		{
			this._Language = default(EntityRef<Language>);
			this._Magazine = default(EntityRef<Magazine>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseMagazineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseMagazineId
		{
			get
			{
				return this._PurchaseMagazineId;
			}
			set
			{
				if ((this._PurchaseMagazineId != value))
				{
					this.OnPurchaseMagazineIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseMagazineId = value;
					this.SendPropertyChanged("PurchaseMagazineId");
					this.OnPurchaseMagazineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineId", DbType="Int NOT NULL")]
		public int MagazineId
		{
			get
			{
				return this._MagazineId;
			}
			set
			{
				if ((this._MagazineId != value))
				{
					if (this._Magazine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagazineIdChanging(value);
					this.SendPropertyChanging();
					this._MagazineId = value;
					this.SendPropertyChanged("MagazineId");
					this.OnMagazineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicDate", DbType="Date NOT NULL")]
		public System.DateTime PublicDate
		{
			get
			{
				return this._PublicDate;
			}
			set
			{
				if ((this._PublicDate != value))
				{
					this.OnPublicDateChanging(value);
					this.SendPropertyChanging();
					this._PublicDate = value;
					this.SendPropertyChanged("PublicDate");
					this.OnPublicDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceiveDate
		{
			get
			{
				return this._ReceiveDate;
			}
			set
			{
				if ((this._ReceiveDate != value))
				{
					this.OnReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveDate = value;
					this.SendPropertyChanged("ReceiveDate");
					this.OnReceiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL")]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveSource", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ReceiveSource
		{
			get
			{
				return this._ReceiveSource;
			}
			set
			{
				if ((this._ReceiveSource != value))
				{
					this.OnReceiveSourceChanging(value);
					this.SendPropertyChanging();
					this._ReceiveSource = value;
					this.SendPropertyChanged("ReceiveSource");
					this.OnReceiveSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_PurchaseMagazine", Storage="_Language", ThisKey="LanguageId", OtherKey="LanguageId", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.PurchaseMagazines.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.PurchaseMagazines.Add(this);
						this._LanguageId = value.LanguageId;
					}
					else
					{
						this._LanguageId = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_PurchaseMagazine", Storage="_Magazine", ThisKey="MagazineId", OtherKey="MagazineId", IsForeignKey=true)]
		public Magazine Magazine
		{
			get
			{
				return this._Magazine.Entity;
			}
			set
			{
				Magazine previousValue = this._Magazine.Entity;
				if (((previousValue != value) 
							|| (this._Magazine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magazine.Entity = null;
						previousValue.PurchaseMagazines.Remove(this);
					}
					this._Magazine.Entity = value;
					if ((value != null))
					{
						value.PurchaseMagazines.Add(this);
						this._MagazineId = value.MagazineId;
					}
					else
					{
						this._MagazineId = default(int);
					}
					this.SendPropertyChanged("Magazine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseMagazine", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PurchaseMagazines.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PurchaseMagazines.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseMagazine1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PurchaseMagazines1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PurchaseMagazines1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseNewsPaper")]
	public partial class PurchaseNewsPaper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseNewsPaperId;
		
		private int _NewsPaperId;
		
		private System.DateTime _PurchaseDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<PurchaseNewsPaper> _PurchaseNewsPaper2;
		
		private EntityRef<NewsPaper> _NewsPaper;
		
		private EntityRef<PurchaseNewsPaper> _PurchaseNewsPaper1;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseNewsPaperIdChanging(int value);
    partial void OnPurchaseNewsPaperIdChanged();
    partial void OnNewsPaperIdChanging(int value);
    partial void OnNewsPaperIdChanged();
    partial void OnPurchaseDateChanging(System.DateTime value);
    partial void OnPurchaseDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public PurchaseNewsPaper()
		{
			this._PurchaseNewsPaper2 = default(EntityRef<PurchaseNewsPaper>);
			this._NewsPaper = default(EntityRef<NewsPaper>);
			this._PurchaseNewsPaper1 = default(EntityRef<PurchaseNewsPaper>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNewsPaperId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseNewsPaperId
		{
			get
			{
				return this._PurchaseNewsPaperId;
			}
			set
			{
				if ((this._PurchaseNewsPaperId != value))
				{
					if (this._PurchaseNewsPaper1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseNewsPaperIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNewsPaperId = value;
					this.SendPropertyChanged("PurchaseNewsPaperId");
					this.OnPurchaseNewsPaperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsPaperId", DbType="Int NOT NULL")]
		public int NewsPaperId
		{
			get
			{
				return this._NewsPaperId;
			}
			set
			{
				if ((this._NewsPaperId != value))
				{
					if (this._NewsPaper.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewsPaperIdChanging(value);
					this.SendPropertyChanging();
					this._NewsPaperId = value;
					this.SendPropertyChanged("NewsPaperId");
					this.OnNewsPaperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseNewsPaper_PurchaseNewsPaper", Storage="_PurchaseNewsPaper2", ThisKey="PurchaseNewsPaperId", OtherKey="PurchaseNewsPaperId", IsUnique=true, IsForeignKey=false)]
		public PurchaseNewsPaper PurchaseNewsPaper2
		{
			get
			{
				return this._PurchaseNewsPaper2.Entity;
			}
			set
			{
				PurchaseNewsPaper previousValue = this._PurchaseNewsPaper2.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseNewsPaper2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseNewsPaper2.Entity = null;
						previousValue.PurchaseNewsPaper1 = null;
					}
					this._PurchaseNewsPaper2.Entity = value;
					if ((value != null))
					{
						value.PurchaseNewsPaper1 = this;
					}
					this.SendPropertyChanged("PurchaseNewsPaper2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsPaper_PurchaseNewsPaper", Storage="_NewsPaper", ThisKey="NewsPaperId", OtherKey="NewsPaperId", IsForeignKey=true)]
		public NewsPaper NewsPaper
		{
			get
			{
				return this._NewsPaper.Entity;
			}
			set
			{
				NewsPaper previousValue = this._NewsPaper.Entity;
				if (((previousValue != value) 
							|| (this._NewsPaper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NewsPaper.Entity = null;
						previousValue.PurchaseNewsPapers.Remove(this);
					}
					this._NewsPaper.Entity = value;
					if ((value != null))
					{
						value.PurchaseNewsPapers.Add(this);
						this._NewsPaperId = value.NewsPaperId;
					}
					else
					{
						this._NewsPaperId = default(int);
					}
					this.SendPropertyChanged("NewsPaper");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseNewsPaper_PurchaseNewsPaper", Storage="_PurchaseNewsPaper1", ThisKey="PurchaseNewsPaperId", OtherKey="PurchaseNewsPaperId", IsForeignKey=true)]
		public PurchaseNewsPaper PurchaseNewsPaper1
		{
			get
			{
				return this._PurchaseNewsPaper1.Entity;
			}
			set
			{
				PurchaseNewsPaper previousValue = this._PurchaseNewsPaper1.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseNewsPaper1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseNewsPaper1.Entity = null;
						previousValue.PurchaseNewsPaper2 = null;
					}
					this._PurchaseNewsPaper1.Entity = value;
					if ((value != null))
					{
						value.PurchaseNewsPaper2 = this;
						this._PurchaseNewsPaperId = value.PurchaseNewsPaperId;
					}
					else
					{
						this._PurchaseNewsPaperId = default(int);
					}
					this.SendPropertyChanged("PurchaseNewsPaper1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseNewsPaper", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.PurchaseNewsPapers.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.PurchaseNewsPapers.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseNewsPaper1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.PurchaseNewsPapers1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.PurchaseNewsPapers1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rack")]
	public partial class Rack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RackId;
		
		private string _RackNo;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private byte _Status;
		
		private EntitySet<BookRack> _BookRacks;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRackIdChanging(int value);
    partial void OnRackIdChanged();
    partial void OnRackNoChanging(string value);
    partial void OnRackNoChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Rack()
		{
			this._BookRacks = new EntitySet<BookRack>(new Action<BookRack>(this.attach_BookRacks), new Action<BookRack>(this.detach_BookRacks));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RackId
		{
			get
			{
				return this._RackId;
			}
			set
			{
				if ((this._RackId != value))
				{
					this.OnRackIdChanging(value);
					this.SendPropertyChanging();
					this._RackId = value;
					this.SendPropertyChanged("RackId");
					this.OnRackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RackNo
		{
			get
			{
				return this._RackNo;
			}
			set
			{
				if ((this._RackNo != value))
				{
					this.OnRackNoChanging(value);
					this.SendPropertyChanging();
					this._RackNo = value;
					this.SendPropertyChanged("RackNo");
					this.OnRackNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rack_BookRack", Storage="_BookRacks", ThisKey="RackId", OtherKey="RackId")]
		public EntitySet<BookRack> BookRacks
		{
			get
			{
				return this._BookRacks;
			}
			set
			{
				this._BookRacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Rack", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Racks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Racks.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Rack = this;
		}
		
		private void detach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Rack = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistrationId;
		
		private int _RegistrationFormId;
		
		private int _SessionId;
		
		private System.Nullable<int> _ClassId;
		
		private System.Nullable<int> _PupilAdmissionIdd;
		
		private string _RegistrationNo;
		
		private System.DateTime _RegistrationDate;
		
		private string _PupilName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private byte _Gender;
		
		private string _FatherName;
		
		private string _FatherOccupation;
		
		private string _MotherName;
		
		private string _MotherOccupation;
		
		private System.Nullable<decimal> _FamilyAnnualIncome;
		
		private string _GuardianMobileNo;
		
		private string _CorrespondenceAddress;
		
		private System.Nullable<int> _CorrespondenceCityId;
		
		private string _CorrespondencePinCode;
		
		private string _PermanentAddress;
		
		private System.Nullable<int> _PermanentCityId;
		
		private string _PermanentPinCode;
		
		private System.Nullable<byte> _Category;
		
		private System.Nullable<byte> _BloodGroup;
		
		private System.Nullable<byte> _Religion;
		
		private System.Nullable<byte> _Nationality;
		
		private string _MobileNo;
		
		private string _AlternateNo;
		
		private string _Email;
		
		private string _AadhaarNo;
		
		private string _PreviousSchoolName;
		
		private string _PreviousSchoolBoard;
		
		private string _PreviousSchoolMedium;
		
		private string _PreviousSchoolClass;
		
		private string _StudentSingnature;
		
		private string _StudentPhoto;
		
		private string _FatherPhoto;
		
		private string _MotherPhoto;
		
		private bool _IsSameSchool;
		
		private byte _RegistrationStatus;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<FeePayment> _FeePayments;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<RegistrationForm> _RegistrationForm;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistrationIdChanging(int value);
    partial void OnRegistrationIdChanged();
    partial void OnRegistrationFormIdChanging(int value);
    partial void OnRegistrationFormIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(System.Nullable<int> value);
    partial void OnClassIdChanged();
    partial void OnPupilAdmissionIddChanging(System.Nullable<int> value);
    partial void OnPupilAdmissionIddChanged();
    partial void OnRegistrationNoChanging(string value);
    partial void OnRegistrationNoChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnPupilNameChanging(string value);
    partial void OnPupilNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnFatherOccupationChanging(string value);
    partial void OnFatherOccupationChanged();
    partial void OnMotherNameChanging(string value);
    partial void OnMotherNameChanged();
    partial void OnMotherOccupationChanging(string value);
    partial void OnMotherOccupationChanged();
    partial void OnFamilyAnnualIncomeChanging(System.Nullable<decimal> value);
    partial void OnFamilyAnnualIncomeChanged();
    partial void OnGuardianMobileNoChanging(string value);
    partial void OnGuardianMobileNoChanged();
    partial void OnCorrespondenceAddressChanging(string value);
    partial void OnCorrespondenceAddressChanged();
    partial void OnCorrespondenceCityIdChanging(System.Nullable<int> value);
    partial void OnCorrespondenceCityIdChanged();
    partial void OnCorrespondencePinCodeChanging(string value);
    partial void OnCorrespondencePinCodeChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnPermanentCityIdChanging(System.Nullable<int> value);
    partial void OnPermanentCityIdChanged();
    partial void OnPermanentPinCodeChanging(string value);
    partial void OnPermanentPinCodeChanged();
    partial void OnCategoryChanging(System.Nullable<byte> value);
    partial void OnCategoryChanged();
    partial void OnBloodGroupChanging(System.Nullable<byte> value);
    partial void OnBloodGroupChanged();
    partial void OnReligionChanging(System.Nullable<byte> value);
    partial void OnReligionChanged();
    partial void OnNationalityChanging(System.Nullable<byte> value);
    partial void OnNationalityChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAlternateNoChanging(string value);
    partial void OnAlternateNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAadhaarNoChanging(string value);
    partial void OnAadhaarNoChanged();
    partial void OnPreviousSchoolNameChanging(string value);
    partial void OnPreviousSchoolNameChanged();
    partial void OnPreviousSchoolBoardChanging(string value);
    partial void OnPreviousSchoolBoardChanged();
    partial void OnPreviousSchoolMediumChanging(string value);
    partial void OnPreviousSchoolMediumChanged();
    partial void OnPreviousSchoolClassChanging(string value);
    partial void OnPreviousSchoolClassChanged();
    partial void OnStudentSingnatureChanging(string value);
    partial void OnStudentSingnatureChanged();
    partial void OnStudentPhotoChanging(string value);
    partial void OnStudentPhotoChanged();
    partial void OnFatherPhotoChanging(string value);
    partial void OnFatherPhotoChanged();
    partial void OnMotherPhotoChanging(string value);
    partial void OnMotherPhotoChanged();
    partial void OnIsSameSchoolChanging(bool value);
    partial void OnIsSameSchoolChanged();
    partial void OnRegistrationStatusChanging(byte value);
    partial void OnRegistrationStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Registration()
		{
			this._FeePayments = new EntitySet<FeePayment>(new Action<FeePayment>(this.attach_FeePayments), new Action<FeePayment>(this.detach_FeePayments));
			this._Class = default(EntityRef<Class>);
			this._RegistrationForm = default(EntityRef<RegistrationForm>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegistrationId
		{
			get
			{
				return this._RegistrationId;
			}
			set
			{
				if ((this._RegistrationId != value))
				{
					this.OnRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationId = value;
					this.SendPropertyChanged("RegistrationId");
					this.OnRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationFormId", DbType="Int NOT NULL")]
		public int RegistrationFormId
		{
			get
			{
				return this._RegistrationFormId;
			}
			set
			{
				if ((this._RegistrationFormId != value))
				{
					if (this._RegistrationForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationFormIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationFormId = value;
					this.SendPropertyChanged("RegistrationFormId");
					this.OnRegistrationFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int")]
		public System.Nullable<int> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilAdmissionIdd", DbType="Int")]
		public System.Nullable<int> PupilAdmissionIdd
		{
			get
			{
				return this._PupilAdmissionIdd;
			}
			set
			{
				if ((this._PupilAdmissionIdd != value))
				{
					this.OnPupilAdmissionIddChanging(value);
					this.SendPropertyChanging();
					this._PupilAdmissionIdd = value;
					this.SendPropertyChanged("PupilAdmissionIdd");
					this.OnPupilAdmissionIddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PupilName
		{
			get
			{
				return this._PupilName;
			}
			set
			{
				if ((this._PupilName != value))
				{
					this.OnPupilNameChanging(value);
					this.SendPropertyChanging();
					this._PupilName = value;
					this.SendPropertyChanged("PupilName");
					this.OnPupilNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(150)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherOccupation", DbType="NVarChar(50)")]
		public string FatherOccupation
		{
			get
			{
				return this._FatherOccupation;
			}
			set
			{
				if ((this._FatherOccupation != value))
				{
					this.OnFatherOccupationChanging(value);
					this.SendPropertyChanging();
					this._FatherOccupation = value;
					this.SendPropertyChanged("FatherOccupation");
					this.OnFatherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherName", DbType="NVarChar(150)")]
		public string MotherName
		{
			get
			{
				return this._MotherName;
			}
			set
			{
				if ((this._MotherName != value))
				{
					this.OnMotherNameChanging(value);
					this.SendPropertyChanging();
					this._MotherName = value;
					this.SendPropertyChanged("MotherName");
					this.OnMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherOccupation", DbType="NVarChar(50)")]
		public string MotherOccupation
		{
			get
			{
				return this._MotherOccupation;
			}
			set
			{
				if ((this._MotherOccupation != value))
				{
					this.OnMotherOccupationChanging(value);
					this.SendPropertyChanging();
					this._MotherOccupation = value;
					this.SendPropertyChanged("MotherOccupation");
					this.OnMotherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyAnnualIncome", DbType="Money")]
		public System.Nullable<decimal> FamilyAnnualIncome
		{
			get
			{
				return this._FamilyAnnualIncome;
			}
			set
			{
				if ((this._FamilyAnnualIncome != value))
				{
					this.OnFamilyAnnualIncomeChanging(value);
					this.SendPropertyChanging();
					this._FamilyAnnualIncome = value;
					this.SendPropertyChanged("FamilyAnnualIncome");
					this.OnFamilyAnnualIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianMobileNo", DbType="NVarChar(50)")]
		public string GuardianMobileNo
		{
			get
			{
				return this._GuardianMobileNo;
			}
			set
			{
				if ((this._GuardianMobileNo != value))
				{
					this.OnGuardianMobileNoChanging(value);
					this.SendPropertyChanging();
					this._GuardianMobileNo = value;
					this.SendPropertyChanged("GuardianMobileNo");
					this.OnGuardianMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(550)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this.OnCorrespondenceAddressChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddress = value;
					this.SendPropertyChanged("CorrespondenceAddress");
					this.OnCorrespondenceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceCityId", DbType="Int")]
		public System.Nullable<int> CorrespondenceCityId
		{
			get
			{
				return this._CorrespondenceCityId;
			}
			set
			{
				if ((this._CorrespondenceCityId != value))
				{
					this.OnCorrespondenceCityIdChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceCityId = value;
					this.SendPropertyChanged("CorrespondenceCityId");
					this.OnCorrespondenceCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondencePinCode", DbType="NVarChar(6)")]
		public string CorrespondencePinCode
		{
			get
			{
				return this._CorrespondencePinCode;
			}
			set
			{
				if ((this._CorrespondencePinCode != value))
				{
					this.OnCorrespondencePinCodeChanging(value);
					this.SendPropertyChanging();
					this._CorrespondencePinCode = value;
					this.SendPropertyChanged("CorrespondencePinCode");
					this.OnCorrespondencePinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(550)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityId", DbType="Int")]
		public System.Nullable<int> PermanentCityId
		{
			get
			{
				return this._PermanentCityId;
			}
			set
			{
				if ((this._PermanentCityId != value))
				{
					this.OnPermanentCityIdChanging(value);
					this.SendPropertyChanging();
					this._PermanentCityId = value;
					this.SendPropertyChanged("PermanentCityId");
					this.OnPermanentCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentPinCode", DbType="NVarChar(6)")]
		public string PermanentPinCode
		{
			get
			{
				return this._PermanentPinCode;
			}
			set
			{
				if ((this._PermanentPinCode != value))
				{
					this.OnPermanentPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PermanentPinCode = value;
					this.SendPropertyChanged("PermanentPinCode");
					this.OnPermanentPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="TinyInt")]
		public System.Nullable<byte> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="TinyInt")]
		public System.Nullable<byte> BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this.OnBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._BloodGroup = value;
					this.SendPropertyChanged("BloodGroup");
					this.OnBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="TinyInt")]
		public System.Nullable<byte> Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="TinyInt")]
		public System.Nullable<byte> Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateNo", DbType="NVarChar(50)")]
		public string AlternateNo
		{
			get
			{
				return this._AlternateNo;
			}
			set
			{
				if ((this._AlternateNo != value))
				{
					this.OnAlternateNoChanging(value);
					this.SendPropertyChanging();
					this._AlternateNo = value;
					this.SendPropertyChanged("AlternateNo");
					this.OnAlternateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AadhaarNo", DbType="NVarChar(12)")]
		public string AadhaarNo
		{
			get
			{
				return this._AadhaarNo;
			}
			set
			{
				if ((this._AadhaarNo != value))
				{
					this.OnAadhaarNoChanging(value);
					this.SendPropertyChanging();
					this._AadhaarNo = value;
					this.SendPropertyChanged("AadhaarNo");
					this.OnAadhaarNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolName", DbType="NVarChar(150)")]
		public string PreviousSchoolName
		{
			get
			{
				return this._PreviousSchoolName;
			}
			set
			{
				if ((this._PreviousSchoolName != value))
				{
					this.OnPreviousSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolName = value;
					this.SendPropertyChanged("PreviousSchoolName");
					this.OnPreviousSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolBoard", DbType="NVarChar(150)")]
		public string PreviousSchoolBoard
		{
			get
			{
				return this._PreviousSchoolBoard;
			}
			set
			{
				if ((this._PreviousSchoolBoard != value))
				{
					this.OnPreviousSchoolBoardChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolBoard = value;
					this.SendPropertyChanged("PreviousSchoolBoard");
					this.OnPreviousSchoolBoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolMedium", DbType="NVarChar(50)")]
		public string PreviousSchoolMedium
		{
			get
			{
				return this._PreviousSchoolMedium;
			}
			set
			{
				if ((this._PreviousSchoolMedium != value))
				{
					this.OnPreviousSchoolMediumChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolMedium = value;
					this.SendPropertyChanged("PreviousSchoolMedium");
					this.OnPreviousSchoolMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousSchoolClass", DbType="NVarChar(50)")]
		public string PreviousSchoolClass
		{
			get
			{
				return this._PreviousSchoolClass;
			}
			set
			{
				if ((this._PreviousSchoolClass != value))
				{
					this.OnPreviousSchoolClassChanging(value);
					this.SendPropertyChanging();
					this._PreviousSchoolClass = value;
					this.SendPropertyChanged("PreviousSchoolClass");
					this.OnPreviousSchoolClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSingnature", DbType="NVarChar(50)")]
		public string StudentSingnature
		{
			get
			{
				return this._StudentSingnature;
			}
			set
			{
				if ((this._StudentSingnature != value))
				{
					this.OnStudentSingnatureChanging(value);
					this.SendPropertyChanging();
					this._StudentSingnature = value;
					this.SendPropertyChanged("StudentSingnature");
					this.OnStudentSingnatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhoto", DbType="NVarChar(150)")]
		public string StudentPhoto
		{
			get
			{
				return this._StudentPhoto;
			}
			set
			{
				if ((this._StudentPhoto != value))
				{
					this.OnStudentPhotoChanging(value);
					this.SendPropertyChanging();
					this._StudentPhoto = value;
					this.SendPropertyChanged("StudentPhoto");
					this.OnStudentPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherPhoto", DbType="NVarChar(150)")]
		public string FatherPhoto
		{
			get
			{
				return this._FatherPhoto;
			}
			set
			{
				if ((this._FatherPhoto != value))
				{
					this.OnFatherPhotoChanging(value);
					this.SendPropertyChanging();
					this._FatherPhoto = value;
					this.SendPropertyChanged("FatherPhoto");
					this.OnFatherPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherPhoto", DbType="NVarChar(50)")]
		public string MotherPhoto
		{
			get
			{
				return this._MotherPhoto;
			}
			set
			{
				if ((this._MotherPhoto != value))
				{
					this.OnMotherPhotoChanging(value);
					this.SendPropertyChanging();
					this._MotherPhoto = value;
					this.SendPropertyChanged("MotherPhoto");
					this.OnMotherPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSameSchool", DbType="Bit NOT NULL")]
		public bool IsSameSchool
		{
			get
			{
				return this._IsSameSchool;
			}
			set
			{
				if ((this._IsSameSchool != value))
				{
					this.OnIsSameSchoolChanging(value);
					this.SendPropertyChanging();
					this._IsSameSchool = value;
					this.SendPropertyChanged("IsSameSchool");
					this.OnIsSameSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationStatus", DbType="TinyInt NOT NULL")]
		public byte RegistrationStatus
		{
			get
			{
				return this._RegistrationStatus;
			}
			set
			{
				if ((this._RegistrationStatus != value))
				{
					this.OnRegistrationStatusChanging(value);
					this.SendPropertyChanging();
					this._RegistrationStatus = value;
					this.SendPropertyChanged("RegistrationStatus");
					this.OnRegistrationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_FeePayment", Storage="_FeePayments", ThisKey="RegistrationId", OtherKey="RegistrationId")]
		public EntitySet<FeePayment> FeePayments
		{
			get
			{
				return this._FeePayments;
			}
			set
			{
				this._FeePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Registration", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationForm_Registration", Storage="_RegistrationForm", ThisKey="RegistrationFormId", OtherKey="RegistrationFormId", IsForeignKey=true)]
		public RegistrationForm RegistrationForm
		{
			get
			{
				return this._RegistrationForm.Entity;
			}
			set
			{
				RegistrationForm previousValue = this._RegistrationForm.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationForm.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._RegistrationForm.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._RegistrationFormId = value.RegistrationFormId;
					}
					else
					{
						this._RegistrationFormId = default(int);
					}
					this.SendPropertyChanged("RegistrationForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Registration", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Registration", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Registration1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Registrations1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Registrations1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.Registration = this;
		}
		
		private void detach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.Registration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistrationForm")]
	public partial class RegistrationForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistrationFormId;
		
		private int _SessionId;
		
		private int _ClassId;
		
		private string _Title;
		
		private string _Description;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _FromDOB;
		
		private System.Nullable<System.DateTime> _ToDOB;
		
		private bool _StudentSingnatureRequired;
		
		private bool _StudentPhotoRequired;
		
		private bool _FatherPhotoRequired;
		
		private bool _MotherPhotoRequired;
		
		private byte _FormFor;
		
		private string _ThumbnailPhoto;
		
		private byte _Status;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<FeeRegistration> _FeeRegistrations;
		
		private EntitySet<Registration> _Registrations;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Session> _Session;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistrationFormIdChanging(int value);
    partial void OnRegistrationFormIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFromDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDOBChanged();
    partial void OnToDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnToDOBChanged();
    partial void OnStudentSingnatureRequiredChanging(bool value);
    partial void OnStudentSingnatureRequiredChanged();
    partial void OnStudentPhotoRequiredChanging(bool value);
    partial void OnStudentPhotoRequiredChanged();
    partial void OnFatherPhotoRequiredChanging(bool value);
    partial void OnFatherPhotoRequiredChanged();
    partial void OnMotherPhotoRequiredChanging(bool value);
    partial void OnMotherPhotoRequiredChanged();
    partial void OnFormForChanging(byte value);
    partial void OnFormForChanged();
    partial void OnThumbnailPhotoChanging(string value);
    partial void OnThumbnailPhotoChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public RegistrationForm()
		{
			this._FeeRegistrations = new EntitySet<FeeRegistration>(new Action<FeeRegistration>(this.attach_FeeRegistrations), new Action<FeeRegistration>(this.detach_FeeRegistrations));
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._Class = default(EntityRef<Class>);
			this._Session = default(EntityRef<Session>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationFormId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegistrationFormId
		{
			get
			{
				return this._RegistrationFormId;
			}
			set
			{
				if ((this._RegistrationFormId != value))
				{
					this.OnRegistrationFormIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationFormId = value;
					this.SendPropertyChanged("RegistrationFormId");
					this.OnRegistrationFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDOB", DbType="Date")]
		public System.Nullable<System.DateTime> FromDOB
		{
			get
			{
				return this._FromDOB;
			}
			set
			{
				if ((this._FromDOB != value))
				{
					this.OnFromDOBChanging(value);
					this.SendPropertyChanging();
					this._FromDOB = value;
					this.SendPropertyChanged("FromDOB");
					this.OnFromDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDOB", DbType="Date")]
		public System.Nullable<System.DateTime> ToDOB
		{
			get
			{
				return this._ToDOB;
			}
			set
			{
				if ((this._ToDOB != value))
				{
					this.OnToDOBChanging(value);
					this.SendPropertyChanging();
					this._ToDOB = value;
					this.SendPropertyChanged("ToDOB");
					this.OnToDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSingnatureRequired", DbType="Bit NOT NULL")]
		public bool StudentSingnatureRequired
		{
			get
			{
				return this._StudentSingnatureRequired;
			}
			set
			{
				if ((this._StudentSingnatureRequired != value))
				{
					this.OnStudentSingnatureRequiredChanging(value);
					this.SendPropertyChanging();
					this._StudentSingnatureRequired = value;
					this.SendPropertyChanged("StudentSingnatureRequired");
					this.OnStudentSingnatureRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhotoRequired", DbType="Bit NOT NULL")]
		public bool StudentPhotoRequired
		{
			get
			{
				return this._StudentPhotoRequired;
			}
			set
			{
				if ((this._StudentPhotoRequired != value))
				{
					this.OnStudentPhotoRequiredChanging(value);
					this.SendPropertyChanging();
					this._StudentPhotoRequired = value;
					this.SendPropertyChanged("StudentPhotoRequired");
					this.OnStudentPhotoRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherPhotoRequired", DbType="Bit NOT NULL")]
		public bool FatherPhotoRequired
		{
			get
			{
				return this._FatherPhotoRequired;
			}
			set
			{
				if ((this._FatherPhotoRequired != value))
				{
					this.OnFatherPhotoRequiredChanging(value);
					this.SendPropertyChanging();
					this._FatherPhotoRequired = value;
					this.SendPropertyChanged("FatherPhotoRequired");
					this.OnFatherPhotoRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherPhotoRequired", DbType="Bit NOT NULL")]
		public bool MotherPhotoRequired
		{
			get
			{
				return this._MotherPhotoRequired;
			}
			set
			{
				if ((this._MotherPhotoRequired != value))
				{
					this.OnMotherPhotoRequiredChanging(value);
					this.SendPropertyChanging();
					this._MotherPhotoRequired = value;
					this.SendPropertyChanged("MotherPhotoRequired");
					this.OnMotherPhotoRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFor", DbType="TinyInt NOT NULL")]
		public byte FormFor
		{
			get
			{
				return this._FormFor;
			}
			set
			{
				if ((this._FormFor != value))
				{
					this.OnFormForChanging(value);
					this.SendPropertyChanging();
					this._FormFor = value;
					this.SendPropertyChanged("FormFor");
					this.OnFormForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailPhoto", DbType="NVarChar(250)")]
		public string ThumbnailPhoto
		{
			get
			{
				return this._ThumbnailPhoto;
			}
			set
			{
				if ((this._ThumbnailPhoto != value))
				{
					this.OnThumbnailPhotoChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailPhoto = value;
					this.SendPropertyChanged("ThumbnailPhoto");
					this.OnThumbnailPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationForm_FeeRegistration", Storage="_FeeRegistrations", ThisKey="RegistrationFormId", OtherKey="RegistrationFormId")]
		public EntitySet<FeeRegistration> FeeRegistrations
		{
			get
			{
				return this._FeeRegistrations;
			}
			set
			{
				this._FeeRegistrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationForm_Registration", Storage="_Registrations", ThisKey="RegistrationFormId", OtherKey="RegistrationFormId")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_RegistrationForm", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.RegistrationForms.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.RegistrationForms.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_RegistrationForm", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.RegistrationForms.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.RegistrationForms.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RegistrationForm", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.RegistrationForms.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.RegistrationForms.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RegistrationForm1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.RegistrationForms1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.RegistrationForms1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationForm = this;
		}
		
		private void detach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationForm = null;
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationForm = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleTitle;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleTitleChanging(string value);
    partial void OnRoleTitleChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Role()
		{
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._StaffLoginRoles = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles), new Action<StaffLoginRole>(this.detach_StaffLoginRoles));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RoleTitle
		{
			get
			{
				return this._RoleTitle;
			}
			set
			{
				if ((this._RoleTitle != value))
				{
					this.OnRoleTitleChanging(value);
					this.SendPropertyChanging();
					this._RoleTitle = value;
					this.SendPropertyChanged("RoleTitle");
					this.OnRoleTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_RoleMenus", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_StaffLoginRole", Storage="_StaffLoginRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this._StaffLoginRoles;
			}
			set
			{
				this._StaffLoginRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Role", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMenu")]
	public partial class RoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleMenuId;
		
		private int _RoleId;
		
		private int _MenuId;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanCreate;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleMenuIdChanging(int value);
    partial void OnRoleMenuIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanCreateChanging(bool value);
    partial void OnCanCreateChanged();
    #endregion
		
		public RoleMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._Role = default(EntityRef<Role>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleMenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleMenuId
		{
			get
			{
				return this._RoleMenuId;
			}
			set
			{
				if ((this._RoleMenuId != value))
				{
					this.OnRoleMenuIdChanging(value);
					this.SendPropertyChanging();
					this._RoleMenuId = value;
					this.SendPropertyChanged("RoleMenuId");
					this.OnRoleMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreate", DbType="Bit NOT NULL")]
		public bool CanCreate
		{
			get
			{
				return this._CanCreate;
			}
			set
			{
				if ((this._CanCreate != value))
				{
					this.OnCanCreateChanging(value);
					this.SendPropertyChanging();
					this._CanCreate = value;
					this.SendPropertyChanged("CanCreate");
					this.OnCanCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RoleMenu", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchoolId;
		
		private string _SchoolName;
		
		private string _ShortName;
		
		private string _Location;
		
		private string _FullAddress;
		
		private string _SchoolSlogan;
		
		private string _AffiliationDetail;
		
		private int _AffiliationNo;
		
		private string _SchoolCode;
		
		private string _WebsiteUrl;
		
		private string _Email;
		
		private string _MobileNo;
		
		private string _AlternateNo;
		
		private string _LogoPng;
		
		private string _LogoJpg;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private byte _Status;
		
		private EntitySet<StaffLogin> _StaffLogins;
		
		private EntitySet<TransportBatch> _TransportBatches;
		
		private EntitySet<TransportDuration> _TransportDurations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnFullAddressChanging(string value);
    partial void OnFullAddressChanged();
    partial void OnSchoolSloganChanging(string value);
    partial void OnSchoolSloganChanged();
    partial void OnAffiliationDetailChanging(string value);
    partial void OnAffiliationDetailChanged();
    partial void OnAffiliationNoChanging(int value);
    partial void OnAffiliationNoChanged();
    partial void OnSchoolCodeChanging(string value);
    partial void OnSchoolCodeChanged();
    partial void OnWebsiteUrlChanging(string value);
    partial void OnWebsiteUrlChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAlternateNoChanging(string value);
    partial void OnAlternateNoChanged();
    partial void OnLogoPngChanging(string value);
    partial void OnLogoPngChanged();
    partial void OnLogoJpgChanging(string value);
    partial void OnLogoJpgChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public School()
		{
			this._StaffLogins = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins), new Action<StaffLogin>(this.detach_StaffLogins));
			this._TransportBatches = new EntitySet<TransportBatch>(new Action<TransportBatch>(this.attach_TransportBatches), new Action<TransportBatch>(this.detach_TransportBatches));
			this._TransportDurations = new EntitySet<TransportDuration>(new Action<TransportDuration>(this.attach_TransportDurations), new Action<TransportDuration>(this.detach_TransportDurations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullAddress
		{
			get
			{
				return this._FullAddress;
			}
			set
			{
				if ((this._FullAddress != value))
				{
					this.OnFullAddressChanging(value);
					this.SendPropertyChanging();
					this._FullAddress = value;
					this.SendPropertyChanged("FullAddress");
					this.OnFullAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolSlogan", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SchoolSlogan
		{
			get
			{
				return this._SchoolSlogan;
			}
			set
			{
				if ((this._SchoolSlogan != value))
				{
					this.OnSchoolSloganChanging(value);
					this.SendPropertyChanging();
					this._SchoolSlogan = value;
					this.SendPropertyChanged("SchoolSlogan");
					this.OnSchoolSloganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliationDetail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AffiliationDetail
		{
			get
			{
				return this._AffiliationDetail;
			}
			set
			{
				if ((this._AffiliationDetail != value))
				{
					this.OnAffiliationDetailChanging(value);
					this.SendPropertyChanging();
					this._AffiliationDetail = value;
					this.SendPropertyChanged("AffiliationDetail");
					this.OnAffiliationDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliationNo", DbType="Int NOT NULL")]
		public int AffiliationNo
		{
			get
			{
				return this._AffiliationNo;
			}
			set
			{
				if ((this._AffiliationNo != value))
				{
					this.OnAffiliationNoChanging(value);
					this.SendPropertyChanging();
					this._AffiliationNo = value;
					this.SendPropertyChanged("AffiliationNo");
					this.OnAffiliationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SchoolCode
		{
			get
			{
				return this._SchoolCode;
			}
			set
			{
				if ((this._SchoolCode != value))
				{
					this.OnSchoolCodeChanging(value);
					this.SendPropertyChanging();
					this._SchoolCode = value;
					this.SendPropertyChanged("SchoolCode");
					this.OnSchoolCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WebsiteUrl
		{
			get
			{
				return this._WebsiteUrl;
			}
			set
			{
				if ((this._WebsiteUrl != value))
				{
					this.OnWebsiteUrlChanging(value);
					this.SendPropertyChanging();
					this._WebsiteUrl = value;
					this.SendPropertyChanged("WebsiteUrl");
					this.OnWebsiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateNo", DbType="NVarChar(20)")]
		public string AlternateNo
		{
			get
			{
				return this._AlternateNo;
			}
			set
			{
				if ((this._AlternateNo != value))
				{
					this.OnAlternateNoChanging(value);
					this.SendPropertyChanging();
					this._AlternateNo = value;
					this.SendPropertyChanged("AlternateNo");
					this.OnAlternateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPng", DbType="NVarChar(150)")]
		public string LogoPng
		{
			get
			{
				return this._LogoPng;
			}
			set
			{
				if ((this._LogoPng != value))
				{
					this.OnLogoPngChanging(value);
					this.SendPropertyChanging();
					this._LogoPng = value;
					this.SendPropertyChanged("LogoPng");
					this.OnLogoPngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoJpg", DbType="NVarChar(150)")]
		public string LogoJpg
		{
			get
			{
				return this._LogoJpg;
			}
			set
			{
				if ((this._LogoJpg != value))
				{
					this.OnLogoJpgChanging(value);
					this.SendPropertyChanging();
					this._LogoJpg = value;
					this.SendPropertyChanged("LogoJpg");
					this.OnLogoJpgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StaffLogin", Storage="_StaffLogins", ThisKey="SchoolId", OtherKey="SchoolId")]
		public EntitySet<StaffLogin> StaffLogins
		{
			get
			{
				return this._StaffLogins;
			}
			set
			{
				this._StaffLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TransportBatch", Storage="_TransportBatches", ThisKey="SchoolId", OtherKey="SchoolId")]
		public EntitySet<TransportBatch> TransportBatches
		{
			get
			{
				return this._TransportBatches;
			}
			set
			{
				this._TransportBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TransportDuration", Storage="_TransportDurations", ThisKey="SchoolId", OtherKey="SchoolId")]
		public EntitySet<TransportDuration> TransportDurations
		{
			get
			{
				return this._TransportDurations;
			}
			set
			{
				this._TransportDurations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_TransportBatches(TransportBatch entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_TransportBatches(TransportBatch entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_TransportDurations(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_TransportDurations(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Section")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SectionId;
		
		private int _ClassId;
		
		private string _SectionName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<ClassAttendance> _ClassAttendances;
		
		private EntitySet<PupilAdmission> _PupilAdmissions;
		
		private EntitySet<StaffClass> _StaffClasses;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Section()
		{
			this._ClassAttendances = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances), new Action<ClassAttendance>(this.detach_ClassAttendances));
			this._PupilAdmissions = new EntitySet<PupilAdmission>(new Action<PupilAdmission>(this.attach_PupilAdmissions), new Action<PupilAdmission>(this.detach_PupilAdmissions));
			this._StaffClasses = new EntitySet<StaffClass>(new Action<StaffClass>(this.attach_StaffClasses), new Action<StaffClass>(this.detach_StaffClasses));
			this._Class = default(EntityRef<Class>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_ClassAttendance", Storage="_ClassAttendances", ThisKey="SectionId", OtherKey="SectionId")]
		public EntitySet<ClassAttendance> ClassAttendances
		{
			get
			{
				return this._ClassAttendances;
			}
			set
			{
				this._ClassAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_PupilAdmission", Storage="_PupilAdmissions", ThisKey="SectionId", OtherKey="SectionId")]
		public EntitySet<PupilAdmission> PupilAdmissions
		{
			get
			{
				return this._PupilAdmissions;
			}
			set
			{
				this._PupilAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StaffClass", Storage="_StaffClasses", ThisKey="SectionId", OtherKey="SectionId")]
		public EntitySet<StaffClass> StaffClasses
		{
			get
			{
				return this._StaffClasses;
			}
			set
			{
				this._StaffClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Section", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Sections.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Sections.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Section", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Sections.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Sections.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SessionId;
		
		private string _SessionName;
		
		private System.DateTime _SessionStartDate;
		
		private System.DateTime _SessionEndDate;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<ClassAttendance> _ClassAttendances;
		
		private EntitySet<ClassExam> _ClassExams;
		
		private EntitySet<ClassFullMark> _ClassFullMarks;
		
		private EntitySet<ClassSubject> _ClassSubjects;
		
		private EntitySet<FeeAdmissionHead> _FeeAdmissionHeads;
		
		private EntitySet<FeeClassHead> _FeeClassHeads;
		
		private EntitySet<FeePayment> _FeePayments;
		
		private EntitySet<GradingSystem> _GradingSystems;
		
		private EntitySet<PupilAdmission> _PupilAdmissions;
		
		private EntitySet<Registration> _Registrations;
		
		private EntitySet<RegistrationForm> _RegistrationForms;
		
		private EntitySet<SubjectOption> _SubjectOptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSessionNameChanging(string value);
    partial void OnSessionNameChanged();
    partial void OnSessionStartDateChanging(System.DateTime value);
    partial void OnSessionStartDateChanged();
    partial void OnSessionEndDateChanging(System.DateTime value);
    partial void OnSessionEndDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Session()
		{
			this._ClassAttendances = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances), new Action<ClassAttendance>(this.detach_ClassAttendances));
			this._ClassExams = new EntitySet<ClassExam>(new Action<ClassExam>(this.attach_ClassExams), new Action<ClassExam>(this.detach_ClassExams));
			this._ClassFullMarks = new EntitySet<ClassFullMark>(new Action<ClassFullMark>(this.attach_ClassFullMarks), new Action<ClassFullMark>(this.detach_ClassFullMarks));
			this._ClassSubjects = new EntitySet<ClassSubject>(new Action<ClassSubject>(this.attach_ClassSubjects), new Action<ClassSubject>(this.detach_ClassSubjects));
			this._FeeAdmissionHeads = new EntitySet<FeeAdmissionHead>(new Action<FeeAdmissionHead>(this.attach_FeeAdmissionHeads), new Action<FeeAdmissionHead>(this.detach_FeeAdmissionHeads));
			this._FeeClassHeads = new EntitySet<FeeClassHead>(new Action<FeeClassHead>(this.attach_FeeClassHeads), new Action<FeeClassHead>(this.detach_FeeClassHeads));
			this._FeePayments = new EntitySet<FeePayment>(new Action<FeePayment>(this.attach_FeePayments), new Action<FeePayment>(this.detach_FeePayments));
			this._GradingSystems = new EntitySet<GradingSystem>(new Action<GradingSystem>(this.attach_GradingSystems), new Action<GradingSystem>(this.detach_GradingSystems));
			this._PupilAdmissions = new EntitySet<PupilAdmission>(new Action<PupilAdmission>(this.attach_PupilAdmissions), new Action<PupilAdmission>(this.detach_PupilAdmissions));
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._RegistrationForms = new EntitySet<RegistrationForm>(new Action<RegistrationForm>(this.attach_RegistrationForms), new Action<RegistrationForm>(this.detach_RegistrationForms));
			this._SubjectOptions = new EntitySet<SubjectOption>(new Action<SubjectOption>(this.attach_SubjectOptions), new Action<SubjectOption>(this.detach_SubjectOptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SessionName
		{
			get
			{
				return this._SessionName;
			}
			set
			{
				if ((this._SessionName != value))
				{
					this.OnSessionNameChanging(value);
					this.SendPropertyChanging();
					this._SessionName = value;
					this.SendPropertyChanged("SessionName");
					this.OnSessionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime SessionStartDate
		{
			get
			{
				return this._SessionStartDate;
			}
			set
			{
				if ((this._SessionStartDate != value))
				{
					this.OnSessionStartDateChanging(value);
					this.SendPropertyChanging();
					this._SessionStartDate = value;
					this.SendPropertyChanged("SessionStartDate");
					this.OnSessionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime SessionEndDate
		{
			get
			{
				return this._SessionEndDate;
			}
			set
			{
				if ((this._SessionEndDate != value))
				{
					this.OnSessionEndDateChanging(value);
					this.SendPropertyChanging();
					this._SessionEndDate = value;
					this.SendPropertyChanged("SessionEndDate");
					this.OnSessionEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassAttendance", Storage="_ClassAttendances", ThisKey="SessionId", OtherKey="SectionId")]
		public EntitySet<ClassAttendance> ClassAttendances
		{
			get
			{
				return this._ClassAttendances;
			}
			set
			{
				this._ClassAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassExam", Storage="_ClassExams", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<ClassExam> ClassExams
		{
			get
			{
				return this._ClassExams;
			}
			set
			{
				this._ClassExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassFullMark", Storage="_ClassFullMarks", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<ClassFullMark> ClassFullMarks
		{
			get
			{
				return this._ClassFullMarks;
			}
			set
			{
				this._ClassFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_ClassSubject", Storage="_ClassSubjects", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<ClassSubject> ClassSubjects
		{
			get
			{
				return this._ClassSubjects;
			}
			set
			{
				this._ClassSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeeAdmissionHead", Storage="_FeeAdmissionHeads", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<FeeAdmissionHead> FeeAdmissionHeads
		{
			get
			{
				return this._FeeAdmissionHeads;
			}
			set
			{
				this._FeeAdmissionHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeeClassHead", Storage="_FeeClassHeads", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this._FeeClassHeads;
			}
			set
			{
				this._FeeClassHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_FeePayment", Storage="_FeePayments", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<FeePayment> FeePayments
		{
			get
			{
				return this._FeePayments;
			}
			set
			{
				this._FeePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_GradingSystem", Storage="_GradingSystems", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<GradingSystem> GradingSystems
		{
			get
			{
				return this._GradingSystems;
			}
			set
			{
				this._GradingSystems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_PupilAdmission", Storage="_PupilAdmissions", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<PupilAdmission> PupilAdmissions
		{
			get
			{
				return this._PupilAdmissions;
			}
			set
			{
				this._PupilAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_Registration", Storage="_Registrations", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_RegistrationForm", Storage="_RegistrationForms", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<RegistrationForm> RegistrationForms
		{
			get
			{
				return this._RegistrationForms;
			}
			set
			{
				this._RegistrationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_SubjectOption", Storage="_SubjectOptions", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<SubjectOption> SubjectOptions
		{
			get
			{
				return this._SubjectOptions;
			}
			set
			{
				this._SubjectOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
		
		private void attach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.Session = this;
		}
		
		private void detach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.Session = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffId;
		
		private string _StaffName;
		
		private string _StaffCode;
		
		private int _DesignationId;
		
		private byte _StaffType;
		
		private string _FatherName;
		
		private string _MobileNo;
		
		private string _AlternateNo;
		
		private string _Email;
		
		private System.Nullable<byte> _Gender;
		
		private string _StaffPhoto;
		
		private string _Qualification;
		
		private string _FullAddress;
		
		private System.DateTime _JoinDate;
		
		private int _DepartmentId;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.DateTime _DOB;
		
		private EntitySet<BookIssue> _BookIssues;
		
		private EntitySet<StaffClass> _StaffClasses;
		
		private EntitySet<StaffLogin> _StaffLogins;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Designation> _Designation;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnStaffCodeChanging(string value);
    partial void OnStaffCodeChanged();
    partial void OnDesignationIdChanging(int value);
    partial void OnDesignationIdChanged();
    partial void OnStaffTypeChanging(byte value);
    partial void OnStaffTypeChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAlternateNoChanging(string value);
    partial void OnAlternateNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(System.Nullable<byte> value);
    partial void OnGenderChanged();
    partial void OnStaffPhotoChanging(string value);
    partial void OnStaffPhotoChanged();
    partial void OnQualificationChanging(string value);
    partial void OnQualificationChanged();
    partial void OnFullAddressChanging(string value);
    partial void OnFullAddressChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    #endregion
		
		public Staff()
		{
			this._BookIssues = new EntitySet<BookIssue>(new Action<BookIssue>(this.attach_BookIssues), new Action<BookIssue>(this.detach_BookIssues));
			this._StaffClasses = new EntitySet<StaffClass>(new Action<StaffClass>(this.attach_StaffClasses), new Action<StaffClass>(this.detach_StaffClasses));
			this._StaffLogins = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins), new Action<StaffLogin>(this.detach_StaffLogins));
			this._Department = default(EntityRef<Department>);
			this._Designation = default(EntityRef<Designation>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffCode
		{
			get
			{
				return this._StaffCode;
			}
			set
			{
				if ((this._StaffCode != value))
				{
					this.OnStaffCodeChanging(value);
					this.SendPropertyChanging();
					this._StaffCode = value;
					this.SendPropertyChanged("StaffCode");
					this.OnStaffCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", DbType="Int NOT NULL")]
		public int DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					if (this._Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffType", DbType="TinyInt NOT NULL")]
		public byte StaffType
		{
			get
			{
				return this._StaffType;
			}
			set
			{
				if ((this._StaffType != value))
				{
					this.OnStaffTypeChanging(value);
					this.SendPropertyChanging();
					this._StaffType = value;
					this.SendPropertyChanged("StaffType");
					this.OnStaffTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(255)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateNo", DbType="NVarChar(255)")]
		public string AlternateNo
		{
			get
			{
				return this._AlternateNo;
			}
			set
			{
				if ((this._AlternateNo != value))
				{
					this.OnAlternateNoChanging(value);
					this.SendPropertyChanging();
					this._AlternateNo = value;
					this.SendPropertyChanged("AlternateNo");
					this.OnAlternateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt")]
		public System.Nullable<byte> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffPhoto", DbType="NVarChar(150)")]
		public string StaffPhoto
		{
			get
			{
				return this._StaffPhoto;
			}
			set
			{
				if ((this._StaffPhoto != value))
				{
					this.OnStaffPhotoChanging(value);
					this.SendPropertyChanging();
					this._StaffPhoto = value;
					this.SendPropertyChanged("StaffPhoto");
					this.OnStaffPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualification", DbType="NVarChar(255)")]
		public string Qualification
		{
			get
			{
				return this._Qualification;
			}
			set
			{
				if ((this._Qualification != value))
				{
					this.OnQualificationChanging(value);
					this.SendPropertyChanging();
					this._Qualification = value;
					this.SendPropertyChanged("Qualification");
					this.OnQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullAddress", DbType="NVarChar(255)")]
		public string FullAddress
		{
			get
			{
				return this._FullAddress;
			}
			set
			{
				if ((this._FullAddress != value))
				{
					this.OnFullAddressChanging(value);
					this.SendPropertyChanging();
					this._FullAddress = value;
					this.SendPropertyChanged("FullAddress");
					this.OnFullAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_BookIssue", Storage="_BookIssues", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<BookIssue> BookIssues
		{
			get
			{
				return this._BookIssues;
			}
			set
			{
				this._BookIssues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffClass", Storage="_StaffClasses", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<StaffClass> StaffClasses
		{
			get
			{
				return this._StaffClasses;
			}
			set
			{
				this._StaffClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffLogin", Storage="_StaffLogins", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<StaffLogin> StaffLogins
		{
			get
			{
				return this._StaffLogins;
			}
			set
			{
				this._StaffLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Staff", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_Staff", Storage="_Designation", ThisKey="DesignationId", OtherKey="DesignationId", IsForeignKey=true)]
		public Designation Designation
		{
			get
			{
				return this._Designation.Entity;
			}
			set
			{
				Designation previousValue = this._Designation.Entity;
				if (((previousValue != value) 
							|| (this._Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Designation.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Designation.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._DesignationId = value.DesignationId;
					}
					else
					{
						this._DesignationId = default(int);
					}
					this.SendPropertyChanged("Designation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Staff", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffClass")]
	public partial class StaffClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffClassId;
		
		private int _StaffId;
		
		private int _SectionId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffClassIdChanging(int value);
    partial void OnStaffClassIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public StaffClass()
		{
			this._Section = default(EntityRef<Section>);
			this._Staff = default(EntityRef<Staff>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffClassId
		{
			get
			{
				return this._StaffClassId;
			}
			set
			{
				if ((this._StaffClassId != value))
				{
					this.OnStaffClassIdChanging(value);
					this.SendPropertyChanging();
					this._StaffClassId = value;
					this.SendPropertyChanged("StaffClassId");
					this.OnStaffClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int NOT NULL")]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StaffClass", Storage="_Section", ThisKey="SectionId", OtherKey="SectionId", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.StaffClasses.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.StaffClasses.Add(this);
						this._SectionId = value.SectionId;
					}
					else
					{
						this._SectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffClass", Storage="_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.StaffClasses.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.StaffClasses.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffClass", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.StaffClasses.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.StaffClasses.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLogin")]
	public partial class StaffLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffLoginId;
		
		private int _StaffId;
		
		private string _UserName;
		
		private string _LoginPassword;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private int _SchoolId;
		
		private byte _Status;
		
		private EntitySet<Book> _Books;
		
		private EntitySet<Book> _Books1;
		
		private EntitySet<VehicleType> _VehicleTypes;
		
		private EntitySet<BookDetail> _BookDetails;
		
		private EntitySet<BookDetail> _BookDetails1;
		
		private EntitySet<BookFine> _BookFines;
		
		private EntitySet<BookFine> _BookFines1;
		
		private EntitySet<BookIssue> _BookIssues;
		
		private EntitySet<BookIssue> _BookIssues1;
		
		private EntitySet<BookRack> _BookRacks;
		
		private EntitySet<BookType> _BookTypes;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<ClassAttendance> _ClassAttendances;
		
		private EntitySet<ClassAttendance> _ClassAttendances1;
		
		private EntitySet<ClassExam> _ClassExams;
		
		private EntitySet<ClassExam> _ClassExams1;
		
		private EntitySet<ClassFullMark> _ClassFullMarks;
		
		private EntitySet<ClassFullMark> _ClassFullMarks1;
		
		private EntitySet<ClassSubject> _ClassSubjects;
		
		private EntitySet<ClassSubject> _ClassSubjects1;
		
		private EntitySet<ExamFullMark> _ExamFullMarks;
		
		private EntitySet<ExamFullMark> _ExamFullMarks1;
		
		private EntitySet<FeeAdmission> _FeeAdmissions;
		
		private EntitySet<FeeAdmission> _FeeAdmissions1;
		
		private EntitySet<FeeAdmissionHead> _FeeAdmissionHeads;
		
		private EntitySet<FeeClass> _FeeClasses;
		
		private EntitySet<FeeClass> _FeeClasses1;
		
		private EntitySet<FeeClassHead> _FeeClassHeads;
		
		private EntitySet<FeePayment> _FeePayments;
		
		private EntitySet<FeePayment> _FeePayments1;
		
		private EntitySet<FeePaymentDetail> _FeePaymentDetails;
		
		private EntitySet<FeeRegistration> _FeeRegistrations;
		
		private EntitySet<FeeRegistration> _FeeRegistrations1;
		
		private EntitySet<FeeRegistrationHead> _FeeRegistrationHeads;
		
		private EntitySet<FeeRemark> _FeeRemarks;
		
		private EntitySet<FeeSubjectOption> _FeeSubjectOptions;
		
		private EntitySet<FeeSubjectOption> _FeeSubjectOptions1;
		
		private EntitySet<FeeSubjectOptionHead> _FeeSubjectOptionHeads;
		
		private EntitySet<FeeTransport> _FeeTransports;
		
		private EntitySet<FeeTransport> _FeeTransports1;
		
		private EntitySet<FeeTransportHead> _FeeTransportHeads;
		
		private EntitySet<GradeGroup> _GradeGroups;
		
		private EntitySet<GradingSystem> _GradingSystems;
		
		private EntitySet<GradingSystem> _GradingSystems1;
		
		private EntitySet<Head> _Heads;
		
		private EntitySet<Magazine> _Magazines;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<NewsPaper> _NewsPapers;
		
		private EntitySet<Page> _Pages;
		
		private EntitySet<PageGroup> _PageGroups;
		
		private EntitySet<Pupil> _Pupils;
		
		private EntitySet<Pupil> _Pupils1;
		
		private EntitySet<PupilAdmission> _PupilAdmissions;
		
		private EntitySet<PupilAdmission> _PupilAdmissions1;
		
		private EntitySet<PupilAttendance> _PupilAttendances;
		
		private EntitySet<PupilAttendance> _PupilAttendances1;
		
		private EntitySet<PupilCharge> _PupilCharges;
		
		private EntitySet<PupilCharge> _PupilCharges1;
		
		private EntitySet<PupilGrade> _PupilGrades;
		
		private EntitySet<PupilGrade> _PupilGrades1;
		
		private EntitySet<PupilMark> _PupilMarks;
		
		private EntitySet<PupilMark> _PupilMarks1;
		
		private EntitySet<PupilSubject> _PupilSubjects;
		
		private EntitySet<PupilSubject> _PupilSubjects1;
		
		private EntitySet<PupilWaiveOff> _PupilWaiveOffs;
		
		private EntitySet<PupilWaiveOff> _PupilWaiveOffs1;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntitySet<Purchase> _Purchases1;
		
		private EntitySet<PurchaseBook> _PurchaseBooks;
		
		private EntitySet<PurchaseBook> _PurchaseBooks1;
		
		private EntitySet<PurchaseMagazine> _PurchaseMagazines;
		
		private EntitySet<PurchaseMagazine> _PurchaseMagazines1;
		
		private EntitySet<PurchaseNewsPaper> _PurchaseNewsPapers;
		
		private EntitySet<PurchaseNewsPaper> _PurchaseNewsPapers1;
		
		private EntitySet<Rack> _Racks;
		
		private EntitySet<Registration> _Registrations;
		
		private EntitySet<Registration> _Registrations1;
		
		private EntitySet<RegistrationForm> _RegistrationForms;
		
		private EntitySet<RegistrationForm> _RegistrationForms1;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntitySet<Section> _Sections;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<StaffClass> _StaffClasses;
		
		private EntitySet<StaffLogin> _StaffLogins;
		
		private EntitySet<StaffLogin> _StaffLogins1;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles;
		
		private EntitySet<StaffLoginRole> _StaffLoginRoles1;
		
		private EntitySet<State> _States;
		
		private EntitySet<Subject> _Subjects;
		
		private EntitySet<Subject> _Subjects1;
		
		private EntitySet<SubjectFullMark> _SubjectFullMarks;
		
		private EntitySet<SubjectFullMark> _SubjectFullMarks1;
		
		private EntitySet<SubjectGradingScale> _SubjectGradingScales;
		
		private EntitySet<SubjectGradingScale> _SubjectGradingScales1;
		
		private EntitySet<SubjectId> _SubjectIds;
		
		private EntitySet<SubjectId> _SubjectIds1;
		
		private EntitySet<SubjectOption> _SubjectOptions;
		
		private EntitySet<SubjectOption> _SubjectOptions1;
		
		private EntitySet<Supplier> _Suppliers;
		
		private EntitySet<Supplier> _Suppliers1;
		
		private EntitySet<TransportBatch> _TransportBatches;
		
		private EntitySet<TransportDuration> _TransportDurations;
		
		private EntitySet<TransportDuration> _TransportDurations1;
		
		private EntitySet<TransportPupil> _TransportPupils;
		
		private EntitySet<TransportPupil> _TransportPupils1;
		
		private EntitySet<Vehicle> _Vehicles;
		
		private EntitySet<Vehicle> _Vehicles1;
		
		private EntityRef<School> _School;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<StaffLogin> _StaffLogin2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffLoginIdChanging(int value);
    partial void OnStaffLoginIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public StaffLogin()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			this._Books1 = new EntitySet<Book>(new Action<Book>(this.attach_Books1), new Action<Book>(this.detach_Books1));
			this._VehicleTypes = new EntitySet<VehicleType>(new Action<VehicleType>(this.attach_VehicleTypes), new Action<VehicleType>(this.detach_VehicleTypes));
			this._BookDetails = new EntitySet<BookDetail>(new Action<BookDetail>(this.attach_BookDetails), new Action<BookDetail>(this.detach_BookDetails));
			this._BookDetails1 = new EntitySet<BookDetail>(new Action<BookDetail>(this.attach_BookDetails1), new Action<BookDetail>(this.detach_BookDetails1));
			this._BookFines = new EntitySet<BookFine>(new Action<BookFine>(this.attach_BookFines), new Action<BookFine>(this.detach_BookFines));
			this._BookFines1 = new EntitySet<BookFine>(new Action<BookFine>(this.attach_BookFines1), new Action<BookFine>(this.detach_BookFines1));
			this._BookIssues = new EntitySet<BookIssue>(new Action<BookIssue>(this.attach_BookIssues), new Action<BookIssue>(this.detach_BookIssues));
			this._BookIssues1 = new EntitySet<BookIssue>(new Action<BookIssue>(this.attach_BookIssues1), new Action<BookIssue>(this.detach_BookIssues1));
			this._BookRacks = new EntitySet<BookRack>(new Action<BookRack>(this.attach_BookRacks), new Action<BookRack>(this.detach_BookRacks));
			this._BookTypes = new EntitySet<BookType>(new Action<BookType>(this.attach_BookTypes), new Action<BookType>(this.detach_BookTypes));
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._ClassAttendances = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances), new Action<ClassAttendance>(this.detach_ClassAttendances));
			this._ClassAttendances1 = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances1), new Action<ClassAttendance>(this.detach_ClassAttendances1));
			this._ClassExams = new EntitySet<ClassExam>(new Action<ClassExam>(this.attach_ClassExams), new Action<ClassExam>(this.detach_ClassExams));
			this._ClassExams1 = new EntitySet<ClassExam>(new Action<ClassExam>(this.attach_ClassExams1), new Action<ClassExam>(this.detach_ClassExams1));
			this._ClassFullMarks = new EntitySet<ClassFullMark>(new Action<ClassFullMark>(this.attach_ClassFullMarks), new Action<ClassFullMark>(this.detach_ClassFullMarks));
			this._ClassFullMarks1 = new EntitySet<ClassFullMark>(new Action<ClassFullMark>(this.attach_ClassFullMarks1), new Action<ClassFullMark>(this.detach_ClassFullMarks1));
			this._ClassSubjects = new EntitySet<ClassSubject>(new Action<ClassSubject>(this.attach_ClassSubjects), new Action<ClassSubject>(this.detach_ClassSubjects));
			this._ClassSubjects1 = new EntitySet<ClassSubject>(new Action<ClassSubject>(this.attach_ClassSubjects1), new Action<ClassSubject>(this.detach_ClassSubjects1));
			this._ExamFullMarks = new EntitySet<ExamFullMark>(new Action<ExamFullMark>(this.attach_ExamFullMarks), new Action<ExamFullMark>(this.detach_ExamFullMarks));
			this._ExamFullMarks1 = new EntitySet<ExamFullMark>(new Action<ExamFullMark>(this.attach_ExamFullMarks1), new Action<ExamFullMark>(this.detach_ExamFullMarks1));
			this._FeeAdmissions = new EntitySet<FeeAdmission>(new Action<FeeAdmission>(this.attach_FeeAdmissions), new Action<FeeAdmission>(this.detach_FeeAdmissions));
			this._FeeAdmissions1 = new EntitySet<FeeAdmission>(new Action<FeeAdmission>(this.attach_FeeAdmissions1), new Action<FeeAdmission>(this.detach_FeeAdmissions1));
			this._FeeAdmissionHeads = new EntitySet<FeeAdmissionHead>(new Action<FeeAdmissionHead>(this.attach_FeeAdmissionHeads), new Action<FeeAdmissionHead>(this.detach_FeeAdmissionHeads));
			this._FeeClasses = new EntitySet<FeeClass>(new Action<FeeClass>(this.attach_FeeClasses), new Action<FeeClass>(this.detach_FeeClasses));
			this._FeeClasses1 = new EntitySet<FeeClass>(new Action<FeeClass>(this.attach_FeeClasses1), new Action<FeeClass>(this.detach_FeeClasses1));
			this._FeeClassHeads = new EntitySet<FeeClassHead>(new Action<FeeClassHead>(this.attach_FeeClassHeads), new Action<FeeClassHead>(this.detach_FeeClassHeads));
			this._FeePayments = new EntitySet<FeePayment>(new Action<FeePayment>(this.attach_FeePayments), new Action<FeePayment>(this.detach_FeePayments));
			this._FeePayments1 = new EntitySet<FeePayment>(new Action<FeePayment>(this.attach_FeePayments1), new Action<FeePayment>(this.detach_FeePayments1));
			this._FeePaymentDetails = new EntitySet<FeePaymentDetail>(new Action<FeePaymentDetail>(this.attach_FeePaymentDetails), new Action<FeePaymentDetail>(this.detach_FeePaymentDetails));
			this._FeeRegistrations = new EntitySet<FeeRegistration>(new Action<FeeRegistration>(this.attach_FeeRegistrations), new Action<FeeRegistration>(this.detach_FeeRegistrations));
			this._FeeRegistrations1 = new EntitySet<FeeRegistration>(new Action<FeeRegistration>(this.attach_FeeRegistrations1), new Action<FeeRegistration>(this.detach_FeeRegistrations1));
			this._FeeRegistrationHeads = new EntitySet<FeeRegistrationHead>(new Action<FeeRegistrationHead>(this.attach_FeeRegistrationHeads), new Action<FeeRegistrationHead>(this.detach_FeeRegistrationHeads));
			this._FeeRemarks = new EntitySet<FeeRemark>(new Action<FeeRemark>(this.attach_FeeRemarks), new Action<FeeRemark>(this.detach_FeeRemarks));
			this._FeeSubjectOptions = new EntitySet<FeeSubjectOption>(new Action<FeeSubjectOption>(this.attach_FeeSubjectOptions), new Action<FeeSubjectOption>(this.detach_FeeSubjectOptions));
			this._FeeSubjectOptions1 = new EntitySet<FeeSubjectOption>(new Action<FeeSubjectOption>(this.attach_FeeSubjectOptions1), new Action<FeeSubjectOption>(this.detach_FeeSubjectOptions1));
			this._FeeSubjectOptionHeads = new EntitySet<FeeSubjectOptionHead>(new Action<FeeSubjectOptionHead>(this.attach_FeeSubjectOptionHeads), new Action<FeeSubjectOptionHead>(this.detach_FeeSubjectOptionHeads));
			this._FeeTransports = new EntitySet<FeeTransport>(new Action<FeeTransport>(this.attach_FeeTransports), new Action<FeeTransport>(this.detach_FeeTransports));
			this._FeeTransports1 = new EntitySet<FeeTransport>(new Action<FeeTransport>(this.attach_FeeTransports1), new Action<FeeTransport>(this.detach_FeeTransports1));
			this._FeeTransportHeads = new EntitySet<FeeTransportHead>(new Action<FeeTransportHead>(this.attach_FeeTransportHeads), new Action<FeeTransportHead>(this.detach_FeeTransportHeads));
			this._GradeGroups = new EntitySet<GradeGroup>(new Action<GradeGroup>(this.attach_GradeGroups), new Action<GradeGroup>(this.detach_GradeGroups));
			this._GradingSystems = new EntitySet<GradingSystem>(new Action<GradingSystem>(this.attach_GradingSystems), new Action<GradingSystem>(this.detach_GradingSystems));
			this._GradingSystems1 = new EntitySet<GradingSystem>(new Action<GradingSystem>(this.attach_GradingSystems1), new Action<GradingSystem>(this.detach_GradingSystems1));
			this._Heads = new EntitySet<Head>(new Action<Head>(this.attach_Heads), new Action<Head>(this.detach_Heads));
			this._Magazines = new EntitySet<Magazine>(new Action<Magazine>(this.attach_Magazines), new Action<Magazine>(this.detach_Magazines));
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._NewsPapers = new EntitySet<NewsPaper>(new Action<NewsPaper>(this.attach_NewsPapers), new Action<NewsPaper>(this.detach_NewsPapers));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._PageGroups = new EntitySet<PageGroup>(new Action<PageGroup>(this.attach_PageGroups), new Action<PageGroup>(this.detach_PageGroups));
			this._Pupils = new EntitySet<Pupil>(new Action<Pupil>(this.attach_Pupils), new Action<Pupil>(this.detach_Pupils));
			this._Pupils1 = new EntitySet<Pupil>(new Action<Pupil>(this.attach_Pupils1), new Action<Pupil>(this.detach_Pupils1));
			this._PupilAdmissions = new EntitySet<PupilAdmission>(new Action<PupilAdmission>(this.attach_PupilAdmissions), new Action<PupilAdmission>(this.detach_PupilAdmissions));
			this._PupilAdmissions1 = new EntitySet<PupilAdmission>(new Action<PupilAdmission>(this.attach_PupilAdmissions1), new Action<PupilAdmission>(this.detach_PupilAdmissions1));
			this._PupilAttendances = new EntitySet<PupilAttendance>(new Action<PupilAttendance>(this.attach_PupilAttendances), new Action<PupilAttendance>(this.detach_PupilAttendances));
			this._PupilAttendances1 = new EntitySet<PupilAttendance>(new Action<PupilAttendance>(this.attach_PupilAttendances1), new Action<PupilAttendance>(this.detach_PupilAttendances1));
			this._PupilCharges = new EntitySet<PupilCharge>(new Action<PupilCharge>(this.attach_PupilCharges), new Action<PupilCharge>(this.detach_PupilCharges));
			this._PupilCharges1 = new EntitySet<PupilCharge>(new Action<PupilCharge>(this.attach_PupilCharges1), new Action<PupilCharge>(this.detach_PupilCharges1));
			this._PupilGrades = new EntitySet<PupilGrade>(new Action<PupilGrade>(this.attach_PupilGrades), new Action<PupilGrade>(this.detach_PupilGrades));
			this._PupilGrades1 = new EntitySet<PupilGrade>(new Action<PupilGrade>(this.attach_PupilGrades1), new Action<PupilGrade>(this.detach_PupilGrades1));
			this._PupilMarks = new EntitySet<PupilMark>(new Action<PupilMark>(this.attach_PupilMarks), new Action<PupilMark>(this.detach_PupilMarks));
			this._PupilMarks1 = new EntitySet<PupilMark>(new Action<PupilMark>(this.attach_PupilMarks1), new Action<PupilMark>(this.detach_PupilMarks1));
			this._PupilSubjects = new EntitySet<PupilSubject>(new Action<PupilSubject>(this.attach_PupilSubjects), new Action<PupilSubject>(this.detach_PupilSubjects));
			this._PupilSubjects1 = new EntitySet<PupilSubject>(new Action<PupilSubject>(this.attach_PupilSubjects1), new Action<PupilSubject>(this.detach_PupilSubjects1));
			this._PupilWaiveOffs = new EntitySet<PupilWaiveOff>(new Action<PupilWaiveOff>(this.attach_PupilWaiveOffs), new Action<PupilWaiveOff>(this.detach_PupilWaiveOffs));
			this._PupilWaiveOffs1 = new EntitySet<PupilWaiveOff>(new Action<PupilWaiveOff>(this.attach_PupilWaiveOffs1), new Action<PupilWaiveOff>(this.detach_PupilWaiveOffs1));
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._Purchases1 = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases1), new Action<Purchase>(this.detach_Purchases1));
			this._PurchaseBooks = new EntitySet<PurchaseBook>(new Action<PurchaseBook>(this.attach_PurchaseBooks), new Action<PurchaseBook>(this.detach_PurchaseBooks));
			this._PurchaseBooks1 = new EntitySet<PurchaseBook>(new Action<PurchaseBook>(this.attach_PurchaseBooks1), new Action<PurchaseBook>(this.detach_PurchaseBooks1));
			this._PurchaseMagazines = new EntitySet<PurchaseMagazine>(new Action<PurchaseMagazine>(this.attach_PurchaseMagazines), new Action<PurchaseMagazine>(this.detach_PurchaseMagazines));
			this._PurchaseMagazines1 = new EntitySet<PurchaseMagazine>(new Action<PurchaseMagazine>(this.attach_PurchaseMagazines1), new Action<PurchaseMagazine>(this.detach_PurchaseMagazines1));
			this._PurchaseNewsPapers = new EntitySet<PurchaseNewsPaper>(new Action<PurchaseNewsPaper>(this.attach_PurchaseNewsPapers), new Action<PurchaseNewsPaper>(this.detach_PurchaseNewsPapers));
			this._PurchaseNewsPapers1 = new EntitySet<PurchaseNewsPaper>(new Action<PurchaseNewsPaper>(this.attach_PurchaseNewsPapers1), new Action<PurchaseNewsPaper>(this.detach_PurchaseNewsPapers1));
			this._Racks = new EntitySet<Rack>(new Action<Rack>(this.attach_Racks), new Action<Rack>(this.detach_Racks));
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._Registrations1 = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations1), new Action<Registration>(this.detach_Registrations1));
			this._RegistrationForms = new EntitySet<RegistrationForm>(new Action<RegistrationForm>(this.attach_RegistrationForms), new Action<RegistrationForm>(this.detach_RegistrationForms));
			this._RegistrationForms1 = new EntitySet<RegistrationForm>(new Action<RegistrationForm>(this.attach_RegistrationForms1), new Action<RegistrationForm>(this.detach_RegistrationForms1));
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Sections = new EntitySet<Section>(new Action<Section>(this.attach_Sections), new Action<Section>(this.detach_Sections));
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._StaffClasses = new EntitySet<StaffClass>(new Action<StaffClass>(this.attach_StaffClasses), new Action<StaffClass>(this.detach_StaffClasses));
			this._StaffLogins = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins), new Action<StaffLogin>(this.detach_StaffLogins));
			this._StaffLogins1 = new EntitySet<StaffLogin>(new Action<StaffLogin>(this.attach_StaffLogins1), new Action<StaffLogin>(this.detach_StaffLogins1));
			this._StaffLoginRoles = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles), new Action<StaffLoginRole>(this.detach_StaffLoginRoles));
			this._StaffLoginRoles1 = new EntitySet<StaffLoginRole>(new Action<StaffLoginRole>(this.attach_StaffLoginRoles1), new Action<StaffLoginRole>(this.detach_StaffLoginRoles1));
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._Subjects = new EntitySet<Subject>(new Action<Subject>(this.attach_Subjects), new Action<Subject>(this.detach_Subjects));
			this._Subjects1 = new EntitySet<Subject>(new Action<Subject>(this.attach_Subjects1), new Action<Subject>(this.detach_Subjects1));
			this._SubjectFullMarks = new EntitySet<SubjectFullMark>(new Action<SubjectFullMark>(this.attach_SubjectFullMarks), new Action<SubjectFullMark>(this.detach_SubjectFullMarks));
			this._SubjectFullMarks1 = new EntitySet<SubjectFullMark>(new Action<SubjectFullMark>(this.attach_SubjectFullMarks1), new Action<SubjectFullMark>(this.detach_SubjectFullMarks1));
			this._SubjectGradingScales = new EntitySet<SubjectGradingScale>(new Action<SubjectGradingScale>(this.attach_SubjectGradingScales), new Action<SubjectGradingScale>(this.detach_SubjectGradingScales));
			this._SubjectGradingScales1 = new EntitySet<SubjectGradingScale>(new Action<SubjectGradingScale>(this.attach_SubjectGradingScales1), new Action<SubjectGradingScale>(this.detach_SubjectGradingScales1));
			this._SubjectIds = new EntitySet<SubjectId>(new Action<SubjectId>(this.attach_SubjectIds), new Action<SubjectId>(this.detach_SubjectIds));
			this._SubjectIds1 = new EntitySet<SubjectId>(new Action<SubjectId>(this.attach_SubjectIds1), new Action<SubjectId>(this.detach_SubjectIds1));
			this._SubjectOptions = new EntitySet<SubjectOption>(new Action<SubjectOption>(this.attach_SubjectOptions), new Action<SubjectOption>(this.detach_SubjectOptions));
			this._SubjectOptions1 = new EntitySet<SubjectOption>(new Action<SubjectOption>(this.attach_SubjectOptions1), new Action<SubjectOption>(this.detach_SubjectOptions1));
			this._Suppliers = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers), new Action<Supplier>(this.detach_Suppliers));
			this._Suppliers1 = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers1), new Action<Supplier>(this.detach_Suppliers1));
			this._TransportBatches = new EntitySet<TransportBatch>(new Action<TransportBatch>(this.attach_TransportBatches), new Action<TransportBatch>(this.detach_TransportBatches));
			this._TransportDurations = new EntitySet<TransportDuration>(new Action<TransportDuration>(this.attach_TransportDurations), new Action<TransportDuration>(this.detach_TransportDurations));
			this._TransportDurations1 = new EntitySet<TransportDuration>(new Action<TransportDuration>(this.attach_TransportDurations1), new Action<TransportDuration>(this.detach_TransportDurations1));
			this._TransportPupils = new EntitySet<TransportPupil>(new Action<TransportPupil>(this.attach_TransportPupils), new Action<TransportPupil>(this.detach_TransportPupils));
			this._TransportPupils1 = new EntitySet<TransportPupil>(new Action<TransportPupil>(this.attach_TransportPupils1), new Action<TransportPupil>(this.detach_TransportPupils1));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			this._Vehicles1 = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles1), new Action<Vehicle>(this.detach_Vehicles1));
			this._School = default(EntityRef<School>);
			this._Staff = default(EntityRef<Staff>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._StaffLogin2 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffLoginId
		{
			get
			{
				return this._StaffLoginId;
			}
			set
			{
				if ((this._StaffLoginId != value))
				{
					this.OnStaffLoginIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginId = value;
					this.SendPropertyChanged("StaffLoginId");
					this.OnStaffLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int NOT NULL")]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Book", Storage="_Books", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Book1", Storage="_Books1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Book> Books1
		{
			get
			{
				return this._Books1;
			}
			set
			{
				this._Books1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_VehicleType", Storage="_VehicleTypes", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<VehicleType> VehicleTypes
		{
			get
			{
				return this._VehicleTypes;
			}
			set
			{
				this._VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookDetail", Storage="_BookDetails", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<BookDetail> BookDetails
		{
			get
			{
				return this._BookDetails;
			}
			set
			{
				this._BookDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookDetail1", Storage="_BookDetails1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<BookDetail> BookDetails1
		{
			get
			{
				return this._BookDetails1;
			}
			set
			{
				this._BookDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookFine", Storage="_BookFines", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<BookFine> BookFines
		{
			get
			{
				return this._BookFines;
			}
			set
			{
				this._BookFines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookFine1", Storage="_BookFines1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<BookFine> BookFines1
		{
			get
			{
				return this._BookFines1;
			}
			set
			{
				this._BookFines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookIssue", Storage="_BookIssues", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<BookIssue> BookIssues
		{
			get
			{
				return this._BookIssues;
			}
			set
			{
				this._BookIssues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookIssue1", Storage="_BookIssues1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<BookIssue> BookIssues1
		{
			get
			{
				return this._BookIssues1;
			}
			set
			{
				this._BookIssues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookRack", Storage="_BookRacks", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<BookRack> BookRacks
		{
			get
			{
				return this._BookRacks;
			}
			set
			{
				this._BookRacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_BookType", Storage="_BookTypes", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<BookType> BookTypes
		{
			get
			{
				return this._BookTypes;
			}
			set
			{
				this._BookTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_City", Storage="_Cities", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Class", Storage="_Classes", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassAttendance", Storage="_ClassAttendances", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<ClassAttendance> ClassAttendances
		{
			get
			{
				return this._ClassAttendances;
			}
			set
			{
				this._ClassAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassAttendance1", Storage="_ClassAttendances1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<ClassAttendance> ClassAttendances1
		{
			get
			{
				return this._ClassAttendances1;
			}
			set
			{
				this._ClassAttendances1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassExam", Storage="_ClassExams", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<ClassExam> ClassExams
		{
			get
			{
				return this._ClassExams;
			}
			set
			{
				this._ClassExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassExam1", Storage="_ClassExams1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<ClassExam> ClassExams1
		{
			get
			{
				return this._ClassExams1;
			}
			set
			{
				this._ClassExams1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassFullMark", Storage="_ClassFullMarks", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<ClassFullMark> ClassFullMarks
		{
			get
			{
				return this._ClassFullMarks;
			}
			set
			{
				this._ClassFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassFullMark1", Storage="_ClassFullMarks1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<ClassFullMark> ClassFullMarks1
		{
			get
			{
				return this._ClassFullMarks1;
			}
			set
			{
				this._ClassFullMarks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassSubject", Storage="_ClassSubjects", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<ClassSubject> ClassSubjects
		{
			get
			{
				return this._ClassSubjects;
			}
			set
			{
				this._ClassSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ClassSubject1", Storage="_ClassSubjects1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<ClassSubject> ClassSubjects1
		{
			get
			{
				return this._ClassSubjects1;
			}
			set
			{
				this._ClassSubjects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ExamFullMark", Storage="_ExamFullMarks", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<ExamFullMark> ExamFullMarks
		{
			get
			{
				return this._ExamFullMarks;
			}
			set
			{
				this._ExamFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_ExamFullMark1", Storage="_ExamFullMarks1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<ExamFullMark> ExamFullMarks1
		{
			get
			{
				return this._ExamFullMarks1;
			}
			set
			{
				this._ExamFullMarks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmission", Storage="_FeeAdmissions", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeeAdmission> FeeAdmissions
		{
			get
			{
				return this._FeeAdmissions;
			}
			set
			{
				this._FeeAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmission1", Storage="_FeeAdmissions1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeAdmission> FeeAdmissions1
		{
			get
			{
				return this._FeeAdmissions1;
			}
			set
			{
				this._FeeAdmissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeAdmissionHead", Storage="_FeeAdmissionHeads", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeAdmissionHead> FeeAdmissionHeads
		{
			get
			{
				return this._FeeAdmissionHeads;
			}
			set
			{
				this._FeeAdmissionHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClass", Storage="_FeeClasses", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeeClass> FeeClasses
		{
			get
			{
				return this._FeeClasses;
			}
			set
			{
				this._FeeClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClass1", Storage="_FeeClasses1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeClass> FeeClasses1
		{
			get
			{
				return this._FeeClasses1;
			}
			set
			{
				this._FeeClasses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeClassHead", Storage="_FeeClassHeads", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeClassHead> FeeClassHeads
		{
			get
			{
				return this._FeeClassHeads;
			}
			set
			{
				this._FeeClassHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePayment", Storage="_FeePayments", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeePayment> FeePayments
		{
			get
			{
				return this._FeePayments;
			}
			set
			{
				this._FeePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePayment1", Storage="_FeePayments1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeePayment> FeePayments1
		{
			get
			{
				return this._FeePayments1;
			}
			set
			{
				this._FeePayments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeePaymentDetail", Storage="_FeePaymentDetails", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeePaymentDetail> FeePaymentDetails
		{
			get
			{
				return this._FeePaymentDetails;
			}
			set
			{
				this._FeePaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistration", Storage="_FeeRegistrations", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeeRegistration> FeeRegistrations
		{
			get
			{
				return this._FeeRegistrations;
			}
			set
			{
				this._FeeRegistrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistration1", Storage="_FeeRegistrations1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeRegistration> FeeRegistrations1
		{
			get
			{
				return this._FeeRegistrations1;
			}
			set
			{
				this._FeeRegistrations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRegistrationHead", Storage="_FeeRegistrationHeads", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeRegistrationHead> FeeRegistrationHeads
		{
			get
			{
				return this._FeeRegistrationHeads;
			}
			set
			{
				this._FeeRegistrationHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeRemark", Storage="_FeeRemarks", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeRemark> FeeRemarks
		{
			get
			{
				return this._FeeRemarks;
			}
			set
			{
				this._FeeRemarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOption", Storage="_FeeSubjectOptions", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeSubjectOption> FeeSubjectOptions
		{
			get
			{
				return this._FeeSubjectOptions;
			}
			set
			{
				this._FeeSubjectOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOption1", Storage="_FeeSubjectOptions1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeeSubjectOption> FeeSubjectOptions1
		{
			get
			{
				return this._FeeSubjectOptions1;
			}
			set
			{
				this._FeeSubjectOptions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeSubjectOptionHead", Storage="_FeeSubjectOptionHeads", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeSubjectOptionHead> FeeSubjectOptionHeads
		{
			get
			{
				return this._FeeSubjectOptionHeads;
			}
			set
			{
				this._FeeSubjectOptionHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransport", Storage="_FeeTransports", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeTransport> FeeTransports
		{
			get
			{
				return this._FeeTransports;
			}
			set
			{
				this._FeeTransports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransport1", Storage="_FeeTransports1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<FeeTransport> FeeTransports1
		{
			get
			{
				return this._FeeTransports1;
			}
			set
			{
				this._FeeTransports1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_FeeTransportHead", Storage="_FeeTransportHeads", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<FeeTransportHead> FeeTransportHeads
		{
			get
			{
				return this._FeeTransportHeads;
			}
			set
			{
				this._FeeTransportHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradeGroup", Storage="_GradeGroups", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<GradeGroup> GradeGroups
		{
			get
			{
				return this._GradeGroups;
			}
			set
			{
				this._GradeGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradingSystem", Storage="_GradingSystems", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<GradingSystem> GradingSystems
		{
			get
			{
				return this._GradingSystems;
			}
			set
			{
				this._GradingSystems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_GradingSystem1", Storage="_GradingSystems1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<GradingSystem> GradingSystems1
		{
			get
			{
				return this._GradingSystems1;
			}
			set
			{
				this._GradingSystems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Head", Storage="_Heads", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Head> Heads
		{
			get
			{
				return this._Heads;
			}
			set
			{
				this._Heads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Magazine", Storage="_Magazines", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Magazine> Magazines
		{
			get
			{
				return this._Magazines;
			}
			set
			{
				this._Magazines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Menu", Storage="_Menus", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_NewsPaper", Storage="_NewsPapers", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<NewsPaper> NewsPapers
		{
			get
			{
				return this._NewsPapers;
			}
			set
			{
				this._NewsPapers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Page", Storage="_Pages", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PageGroup", Storage="_PageGroups", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PageGroup> PageGroups
		{
			get
			{
				return this._PageGroups;
			}
			set
			{
				this._PageGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Pupil", Storage="_Pupils", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Pupil> Pupils
		{
			get
			{
				return this._Pupils;
			}
			set
			{
				this._Pupils.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Pupil1", Storage="_Pupils1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Pupil> Pupils1
		{
			get
			{
				return this._Pupils1;
			}
			set
			{
				this._Pupils1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAdmission", Storage="_PupilAdmissions", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilAdmission> PupilAdmissions
		{
			get
			{
				return this._PupilAdmissions;
			}
			set
			{
				this._PupilAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAdmission1", Storage="_PupilAdmissions1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilAdmission> PupilAdmissions1
		{
			get
			{
				return this._PupilAdmissions1;
			}
			set
			{
				this._PupilAdmissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAttendance", Storage="_PupilAttendances", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilAttendance> PupilAttendances
		{
			get
			{
				return this._PupilAttendances;
			}
			set
			{
				this._PupilAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilAttendance1", Storage="_PupilAttendances1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilAttendance> PupilAttendances1
		{
			get
			{
				return this._PupilAttendances1;
			}
			set
			{
				this._PupilAttendances1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilCharge", Storage="_PupilCharges", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilCharge> PupilCharges
		{
			get
			{
				return this._PupilCharges;
			}
			set
			{
				this._PupilCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilCharge1", Storage="_PupilCharges1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilCharge> PupilCharges1
		{
			get
			{
				return this._PupilCharges1;
			}
			set
			{
				this._PupilCharges1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilGrade", Storage="_PupilGrades", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilGrade> PupilGrades
		{
			get
			{
				return this._PupilGrades;
			}
			set
			{
				this._PupilGrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilGrade1", Storage="_PupilGrades1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilGrade> PupilGrades1
		{
			get
			{
				return this._PupilGrades1;
			}
			set
			{
				this._PupilGrades1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilMark", Storage="_PupilMarks", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilMark> PupilMarks
		{
			get
			{
				return this._PupilMarks;
			}
			set
			{
				this._PupilMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilMark1", Storage="_PupilMarks1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilMark> PupilMarks1
		{
			get
			{
				return this._PupilMarks1;
			}
			set
			{
				this._PupilMarks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilSubject", Storage="_PupilSubjects", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilSubject> PupilSubjects
		{
			get
			{
				return this._PupilSubjects;
			}
			set
			{
				this._PupilSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilSubject1", Storage="_PupilSubjects1", ThisKey="StaffLoginId", OtherKey="UpatedBy")]
		public EntitySet<PupilSubject> PupilSubjects1
		{
			get
			{
				return this._PupilSubjects1;
			}
			set
			{
				this._PupilSubjects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilWaiveOff", Storage="_PupilWaiveOffs", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PupilWaiveOff> PupilWaiveOffs
		{
			get
			{
				return this._PupilWaiveOffs;
			}
			set
			{
				this._PupilWaiveOffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PupilWaiveOff1", Storage="_PupilWaiveOffs1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PupilWaiveOff> PupilWaiveOffs1
		{
			get
			{
				return this._PupilWaiveOffs1;
			}
			set
			{
				this._PupilWaiveOffs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Purchase", Storage="_Purchases", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Purchase1", Storage="_Purchases1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Purchase> Purchases1
		{
			get
			{
				return this._Purchases1;
			}
			set
			{
				this._Purchases1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseBook", Storage="_PurchaseBooks", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PurchaseBook> PurchaseBooks
		{
			get
			{
				return this._PurchaseBooks;
			}
			set
			{
				this._PurchaseBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseBook1", Storage="_PurchaseBooks1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PurchaseBook> PurchaseBooks1
		{
			get
			{
				return this._PurchaseBooks1;
			}
			set
			{
				this._PurchaseBooks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseMagazine", Storage="_PurchaseMagazines", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PurchaseMagazine> PurchaseMagazines
		{
			get
			{
				return this._PurchaseMagazines;
			}
			set
			{
				this._PurchaseMagazines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseMagazine1", Storage="_PurchaseMagazines1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PurchaseMagazine> PurchaseMagazines1
		{
			get
			{
				return this._PurchaseMagazines1;
			}
			set
			{
				this._PurchaseMagazines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseNewsPaper", Storage="_PurchaseNewsPapers", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<PurchaseNewsPaper> PurchaseNewsPapers
		{
			get
			{
				return this._PurchaseNewsPapers;
			}
			set
			{
				this._PurchaseNewsPapers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_PurchaseNewsPaper1", Storage="_PurchaseNewsPapers1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<PurchaseNewsPaper> PurchaseNewsPapers1
		{
			get
			{
				return this._PurchaseNewsPapers1;
			}
			set
			{
				this._PurchaseNewsPapers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Rack", Storage="_Racks", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Rack> Racks
		{
			get
			{
				return this._Racks;
			}
			set
			{
				this._Racks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Registration", Storage="_Registrations", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Registration1", Storage="_Registrations1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Registration> Registrations1
		{
			get
			{
				return this._Registrations1;
			}
			set
			{
				this._Registrations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RegistrationForm", Storage="_RegistrationForms", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<RegistrationForm> RegistrationForms
		{
			get
			{
				return this._RegistrationForms;
			}
			set
			{
				this._RegistrationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RegistrationForm1", Storage="_RegistrationForms1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<RegistrationForm> RegistrationForms1
		{
			get
			{
				return this._RegistrationForms1;
			}
			set
			{
				this._RegistrationForms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Role", Storage="_Roles", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_RoleMenu", Storage="_RoleMenus", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Section", Storage="_Sections", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Section> Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				this._Sections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Staff", Storage="_Staffs", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffClass", Storage="_StaffClasses", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<StaffClass> StaffClasses
		{
			get
			{
				return this._StaffClasses;
			}
			set
			{
				this._StaffClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin", Storage="_StaffLogins", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<StaffLogin> StaffLogins
		{
			get
			{
				return this._StaffLogins;
			}
			set
			{
				this._StaffLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin1", Storage="_StaffLogins1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<StaffLogin> StaffLogins1
		{
			get
			{
				return this._StaffLogins1;
			}
			set
			{
				this._StaffLogins1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole", Storage="_StaffLoginRoles", ThisKey="StaffLoginId", OtherKey="StaffLoginId")]
		public EntitySet<StaffLoginRole> StaffLoginRoles
		{
			get
			{
				return this._StaffLoginRoles;
			}
			set
			{
				this._StaffLoginRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole1", Storage="_StaffLoginRoles1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<StaffLoginRole> StaffLoginRoles1
		{
			get
			{
				return this._StaffLoginRoles1;
			}
			set
			{
				this._StaffLoginRoles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State", Storage="_States", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Subject", Storage="_Subjects", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Subject> Subjects
		{
			get
			{
				return this._Subjects;
			}
			set
			{
				this._Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Subject1", Storage="_Subjects1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Subject> Subjects1
		{
			get
			{
				return this._Subjects1;
			}
			set
			{
				this._Subjects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectFullMark", Storage="_SubjectFullMarks", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<SubjectFullMark> SubjectFullMarks
		{
			get
			{
				return this._SubjectFullMarks;
			}
			set
			{
				this._SubjectFullMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectFullMark1", Storage="_SubjectFullMarks1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<SubjectFullMark> SubjectFullMarks1
		{
			get
			{
				return this._SubjectFullMarks1;
			}
			set
			{
				this._SubjectFullMarks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectGradingScale", Storage="_SubjectGradingScales", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<SubjectGradingScale> SubjectGradingScales
		{
			get
			{
				return this._SubjectGradingScales;
			}
			set
			{
				this._SubjectGradingScales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectGradingScale1", Storage="_SubjectGradingScales1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<SubjectGradingScale> SubjectGradingScales1
		{
			get
			{
				return this._SubjectGradingScales1;
			}
			set
			{
				this._SubjectGradingScales1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectId", Storage="_SubjectIds", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<SubjectId> SubjectIds
		{
			get
			{
				return this._SubjectIds;
			}
			set
			{
				this._SubjectIds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectId1", Storage="_SubjectIds1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<SubjectId> SubjectIds1
		{
			get
			{
				return this._SubjectIds1;
			}
			set
			{
				this._SubjectIds1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectOption", Storage="_SubjectOptions", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<SubjectOption> SubjectOptions
		{
			get
			{
				return this._SubjectOptions;
			}
			set
			{
				this._SubjectOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectOption1", Storage="_SubjectOptions1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<SubjectOption> SubjectOptions1
		{
			get
			{
				return this._SubjectOptions1;
			}
			set
			{
				this._SubjectOptions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Supplier", Storage="_Suppliers", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Supplier> Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				this._Suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Supplier1", Storage="_Suppliers1", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Supplier> Suppliers1
		{
			get
			{
				return this._Suppliers1;
			}
			set
			{
				this._Suppliers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportBatch", Storage="_TransportBatches", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<TransportBatch> TransportBatches
		{
			get
			{
				return this._TransportBatches;
			}
			set
			{
				this._TransportBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportDuration", Storage="_TransportDurations", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<TransportDuration> TransportDurations
		{
			get
			{
				return this._TransportDurations;
			}
			set
			{
				this._TransportDurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportDuration1", Storage="_TransportDurations1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<TransportDuration> TransportDurations1
		{
			get
			{
				return this._TransportDurations1;
			}
			set
			{
				this._TransportDurations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportPupil", Storage="_TransportPupils", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<TransportPupil> TransportPupils
		{
			get
			{
				return this._TransportPupils;
			}
			set
			{
				this._TransportPupils.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportPupil1", Storage="_TransportPupils1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<TransportPupil> TransportPupils1
		{
			get
			{
				return this._TransportPupils1;
			}
			set
			{
				this._TransportPupils1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Vehicle", Storage="_Vehicles", ThisKey="StaffLoginId", OtherKey="CreatedBy")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Vehicle1", Storage="_Vehicles1", ThisKey="StaffLoginId", OtherKey="UpdatedBy")]
		public EntitySet<Vehicle> Vehicles1
		{
			get
			{
				return this._Vehicles1;
			}
			set
			{
				this._Vehicles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StaffLogin", Storage="_School", ThisKey="SchoolId", OtherKey="SchoolId", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StaffLogins.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StaffLogins.Add(this);
						this._SchoolId = value.SchoolId;
					}
					else
					{
						this._SchoolId = default(int);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_StaffLogin", Storage="_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.StaffLogins.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.StaffLogins.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.StaffLogins.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.StaffLogins.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLogin1", Storage="_StaffLogin2", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin2
		{
			get
			{
				return this._StaffLogin2.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin2.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin2.Entity = null;
						previousValue.StaffLogins1.Remove(this);
					}
					this._StaffLogin2.Entity = value;
					if ((value != null))
					{
						value.StaffLogins1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Books1(Book entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Books1(Book entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_BookDetails(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_BookDetails1(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_BookDetails1(BookDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_BookFines(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_BookFines1(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_BookFines1(BookFine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_BookIssues(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_BookIssues1(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_BookIssues1(BookIssue entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_BookTypes(BookType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_BookTypes(BookType entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ClassAttendances1(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_ClassAttendances1(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_ClassExams(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ClassExams1(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_ClassExams1(ClassExam entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_ClassFullMarks(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ClassFullMarks1(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_ClassFullMarks1(ClassFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ClassSubjects1(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_ClassSubjects1(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_ExamFullMarks(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_ExamFullMarks1(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_ExamFullMarks1(ExamFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeAdmissions(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeAdmissions(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeAdmissions1(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeeAdmissions1(FeeAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeAdmissionHeads(FeeAdmissionHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeClasses(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeClasses(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeClasses1(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeeClasses1(FeeClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeClassHeads(FeeClassHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeePayments(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeePayments1(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeePayments1(FeePayment entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeePaymentDetails(FeePaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeRegistrations(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeRegistrations1(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeeRegistrations1(FeeRegistration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeRegistrationHeads(FeeRegistrationHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeRegistrationHeads(FeeRegistrationHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeRemarks(FeeRemark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeSubjectOptions1(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeeSubjectOptions1(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeSubjectOptionHeads(FeeSubjectOptionHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeSubjectOptionHeads(FeeSubjectOptionHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_FeeTransports1(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_FeeTransports1(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_FeeTransportHeads(FeeTransportHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_FeeTransportHeads(FeeTransportHead entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_GradeGroups(GradeGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_GradeGroups(GradeGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_GradingSystems(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_GradingSystems1(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_GradingSystems1(GradingSystem entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Heads(Head entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Heads(Head entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Magazines(Magazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Magazines(Magazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_NewsPapers(NewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_NewsPapers(NewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PageGroups(PageGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PageGroups(PageGroup entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Pupils(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Pupils(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Pupils1(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Pupils1(Pupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilAdmissions(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilAdmissions1(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilAdmissions1(PupilAdmission entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilAttendances(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilAttendances1(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilAttendances1(PupilAttendance entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilCharges(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilCharges1(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilCharges1(PupilCharge entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilGrades1(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilGrades1(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilMarks1(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilMarks1(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilSubjects(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilSubjects1(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilSubjects1(PupilSubject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PupilWaiveOffs(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PupilWaiveOffs1(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PupilWaiveOffs1(PupilWaiveOff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Purchases1(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Purchases1(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PurchaseBooks(PurchaseBook entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PurchaseBooks(PurchaseBook entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PurchaseBooks1(PurchaseBook entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PurchaseBooks1(PurchaseBook entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PurchaseMagazines(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PurchaseMagazines1(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PurchaseMagazines1(PurchaseMagazine entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_PurchaseNewsPapers(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_PurchaseNewsPapers(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_PurchaseNewsPapers1(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_PurchaseNewsPapers1(PurchaseNewsPaper entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Racks(Rack entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Racks(Rack entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_RegistrationForms(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_RegistrationForms1(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_RegistrationForms1(RegistrationForm entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_StaffClasses(StaffClass entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_StaffLogins(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_StaffLogins1(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin2 = this;
		}
		
		private void detach_StaffLogins1(StaffLogin entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin2 = null;
		}
		
		private void attach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_StaffLoginRoles(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_StaffLoginRoles1(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_StaffLoginRoles1(StaffLoginRole entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Subjects(Subject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Subjects1(Subject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Subjects1(Subject entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_SubjectFullMarks(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_SubjectFullMarks1(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_SubjectFullMarks1(SubjectFullMark entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_SubjectGradingScales(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_SubjectGradingScales1(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_SubjectGradingScales1(SubjectGradingScale entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_SubjectIds(SubjectId entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_SubjectIds(SubjectId entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_SubjectIds1(SubjectId entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_SubjectIds1(SubjectId entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_SubjectOptions(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_SubjectOptions1(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_SubjectOptions1(SubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Suppliers1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Suppliers1(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_TransportBatches(TransportBatch entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_TransportBatches(TransportBatch entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_TransportDurations(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_TransportDurations(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_TransportDurations1(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_TransportDurations1(TransportDuration entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_TransportPupils1(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_TransportPupils1(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin = null;
		}
		
		private void attach_Vehicles1(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = this;
		}
		
		private void detach_Vehicles1(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.StaffLogin1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLoginRole")]
	public partial class StaffLoginRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffLoginRoleId;
		
		private int _StaffLoginId;
		
		private int _RoleId;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffLoginRoleIdChanging(int value);
    partial void OnStaffLoginRoleIdChanged();
    partial void OnStaffLoginIdChanging(int value);
    partial void OnStaffLoginIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public StaffLoginRole()
		{
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffLoginRoleId
		{
			get
			{
				return this._StaffLoginRoleId;
			}
			set
			{
				if ((this._StaffLoginRoleId != value))
				{
					this.OnStaffLoginRoleIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginRoleId = value;
					this.SendPropertyChanged("StaffLoginRoleId");
					this.OnStaffLoginRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffLoginId", DbType="Int NOT NULL")]
		public int StaffLoginId
		{
			get
			{
				return this._StaffLoginId;
			}
			set
			{
				if ((this._StaffLoginId != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffLoginIdChanging(value);
					this.SendPropertyChanging();
					this._StaffLoginId = value;
					this.SendPropertyChanged("StaffLoginId");
					this.OnStaffLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole", Storage="_StaffLogin", ThisKey="StaffLoginId", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.StaffLoginRoles.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles.Add(this);
						this._StaffLoginId = value.StaffLoginId;
					}
					else
					{
						this._StaffLoginId = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_StaffLoginRole1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.StaffLoginRoles1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_StaffLoginRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.StaffLoginRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.StaffLoginRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private string _StateName;
		
		private byte _Status;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<City> _Cities;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public State()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="StateId", OtherKey="StateId")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_State", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.States.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectId;
		
		private string _SubjectName;
		
		private int _ParentSubjectId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<BookRack> _BookRacks;
		
		private EntitySet<BookSubject> _BookSubjects;
		
		private EntitySet<ClassSubject> _ClassSubjects;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnParentSubjectIdChanging(int value);
    partial void OnParentSubjectIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Subject()
		{
			this._BookRacks = new EntitySet<BookRack>(new Action<BookRack>(this.attach_BookRacks), new Action<BookRack>(this.detach_BookRacks));
			this._BookSubjects = new EntitySet<BookSubject>(new Action<BookSubject>(this.attach_BookSubjects), new Action<BookSubject>(this.detach_BookSubjects));
			this._ClassSubjects = new EntitySet<ClassSubject>(new Action<ClassSubject>(this.attach_ClassSubjects), new Action<ClassSubject>(this.detach_ClassSubjects));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSubjectId", DbType="Int NOT NULL")]
		public int ParentSubjectId
		{
			get
			{
				return this._ParentSubjectId;
			}
			set
			{
				if ((this._ParentSubjectId != value))
				{
					this.OnParentSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ParentSubjectId = value;
					this.SendPropertyChanged("ParentSubjectId");
					this.OnParentSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BookRack", Storage="_BookRacks", ThisKey="SubjectId", OtherKey="SubjectId")]
		public EntitySet<BookRack> BookRacks
		{
			get
			{
				return this._BookRacks;
			}
			set
			{
				this._BookRacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BookSubject", Storage="_BookSubjects", ThisKey="SubjectId", OtherKey="SubjectId")]
		public EntitySet<BookSubject> BookSubjects
		{
			get
			{
				return this._BookSubjects;
			}
			set
			{
				this._BookSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ClassSubject", Storage="_ClassSubjects", ThisKey="SubjectId", OtherKey="SubjectId")]
		public EntitySet<ClassSubject> ClassSubjects
		{
			get
			{
				return this._ClassSubjects;
			}
			set
			{
				this._ClassSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Subject", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Subjects.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Subjects.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Subject1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Subjects1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Subjects1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_BookRacks(BookRack entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_BookSubjects(BookSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_BookSubjects(BookSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_ClassSubjects(ClassSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectFullMarks")]
	public partial class SubjectFullMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectFullMarksId;
		
		private byte _Term;
		
		private int _ClassSubjectId;
		
		private int _ClassExamId;
		
		private decimal _TheoryPassingMarks;
		
		private decimal _TheoryFullMarks;
		
		private decimal _PracticalPassingMarks;
		
		private decimal _PracticalFullMarks;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PupilMark> _PupilMarks;
		
		private EntityRef<ClassExam> _ClassExam;
		
		private EntityRef<ClassSubject> _ClassSubject;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectFullMarksIdChanging(int value);
    partial void OnSubjectFullMarksIdChanged();
    partial void OnTermChanging(byte value);
    partial void OnTermChanged();
    partial void OnClassSubjectIdChanging(int value);
    partial void OnClassSubjectIdChanged();
    partial void OnClassExamIdChanging(int value);
    partial void OnClassExamIdChanged();
    partial void OnTheoryPassingMarksChanging(decimal value);
    partial void OnTheoryPassingMarksChanged();
    partial void OnTheoryFullMarksChanging(decimal value);
    partial void OnTheoryFullMarksChanged();
    partial void OnPracticalPassingMarksChanging(decimal value);
    partial void OnPracticalPassingMarksChanged();
    partial void OnPracticalFullMarksChanging(decimal value);
    partial void OnPracticalFullMarksChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SubjectFullMark()
		{
			this._PupilMarks = new EntitySet<PupilMark>(new Action<PupilMark>(this.attach_PupilMarks), new Action<PupilMark>(this.detach_PupilMarks));
			this._ClassExam = default(EntityRef<ClassExam>);
			this._ClassSubject = default(EntityRef<ClassSubject>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectFullMarksId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectFullMarksId
		{
			get
			{
				return this._SubjectFullMarksId;
			}
			set
			{
				if ((this._SubjectFullMarksId != value))
				{
					this.OnSubjectFullMarksIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectFullMarksId = value;
					this.SendPropertyChanged("SubjectFullMarksId");
					this.OnSubjectFullMarksIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="TinyInt NOT NULL")]
		public byte Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectId", DbType="Int NOT NULL")]
		public int ClassSubjectId
		{
			get
			{
				return this._ClassSubjectId;
			}
			set
			{
				if ((this._ClassSubjectId != value))
				{
					if (this._ClassSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectId = value;
					this.SendPropertyChanged("ClassSubjectId");
					this.OnClassSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassExamId", DbType="Int NOT NULL")]
		public int ClassExamId
		{
			get
			{
				return this._ClassExamId;
			}
			set
			{
				if ((this._ClassExamId != value))
				{
					if (this._ClassExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassExamIdChanging(value);
					this.SendPropertyChanging();
					this._ClassExamId = value;
					this.SendPropertyChanged("ClassExamId");
					this.OnClassExamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryPassingMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal TheoryPassingMarks
		{
			get
			{
				return this._TheoryPassingMarks;
			}
			set
			{
				if ((this._TheoryPassingMarks != value))
				{
					this.OnTheoryPassingMarksChanging(value);
					this.SendPropertyChanging();
					this._TheoryPassingMarks = value;
					this.SendPropertyChanged("TheoryPassingMarks");
					this.OnTheoryPassingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryFullMarks", DbType="Decimal(18,0) NOT NULL")]
		public decimal TheoryFullMarks
		{
			get
			{
				return this._TheoryFullMarks;
			}
			set
			{
				if ((this._TheoryFullMarks != value))
				{
					this.OnTheoryFullMarksChanging(value);
					this.SendPropertyChanging();
					this._TheoryFullMarks = value;
					this.SendPropertyChanged("TheoryFullMarks");
					this.OnTheoryFullMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalPassingMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal PracticalPassingMarks
		{
			get
			{
				return this._PracticalPassingMarks;
			}
			set
			{
				if ((this._PracticalPassingMarks != value))
				{
					this.OnPracticalPassingMarksChanging(value);
					this.SendPropertyChanging();
					this._PracticalPassingMarks = value;
					this.SendPropertyChanged("PracticalPassingMarks");
					this.OnPracticalPassingMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalFullMarks", DbType="Decimal(18,0) NOT NULL")]
		public decimal PracticalFullMarks
		{
			get
			{
				return this._PracticalFullMarks;
			}
			set
			{
				if ((this._PracticalFullMarks != value))
				{
					this.OnPracticalFullMarksChanging(value);
					this.SendPropertyChanging();
					this._PracticalFullMarks = value;
					this.SendPropertyChanged("PracticalFullMarks");
					this.OnPracticalFullMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectFullMark_PupilMark", Storage="_PupilMarks", ThisKey="SubjectFullMarksId", OtherKey="SubjectFullMarkId")]
		public EntitySet<PupilMark> PupilMarks
		{
			get
			{
				return this._PupilMarks;
			}
			set
			{
				this._PupilMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassExam_SubjectFullMark", Storage="_ClassExam", ThisKey="ClassExamId", OtherKey="ClassExamId", IsForeignKey=true)]
		public ClassExam ClassExam
		{
			get
			{
				return this._ClassExam.Entity;
			}
			set
			{
				ClassExam previousValue = this._ClassExam.Entity;
				if (((previousValue != value) 
							|| (this._ClassExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassExam.Entity = null;
						previousValue.SubjectFullMarks.Remove(this);
					}
					this._ClassExam.Entity = value;
					if ((value != null))
					{
						value.SubjectFullMarks.Add(this);
						this._ClassExamId = value.ClassExamId;
					}
					else
					{
						this._ClassExamId = default(int);
					}
					this.SendPropertyChanged("ClassExam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_SubjectFullMark", Storage="_ClassSubject", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId", IsForeignKey=true)]
		public ClassSubject ClassSubject
		{
			get
			{
				return this._ClassSubject.Entity;
			}
			set
			{
				ClassSubject previousValue = this._ClassSubject.Entity;
				if (((previousValue != value) 
							|| (this._ClassSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassSubject.Entity = null;
						previousValue.SubjectFullMarks.Remove(this);
					}
					this._ClassSubject.Entity = value;
					if ((value != null))
					{
						value.SubjectFullMarks.Add(this);
						this._ClassSubjectId = value.ClassSubjectId;
					}
					else
					{
						this._ClassSubjectId = default(int);
					}
					this.SendPropertyChanged("ClassSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectFullMark", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.SubjectFullMarks.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.SubjectFullMarks.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectFullMark1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.SubjectFullMarks1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.SubjectFullMarks1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.SubjectFullMark = this;
		}
		
		private void detach_PupilMarks(PupilMark entity)
		{
			this.SendPropertyChanging();
			entity.SubjectFullMark = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectGradingScale")]
	public partial class SubjectGradingScale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectGradingScaleId;
		
		private int _ClassSubjectId;
		
		private byte _Term;
		
		private int _GradingScaleId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<PupilGrade> _PupilGrades;
		
		private EntityRef<ClassSubject> _ClassSubject;
		
		private EntityRef<GradingScale> _GradingScale;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectGradingScaleIdChanging(int value);
    partial void OnSubjectGradingScaleIdChanged();
    partial void OnClassSubjectIdChanging(int value);
    partial void OnClassSubjectIdChanged();
    partial void OnTermChanging(byte value);
    partial void OnTermChanged();
    partial void OnGradingScaleIdChanging(int value);
    partial void OnGradingScaleIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SubjectGradingScale()
		{
			this._PupilGrades = new EntitySet<PupilGrade>(new Action<PupilGrade>(this.attach_PupilGrades), new Action<PupilGrade>(this.detach_PupilGrades));
			this._ClassSubject = default(EntityRef<ClassSubject>);
			this._GradingScale = default(EntityRef<GradingScale>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectGradingScaleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectGradingScaleId
		{
			get
			{
				return this._SubjectGradingScaleId;
			}
			set
			{
				if ((this._SubjectGradingScaleId != value))
				{
					this.OnSubjectGradingScaleIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectGradingScaleId = value;
					this.SendPropertyChanged("SubjectGradingScaleId");
					this.OnSubjectGradingScaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSubjectId", DbType="Int NOT NULL")]
		public int ClassSubjectId
		{
			get
			{
				return this._ClassSubjectId;
			}
			set
			{
				if ((this._ClassSubjectId != value))
				{
					if (this._ClassSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ClassSubjectId = value;
					this.SendPropertyChanged("ClassSubjectId");
					this.OnClassSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="TinyInt NOT NULL")]
		public byte Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradingScaleId", DbType="Int NOT NULL")]
		public int GradingScaleId
		{
			get
			{
				return this._GradingScaleId;
			}
			set
			{
				if ((this._GradingScaleId != value))
				{
					if (this._GradingScale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradingScaleIdChanging(value);
					this.SendPropertyChanging();
					this._GradingScaleId = value;
					this.SendPropertyChanged("GradingScaleId");
					this.OnGradingScaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectGradingScale_PupilGrade", Storage="_PupilGrades", ThisKey="SubjectGradingScaleId", OtherKey="SubjectGradingScaleId")]
		public EntitySet<PupilGrade> PupilGrades
		{
			get
			{
				return this._PupilGrades;
			}
			set
			{
				this._PupilGrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassSubject_SubjectGradingScale", Storage="_ClassSubject", ThisKey="ClassSubjectId", OtherKey="ClassSubjectId", IsForeignKey=true)]
		public ClassSubject ClassSubject
		{
			get
			{
				return this._ClassSubject.Entity;
			}
			set
			{
				ClassSubject previousValue = this._ClassSubject.Entity;
				if (((previousValue != value) 
							|| (this._ClassSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassSubject.Entity = null;
						previousValue.SubjectGradingScales.Remove(this);
					}
					this._ClassSubject.Entity = value;
					if ((value != null))
					{
						value.SubjectGradingScales.Add(this);
						this._ClassSubjectId = value.ClassSubjectId;
					}
					else
					{
						this._ClassSubjectId = default(int);
					}
					this.SendPropertyChanged("ClassSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GradingScale_SubjectGradingScale", Storage="_GradingScale", ThisKey="GradingScaleId", OtherKey="GradingScaleId", IsForeignKey=true)]
		public GradingScale GradingScale
		{
			get
			{
				return this._GradingScale.Entity;
			}
			set
			{
				GradingScale previousValue = this._GradingScale.Entity;
				if (((previousValue != value) 
							|| (this._GradingScale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GradingScale.Entity = null;
						previousValue.SubjectGradingScales.Remove(this);
					}
					this._GradingScale.Entity = value;
					if ((value != null))
					{
						value.SubjectGradingScales.Add(this);
						this._GradingScaleId = value.GradingScaleId;
					}
					else
					{
						this._GradingScaleId = default(int);
					}
					this.SendPropertyChanged("GradingScale");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectGradingScale", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.SubjectGradingScales.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.SubjectGradingScales.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectGradingScale1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.SubjectGradingScales1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.SubjectGradingScales1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.SubjectGradingScale = this;
		}
		
		private void detach_PupilGrades(PupilGrade entity)
		{
			this.SendPropertyChanging();
			entity.SubjectGradingScale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectId")]
	public partial class SubjectId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectId1;
		
		private System.Nullable<int> _ParentSubjectId;
		
		private string _SubjectName;
		
		private string _SubjectCode;
		
		private bool _IsTheory;
		
		private bool _IsPractical;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<SubjectId> _SubjectId3;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<SubjectId> _SubjectId2;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectId1Changing(int value);
    partial void OnSubjectId1Changed();
    partial void OnParentSubjectIdChanging(System.Nullable<int> value);
    partial void OnParentSubjectIdChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnIsTheoryChanging(bool value);
    partial void OnIsTheoryChanged();
    partial void OnIsPracticalChanging(bool value);
    partial void OnIsPracticalChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SubjectId()
		{
			this._SubjectId3 = default(EntityRef<SubjectId>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._SubjectId2 = default(EntityRef<SubjectId>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SubjectId", Storage="_SubjectId1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectId1
		{
			get
			{
				return this._SubjectId1;
			}
			set
			{
				if ((this._SubjectId1 != value))
				{
					this.OnSubjectId1Changing(value);
					this.SendPropertyChanging();
					this._SubjectId1 = value;
					this.SendPropertyChanged("SubjectId1");
					this.OnSubjectId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSubjectId", DbType="Int")]
		public System.Nullable<int> ParentSubjectId
		{
			get
			{
				return this._ParentSubjectId;
			}
			set
			{
				if ((this._ParentSubjectId != value))
				{
					this.OnParentSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._ParentSubjectId = value;
					this.SendPropertyChanged("ParentSubjectId");
					this.OnParentSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="NVarChar(50)")]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTheory", DbType="Bit NOT NULL")]
		public bool IsTheory
		{
			get
			{
				return this._IsTheory;
			}
			set
			{
				if ((this._IsTheory != value))
				{
					this.OnIsTheoryChanging(value);
					this.SendPropertyChanging();
					this._IsTheory = value;
					this.SendPropertyChanged("IsTheory");
					this.OnIsTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPractical", DbType="Bit NOT NULL")]
		public bool IsPractical
		{
			get
			{
				return this._IsPractical;
			}
			set
			{
				if ((this._IsPractical != value))
				{
					this.OnIsPracticalChanging(value);
					this.SendPropertyChanging();
					this._IsPractical = value;
					this.SendPropertyChanged("IsPractical");
					this.OnIsPracticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectId_SubjectId", Storage="_SubjectId3", ThisKey="SubjectId1", OtherKey="SubjectId1", IsUnique=true, IsForeignKey=false)]
		public SubjectId SubjectId3
		{
			get
			{
				return this._SubjectId3.Entity;
			}
			set
			{
				SubjectId previousValue = this._SubjectId3.Entity;
				if (((previousValue != value) 
							|| (this._SubjectId3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectId3.Entity = null;
						previousValue.SubjectId2 = null;
					}
					this._SubjectId3.Entity = value;
					if ((value != null))
					{
						value.SubjectId2 = this;
					}
					this.SendPropertyChanged("SubjectId3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectId", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.SubjectIds.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.SubjectIds.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectId_SubjectId", Storage="_SubjectId2", ThisKey="SubjectId1", OtherKey="SubjectId1", IsForeignKey=true)]
		public SubjectId SubjectId2
		{
			get
			{
				return this._SubjectId2.Entity;
			}
			set
			{
				SubjectId previousValue = this._SubjectId2.Entity;
				if (((previousValue != value) 
							|| (this._SubjectId2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectId2.Entity = null;
						previousValue.SubjectId3 = null;
					}
					this._SubjectId2.Entity = value;
					if ((value != null))
					{
						value.SubjectId3 = this;
						this._SubjectId1 = value.SubjectId1;
					}
					else
					{
						this._SubjectId1 = default(int);
					}
					this.SendPropertyChanged("SubjectId2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectId1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.SubjectIds1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.SubjectIds1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectOption")]
	public partial class SubjectOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectOptionId;
		
		private int _ClassId;
		
		private int _SessionId;
		
		private string _SubjectOptionName;
		
		private byte _Status;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<FeeSubjectOption> _FeeSubjectOptions;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<Session> _Session;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectOptionIdChanging(int value);
    partial void OnSubjectOptionIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSubjectOptionNameChanging(string value);
    partial void OnSubjectOptionNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SubjectOption()
		{
			this._FeeSubjectOptions = new EntitySet<FeeSubjectOption>(new Action<FeeSubjectOption>(this.attach_FeeSubjectOptions), new Action<FeeSubjectOption>(this.detach_FeeSubjectOptions));
			this._Class = default(EntityRef<Class>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._Session = default(EntityRef<Session>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectOptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectOptionId
		{
			get
			{
				return this._SubjectOptionId;
			}
			set
			{
				if ((this._SubjectOptionId != value))
				{
					this.OnSubjectOptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectOptionId = value;
					this.SendPropertyChanged("SubjectOptionId");
					this.OnSubjectOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectOptionName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string SubjectOptionName
		{
			get
			{
				return this._SubjectOptionName;
			}
			set
			{
				if ((this._SubjectOptionName != value))
				{
					this.OnSubjectOptionNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectOptionName = value;
					this.SendPropertyChanged("SubjectOptionName");
					this.OnSubjectOptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectOption_FeeSubjectOption", Storage="_FeeSubjectOptions", ThisKey="SubjectOptionId", OtherKey="SubjectOptionId")]
		public EntitySet<FeeSubjectOption> FeeSubjectOptions
		{
			get
			{
				return this._FeeSubjectOptions;
			}
			set
			{
				this._FeeSubjectOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SubjectOption", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.SubjectOptions.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.SubjectOptions.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectOption", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.SubjectOptions.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.SubjectOptions.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_SubjectOption1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.SubjectOptions1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.SubjectOptions1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Session_SubjectOption", Storage="_Session", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public Session Session
		{
			get
			{
				return this._Session.Entity;
			}
			set
			{
				Session previousValue = this._Session.Entity;
				if (((previousValue != value) 
							|| (this._Session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Session.Entity = null;
						previousValue.SubjectOptions.Remove(this);
					}
					this._Session.Entity = value;
					if ((value != null))
					{
						value.SubjectOptions.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Session");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.SubjectOption = this;
		}
		
		private void detach_FeeSubjectOptions(FeeSubjectOption entity)
		{
			this.SendPropertyChanging();
			entity.SubjectOption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierId;
		
		private string _SupplierName;
		
		private string _MobileNo;
		
		private string _Email;
		
		private string _GSTNo;
		
		private int _CityId;
		
		private string _Address;
		
		private string _SupplierFor;
		
		private byte _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntityRef<City> _City;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGSTNoChanging(string value);
    partial void OnGSTNoChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSupplierForChanging(string value);
    partial void OnSupplierForChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Supplier()
		{
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._City = default(EntityRef<City>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSTNo", DbType="NVarChar(250)")]
		public string GSTNo
		{
			get
			{
				return this._GSTNo;
			}
			set
			{
				if ((this._GSTNo != value))
				{
					this.OnGSTNoChanging(value);
					this.SendPropertyChanging();
					this._GSTNo = value;
					this.SendPropertyChanged("GSTNo");
					this.OnGSTNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierFor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierFor
		{
			get
			{
				return this._SupplierFor;
			}
			set
			{
				if ((this._SupplierFor != value))
				{
					this.OnSupplierForChanging(value);
					this.SendPropertyChanging();
					this._SupplierFor = value;
					this.SendPropertyChanged("SupplierFor");
					this.OnSupplierForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Purchase", Storage="_Purchases", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Supplier", Storage="_City", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Suppliers.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Suppliers.Add(this);
						this._CityId = value.CityId;
					}
					else
					{
						this._CityId = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Supplier", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Suppliers.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Suppliers.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Supplier1", Storage="_StaffLogin1", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Suppliers1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Suppliers1.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportBatch")]
	public partial class TransportBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransportBatchId;
		
		private string _BatchName;
		
		private int _SchoolId;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private byte _Status;
		
		private EntitySet<FeeTransport> _FeeTransports;
		
		private EntitySet<TransportPupil> _TransportPupils;
		
		private EntityRef<School> _School;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportBatchIdChanging(int value);
    partial void OnTransportBatchIdChanged();
    partial void OnBatchNameChanging(string value);
    partial void OnBatchNameChanged();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TransportBatch()
		{
			this._FeeTransports = new EntitySet<FeeTransport>(new Action<FeeTransport>(this.attach_FeeTransports), new Action<FeeTransport>(this.detach_FeeTransports));
			this._TransportPupils = new EntitySet<TransportPupil>(new Action<TransportPupil>(this.attach_TransportPupils), new Action<TransportPupil>(this.detach_TransportPupils));
			this._School = default(EntityRef<School>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportBatchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransportBatchId
		{
			get
			{
				return this._TransportBatchId;
			}
			set
			{
				if ((this._TransportBatchId != value))
				{
					this.OnTransportBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TransportBatchId = value;
					this.SendPropertyChanged("TransportBatchId");
					this.OnTransportBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BatchName
		{
			get
			{
				return this._BatchName;
			}
			set
			{
				if ((this._BatchName != value))
				{
					this.OnBatchNameChanging(value);
					this.SendPropertyChanging();
					this._BatchName = value;
					this.SendPropertyChanged("BatchName");
					this.OnBatchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int NOT NULL")]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportBatch_FeeTransport", Storage="_FeeTransports", ThisKey="TransportBatchId", OtherKey="TransportBatchId")]
		public EntitySet<FeeTransport> FeeTransports
		{
			get
			{
				return this._FeeTransports;
			}
			set
			{
				this._FeeTransports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportBatch_TransportPupil", Storage="_TransportPupils", ThisKey="TransportBatchId", OtherKey="TransportBatchId")]
		public EntitySet<TransportPupil> TransportPupils
		{
			get
			{
				return this._TransportPupils;
			}
			set
			{
				this._TransportPupils.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TransportBatch", Storage="_School", ThisKey="SchoolId", OtherKey="SchoolId", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.TransportBatches.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.TransportBatches.Add(this);
						this._SchoolId = value.SchoolId;
					}
					else
					{
						this._SchoolId = default(int);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportBatch", Storage="_StaffLogin", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.TransportBatches.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.TransportBatches.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.TransportBatch = this;
		}
		
		private void detach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.TransportBatch = null;
		}
		
		private void attach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.TransportBatch = this;
		}
		
		private void detach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.TransportBatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportDuration")]
	public partial class TransportDuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransportDurationId;
		
		private int _SchoolId;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<FeeTransport> _FeeTransports;
		
		private EntityRef<School> _School;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportDurationIdChanging(int value);
    partial void OnTransportDurationIdChanged();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public TransportDuration()
		{
			this._FeeTransports = new EntitySet<FeeTransport>(new Action<FeeTransport>(this.attach_FeeTransports), new Action<FeeTransport>(this.detach_FeeTransports));
			this._School = default(EntityRef<School>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportDurationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransportDurationId
		{
			get
			{
				return this._TransportDurationId;
			}
			set
			{
				if ((this._TransportDurationId != value))
				{
					this.OnTransportDurationIdChanging(value);
					this.SendPropertyChanging();
					this._TransportDurationId = value;
					this.SendPropertyChanged("TransportDurationId");
					this.OnTransportDurationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int NOT NULL")]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="Date")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportDuration_FeeTransport", Storage="_FeeTransports", ThisKey="TransportDurationId", OtherKey="TransportDurationId")]
		public EntitySet<FeeTransport> FeeTransports
		{
			get
			{
				return this._FeeTransports;
			}
			set
			{
				this._FeeTransports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_TransportDuration", Storage="_School", ThisKey="SchoolId", OtherKey="SchoolId", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.TransportDurations.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.TransportDurations.Add(this);
						this._SchoolId = value.SchoolId;
					}
					else
					{
						this._SchoolId = default(int);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportDuration", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.TransportDurations.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.TransportDurations.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportDuration1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.TransportDurations1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.TransportDurations1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.TransportDuration = this;
		}
		
		private void detach_FeeTransports(FeeTransport entity)
		{
			this.SendPropertyChanging();
			entity.TransportDuration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportPupil")]
	public partial class TransportPupil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransportPupilId;
		
		private int _PupilId;
		
		private int _TransportBatchId;
		
		private int _VehicleId;
		
		private string _PickupAddress;
		
		private System.TimeSpan _PickupTime;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<Pupil> _Pupil;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<TransportBatch> _TransportBatch;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportPupilIdChanging(int value);
    partial void OnTransportPupilIdChanged();
    partial void OnPupilIdChanging(int value);
    partial void OnPupilIdChanged();
    partial void OnTransportBatchIdChanging(int value);
    partial void OnTransportBatchIdChanged();
    partial void OnVehicleIdChanging(int value);
    partial void OnVehicleIdChanged();
    partial void OnPickupAddressChanging(string value);
    partial void OnPickupAddressChanged();
    partial void OnPickupTimeChanging(System.TimeSpan value);
    partial void OnPickupTimeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public TransportPupil()
		{
			this._Pupil = default(EntityRef<Pupil>);
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._TransportBatch = default(EntityRef<TransportBatch>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportPupilId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransportPupilId
		{
			get
			{
				return this._TransportPupilId;
			}
			set
			{
				if ((this._TransportPupilId != value))
				{
					this.OnTransportPupilIdChanging(value);
					this.SendPropertyChanging();
					this._TransportPupilId = value;
					this.SendPropertyChanged("TransportPupilId");
					this.OnTransportPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilId", DbType="Int NOT NULL")]
		public int PupilId
		{
			get
			{
				return this._PupilId;
			}
			set
			{
				if ((this._PupilId != value))
				{
					if (this._Pupil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPupilIdChanging(value);
					this.SendPropertyChanging();
					this._PupilId = value;
					this.SendPropertyChanged("PupilId");
					this.OnPupilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportBatchId", DbType="Int NOT NULL")]
		public int TransportBatchId
		{
			get
			{
				return this._TransportBatchId;
			}
			set
			{
				if ((this._TransportBatchId != value))
				{
					if (this._TransportBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransportBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TransportBatchId = value;
					this.SendPropertyChanged("TransportBatchId");
					this.OnTransportBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", DbType="Int NOT NULL")]
		public int VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickupAddress", DbType="NVarChar(150)")]
		public string PickupAddress
		{
			get
			{
				return this._PickupAddress;
			}
			set
			{
				if ((this._PickupAddress != value))
				{
					this.OnPickupAddressChanging(value);
					this.SendPropertyChanging();
					this._PickupAddress = value;
					this.SendPropertyChanged("PickupAddress");
					this.OnPickupAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickupTime", DbType="Time NOT NULL")]
		public System.TimeSpan PickupTime
		{
			get
			{
				return this._PickupTime;
			}
			set
			{
				if ((this._PickupTime != value))
				{
					this.OnPickupTimeChanging(value);
					this.SendPropertyChanging();
					this._PickupTime = value;
					this.SendPropertyChanged("PickupTime");
					this.OnPickupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pupil_TransportPupil", Storage="_Pupil", ThisKey="PupilId", OtherKey="PupilId", IsForeignKey=true)]
		public Pupil Pupil
		{
			get
			{
				return this._Pupil.Entity;
			}
			set
			{
				Pupil previousValue = this._Pupil.Entity;
				if (((previousValue != value) 
							|| (this._Pupil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pupil.Entity = null;
						previousValue.TransportPupils.Remove(this);
					}
					this._Pupil.Entity = value;
					if ((value != null))
					{
						value.TransportPupils.Add(this);
						this._PupilId = value.PupilId;
					}
					else
					{
						this._PupilId = default(int);
					}
					this.SendPropertyChanged("Pupil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportPupil", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.TransportPupils.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.TransportPupils.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_TransportPupil1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.TransportPupils1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.TransportPupils1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportBatch_TransportPupil", Storage="_TransportBatch", ThisKey="TransportBatchId", OtherKey="TransportBatchId", IsForeignKey=true)]
		public TransportBatch TransportBatch
		{
			get
			{
				return this._TransportBatch.Entity;
			}
			set
			{
				TransportBatch previousValue = this._TransportBatch.Entity;
				if (((previousValue != value) 
							|| (this._TransportBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportBatch.Entity = null;
						previousValue.TransportPupils.Remove(this);
					}
					this._TransportBatch.Entity = value;
					if ((value != null))
					{
						value.TransportPupils.Add(this);
						this._TransportBatchId = value.TransportBatchId;
					}
					else
					{
						this._TransportBatchId = default(int);
					}
					this.SendPropertyChanged("TransportBatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_TransportPupil", Storage="_Vehicle", ThisKey="VehicleId", OtherKey="VehicleId", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.TransportPupils.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.TransportPupils.Add(this);
						this._VehicleId = value.VehicleId;
					}
					else
					{
						this._VehicleId = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehicleId;
		
		private int _VehicleTypeId;
		
		private string _VehicleNo;
		
		private string _VehicleName;
		
		private string _OwnerName;
		
		private string _OwnerMobileNo;
		
		private int _NoOfSeats;
		
		private byte _Status;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<TransportPupil> _TransportPupils;
		
		private EntityRef<StaffLogin> _StaffLogin;
		
		private EntityRef<StaffLogin> _StaffLogin1;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleIdChanging(int value);
    partial void OnVehicleIdChanged();
    partial void OnVehicleTypeIdChanging(int value);
    partial void OnVehicleTypeIdChanged();
    partial void OnVehicleNoChanging(string value);
    partial void OnVehicleNoChanged();
    partial void OnVehicleNameChanging(string value);
    partial void OnVehicleNameChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnOwnerMobileNoChanging(string value);
    partial void OnOwnerMobileNoChanged();
    partial void OnNoOfSeatsChanging(int value);
    partial void OnNoOfSeatsChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Vehicle()
		{
			this._TransportPupils = new EntitySet<TransportPupil>(new Action<TransportPupil>(this.attach_TransportPupils), new Action<TransportPupil>(this.detach_TransportPupils));
			this._StaffLogin = default(EntityRef<StaffLogin>);
			this._StaffLogin1 = default(EntityRef<StaffLogin>);
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeId", DbType="Int NOT NULL")]
		public int VehicleTypeId
		{
			get
			{
				return this._VehicleTypeId;
			}
			set
			{
				if ((this._VehicleTypeId != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeId = value;
					this.SendPropertyChanged("VehicleTypeId");
					this.OnVehicleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleNo
		{
			get
			{
				return this._VehicleNo;
			}
			set
			{
				if ((this._VehicleNo != value))
				{
					this.OnVehicleNoChanging(value);
					this.SendPropertyChanging();
					this._VehicleNo = value;
					this.SendPropertyChanged("VehicleNo");
					this.OnVehicleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleName", DbType="NVarChar(100)")]
		public string VehicleName
		{
			get
			{
				return this._VehicleName;
			}
			set
			{
				if ((this._VehicleName != value))
				{
					this.OnVehicleNameChanging(value);
					this.SendPropertyChanging();
					this._VehicleName = value;
					this.SendPropertyChanged("VehicleName");
					this.OnVehicleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(150)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerMobileNo", DbType="NVarChar(50)")]
		public string OwnerMobileNo
		{
			get
			{
				return this._OwnerMobileNo;
			}
			set
			{
				if ((this._OwnerMobileNo != value))
				{
					this.OnOwnerMobileNoChanging(value);
					this.SendPropertyChanging();
					this._OwnerMobileNo = value;
					this.SendPropertyChanged("OwnerMobileNo");
					this.OnOwnerMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfSeats", DbType="Int NOT NULL")]
		public int NoOfSeats
		{
			get
			{
				return this._NoOfSeats;
			}
			set
			{
				if ((this._NoOfSeats != value))
				{
					this.OnNoOfSeatsChanging(value);
					this.SendPropertyChanging();
					this._NoOfSeats = value;
					this.SendPropertyChanged("NoOfSeats");
					this.OnNoOfSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._StaffLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._StaffLogin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_TransportPupil", Storage="_TransportPupils", ThisKey="VehicleId", OtherKey="VehicleId")]
		public EntitySet<TransportPupil> TransportPupils
		{
			get
			{
				return this._TransportPupils;
			}
			set
			{
				this._TransportPupils.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Vehicle", Storage="_StaffLogin", ThisKey="CreatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin
		{
			get
			{
				return this._StaffLogin.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._StaffLogin.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._CreatedBy = value.StaffLoginId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("StaffLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffLogin_Vehicle1", Storage="_StaffLogin1", ThisKey="UpdatedBy", OtherKey="StaffLoginId", IsForeignKey=true)]
		public StaffLogin StaffLogin1
		{
			get
			{
				return this._StaffLogin1.Entity;
			}
			set
			{
				StaffLogin previousValue = this._StaffLogin1.Entity;
				if (((previousValue != value) 
							|| (this._StaffLogin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffLogin1.Entity = null;
						previousValue.Vehicles1.Remove(this);
					}
					this._StaffLogin1.Entity = value;
					if ((value != null))
					{
						value.Vehicles1.Add(this);
						this._UpdatedBy = value.StaffLoginId;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffLogin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_VehicleType", ThisKey="VehicleTypeId", OtherKey="VehicleTypeId", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._VehicleTypeId = value.VehicleTypeId;
					}
					else
					{
						this._VehicleTypeId = default(int);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_TransportPupils(TransportPupil entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
}
#pragma warning restore 1591
